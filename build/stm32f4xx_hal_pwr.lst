ARM GAS  /tmp/cc3xrTCL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWR_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWR_DeInit:
  27              	.LFB133:
  28              		.file 1 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  15:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  16:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * are permitted provided that the following conditions are met:
  18:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer.
  20:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *      and/or other materials provided with the distribution.
  23:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *      may be used to endorse or promote products derived from this software
  25:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *      without specific prior written permission.
  26:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  27:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cc3xrTCL.s 			page 2


  31:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  38:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  39:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  40:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  41:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  42:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  43:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  44:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  45:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  46:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  47:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  48:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  49:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  50:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  51:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  52:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  53:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  54:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  55:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  56:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  57:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  58:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  59:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  60:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  61:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  62:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  63:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  64:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  65:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  66:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  67:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  68:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  69:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  70:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  71:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  72:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  73:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  74:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  75:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  76:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  77:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  78:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  79:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  80:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  81:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  82:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  83:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  84:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  85:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  86:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  87:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
ARM GAS  /tmp/cc3xrTCL.s 			page 3


  88:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  89:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  90:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  91:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  92:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  93:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  94:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  95:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  96:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  97:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  98:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  99:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
 100:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 101:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 102:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 103:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 104:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 105:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
 106:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 107:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 108:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
 109:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  29              		.loc 1 109 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 110:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  34              		.loc 1 110 3 view .LVU1
  35 0000 044B     		ldr	r3, .L2
  36 0002 1A6A     		ldr	r2, [r3, #32]
  37 0004 42F08052 		orr	r2, r2, #268435456
  38 0008 1A62     		str	r2, [r3, #32]
 111:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  39              		.loc 1 111 3 view .LVU2
  40 000a 1A6A     		ldr	r2, [r3, #32]
  41 000c 22F08052 		bic	r2, r2, #268435456
  42 0010 1A62     		str	r2, [r3, #32]
 112:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  43              		.loc 1 112 1 is_stmt 0 view .LVU3
  44 0012 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0014 00380240 		.word	1073887232
  49              		.cfi_endproc
  50              	.LFE133:
  52              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_PWR_EnableBkUpAccess
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	HAL_PWR_EnableBkUpAccess:
  60              	.LFB134:
 113:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 114:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
ARM GAS  /tmp/cc3xrTCL.s 			page 4


 115:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 116:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 117:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 118:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 119:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 120:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 121:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 122:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  61              		.loc 1 122 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 123:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  66              		.loc 1 123 3 view .LVU5
  67              		.loc 1 123 32 is_stmt 0 view .LVU6
  68 0000 014B     		ldr	r3, .L5
  69 0002 0122     		movs	r2, #1
  70 0004 1A62     		str	r2, [r3, #32]
 124:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  71              		.loc 1 124 1 view .LVU7
  72 0006 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0008 00000E42 		.word	1108213760
  77              		.cfi_endproc
  78              	.LFE134:
  80              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_PWR_DisableBkUpAccess
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  87              	HAL_PWR_DisableBkUpAccess:
  88              	.LFB135:
 125:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 126:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 127:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 128:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 129:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 130:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 131:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 132:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 133:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 134:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  89              		.loc 1 134 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 135:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
  94              		.loc 1 135 3 view .LVU9
  95              		.loc 1 135 32 is_stmt 0 view .LVU10
  96 0000 014B     		ldr	r3, .L8
  97 0002 0022     		movs	r2, #0
  98 0004 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/cc3xrTCL.s 			page 5


 136:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  99              		.loc 1 136 1 view .LVU11
 100 0006 7047     		bx	lr
 101              	.L9:
 102              		.align	2
 103              	.L8:
 104 0008 00000E42 		.word	1108213760
 105              		.cfi_endproc
 106              	.LFE135:
 108              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_PWR_ConfigPVD
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	HAL_PWR_ConfigPVD:
 116              	.LVL0:
 117              	.LFB136:
 137:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 138:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 139:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 140:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 141:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 142:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 143:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 144:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 145:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 146:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 147:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 149:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 150:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 151:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 152:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 153:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 154:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 155:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 156:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 157:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 158:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 159:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 160:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 161:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 162:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 163:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 164:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 165:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 166:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 167:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 168:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 169:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 170:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 171:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 172:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 173:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 174:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 175:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
ARM GAS  /tmp/cc3xrTCL.s 			page 6


 176:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 177:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 178:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 179:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 180:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 181:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 182:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 183:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 184:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 185:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 186:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 187:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 188:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 189:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 196:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 198:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 199:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 201:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 202:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 208:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
 210:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 211:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 212:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 213:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 214:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 215:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 216:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 217:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 218:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 219:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 220:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 221:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 222:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 223:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 224:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 225:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 226:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 227:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 228:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 229:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 230:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 231:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 232:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
ARM GAS  /tmp/cc3xrTCL.s 			page 7


 233:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 234:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 235:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 236:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 237:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 238:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 239:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 240:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 241:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 242:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 243:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 244:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 245:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 246:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 247:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 248:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 249:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 250:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 251:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 252:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 253:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 254:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 255:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 256:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 257:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 258:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 259:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 260:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 261:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 262:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 263:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 264:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 265:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 266:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 267:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 268:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 269:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 118              		.loc 1 269 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 270:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 271:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 123              		.loc 1 271 3 view .LVU13
 272:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 124              		.loc 1 272 3 view .LVU14
 273:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 274:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 275:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 125              		.loc 1 275 3 view .LVU15
 126 0000 1E4A     		ldr	r2, .L15
 127 0002 1368     		ldr	r3, [r2]
 128 0004 23F0E003 		bic	r3, r3, #224
 129 0008 0168     		ldr	r1, [r0]
 130 000a 0B43     		orrs	r3, r3, r1
 131 000c 1360     		str	r3, [r2]
ARM GAS  /tmp/cc3xrTCL.s 			page 8


 276:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 277:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 278:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 132              		.loc 1 278 3 view .LVU16
 133 000e 1C4B     		ldr	r3, .L15+4
 134 0010 5A68     		ldr	r2, [r3, #4]
 135 0012 22F48032 		bic	r2, r2, #65536
 136 0016 5A60     		str	r2, [r3, #4]
 279:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 137              		.loc 1 279 3 view .LVU17
 138 0018 1A68     		ldr	r2, [r3]
 139 001a 22F48032 		bic	r2, r2, #65536
 140 001e 1A60     		str	r2, [r3]
 280:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 141              		.loc 1 280 3 view .LVU18
 142 0020 9A68     		ldr	r2, [r3, #8]
 143 0022 22F48032 		bic	r2, r2, #65536
 144 0026 9A60     		str	r2, [r3, #8]
 281:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 145              		.loc 1 281 3 view .LVU19
 146 0028 DA68     		ldr	r2, [r3, #12]
 147 002a 22F48032 		bic	r2, r2, #65536
 148 002e DA60     		str	r2, [r3, #12]
 282:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 283:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 284:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 149              		.loc 1 284 3 view .LVU20
 150              		.loc 1 284 17 is_stmt 0 view .LVU21
 151 0030 4368     		ldr	r3, [r0, #4]
 152              		.loc 1 284 5 view .LVU22
 153 0032 13F4803F 		tst	r3, #65536
 154 0036 04D0     		beq	.L11
 285:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 286:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 155              		.loc 1 286 5 is_stmt 1 view .LVU23
 156 0038 114A     		ldr	r2, .L15+4
 157 003a 1368     		ldr	r3, [r2]
 158 003c 43F48033 		orr	r3, r3, #65536
 159 0040 1360     		str	r3, [r2]
 160              	.L11:
 287:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 288:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 289:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 290:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 161              		.loc 1 290 3 view .LVU24
 162              		.loc 1 290 17 is_stmt 0 view .LVU25
 163 0042 4368     		ldr	r3, [r0, #4]
 164              		.loc 1 290 5 view .LVU26
 165 0044 13F4003F 		tst	r3, #131072
 166 0048 04D0     		beq	.L12
 291:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 292:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 167              		.loc 1 292 5 is_stmt 1 view .LVU27
 168 004a 0D4A     		ldr	r2, .L15+4
 169 004c 5368     		ldr	r3, [r2, #4]
 170 004e 43F48033 		orr	r3, r3, #65536
 171 0052 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc3xrTCL.s 			page 9


 172              	.L12:
 293:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 294:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 295:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 296:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 173              		.loc 1 296 3 view .LVU28
 174              		.loc 1 296 17 is_stmt 0 view .LVU29
 175 0054 4368     		ldr	r3, [r0, #4]
 176              		.loc 1 296 5 view .LVU30
 177 0056 13F0010F 		tst	r3, #1
 178 005a 04D0     		beq	.L13
 297:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 298:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 179              		.loc 1 298 5 is_stmt 1 view .LVU31
 180 005c 084A     		ldr	r2, .L15+4
 181 005e 9368     		ldr	r3, [r2, #8]
 182 0060 43F48033 		orr	r3, r3, #65536
 183 0064 9360     		str	r3, [r2, #8]
 184              	.L13:
 299:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 300:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 301:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 185              		.loc 1 301 3 view .LVU32
 186              		.loc 1 301 17 is_stmt 0 view .LVU33
 187 0066 4368     		ldr	r3, [r0, #4]
 188              		.loc 1 301 5 view .LVU34
 189 0068 13F0020F 		tst	r3, #2
 190 006c 04D0     		beq	.L10
 302:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 303:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 191              		.loc 1 303 5 is_stmt 1 view .LVU35
 192 006e 044A     		ldr	r2, .L15+4
 193 0070 D368     		ldr	r3, [r2, #12]
 194 0072 43F48033 		orr	r3, r3, #65536
 195 0076 D360     		str	r3, [r2, #12]
 196              	.L10:
 304:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 305:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 197              		.loc 1 305 1 is_stmt 0 view .LVU36
 198 0078 7047     		bx	lr
 199              	.L16:
 200 007a 00BF     		.align	2
 201              	.L15:
 202 007c 00700040 		.word	1073770496
 203 0080 003C0140 		.word	1073822720
 204              		.cfi_endproc
 205              	.LFE136:
 207              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 208              		.align	1
 209              		.global	HAL_PWR_EnablePVD
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	HAL_PWR_EnablePVD:
 215              	.LFB137:
 306:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 307:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
ARM GAS  /tmp/cc3xrTCL.s 			page 10


 308:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 309:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 310:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 311:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 312:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 216              		.loc 1 312 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 313:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 221              		.loc 1 313 3 view .LVU38
 222              		.loc 1 313 33 is_stmt 0 view .LVU39
 223 0000 014B     		ldr	r3, .L18
 224 0002 0122     		movs	r2, #1
 225 0004 1A61     		str	r2, [r3, #16]
 314:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 226              		.loc 1 314 1 view .LVU40
 227 0006 7047     		bx	lr
 228              	.L19:
 229              		.align	2
 230              	.L18:
 231 0008 00000E42 		.word	1108213760
 232              		.cfi_endproc
 233              	.LFE137:
 235              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_PWR_DisablePVD
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	HAL_PWR_DisablePVD:
 243              	.LFB138:
 315:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 316:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 317:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 318:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 319:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 320:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 321:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 244              		.loc 1 321 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 322:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 249              		.loc 1 322 3 view .LVU42
 250              		.loc 1 322 33 is_stmt 0 view .LVU43
 251 0000 014B     		ldr	r3, .L21
 252 0002 0022     		movs	r2, #0
 253 0004 1A61     		str	r2, [r3, #16]
 323:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 254              		.loc 1 323 1 view .LVU44
 255 0006 7047     		bx	lr
 256              	.L22:
 257              		.align	2
 258              	.L21:
ARM GAS  /tmp/cc3xrTCL.s 			page 11


 259 0008 00000E42 		.word	1108213760
 260              		.cfi_endproc
 261              	.LFE138:
 263              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 264              		.align	1
 265              		.global	HAL_PWR_EnableWakeUpPin
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	HAL_PWR_EnableWakeUpPin:
 271              	.LVL1:
 272              	.LFB139:
 324:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 325:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 326:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 327:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 328:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 329:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 330:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 331:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 332:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 333:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 334:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 335:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 273              		.loc 1 335 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 336:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 337:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 278              		.loc 1 337 3 view .LVU46
 338:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 339:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 340:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 279              		.loc 1 340 3 view .LVU47
 280 0000 024A     		ldr	r2, .L24
 281 0002 5368     		ldr	r3, [r2, #4]
 282 0004 0343     		orrs	r3, r3, r0
 283 0006 5360     		str	r3, [r2, #4]
 341:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 284              		.loc 1 341 1 is_stmt 0 view .LVU48
 285 0008 7047     		bx	lr
 286              	.L25:
 287 000a 00BF     		.align	2
 288              	.L24:
 289 000c 00700040 		.word	1073770496
 290              		.cfi_endproc
 291              	.LFE139:
 293              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_PWR_DisableWakeUpPin
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	HAL_PWR_DisableWakeUpPin:
 301              	.LVL2:
ARM GAS  /tmp/cc3xrTCL.s 			page 12


 302              	.LFB140:
 342:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 343:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 344:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 345:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 346:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 347:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 348:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 349:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 350:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 351:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 352:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 353:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 303              		.loc 1 353 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 354:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 355:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 308              		.loc 1 355 3 view .LVU50
 356:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 357:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 358:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 309              		.loc 1 358 3 view .LVU51
 310 0000 024A     		ldr	r2, .L27
 311 0002 5368     		ldr	r3, [r2, #4]
 312 0004 23EA0003 		bic	r3, r3, r0
 313 0008 5360     		str	r3, [r2, #4]
 359:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 314              		.loc 1 359 1 is_stmt 0 view .LVU52
 315 000a 7047     		bx	lr
 316              	.L28:
 317              		.align	2
 318              	.L27:
 319 000c 00700040 		.word	1073770496
 320              		.cfi_endproc
 321              	.LFE140:
 323              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 324              		.align	1
 325              		.global	HAL_PWR_EnterSLEEPMode
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	HAL_PWR_EnterSLEEPMode:
 331              	.LVL3:
 332              	.LFB141:
 360:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 361:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 362:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 363:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 364:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 365:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 366:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 367:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 368:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 369:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
ARM GAS  /tmp/cc3xrTCL.s 			page 13


 370:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 371:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 372:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 373:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 374:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 375:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 376:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 377:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 378:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 379:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 380:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 381:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 382:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 333              		.loc 1 382 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 383:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 384:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 338              		.loc 1 384 3 view .LVU54
 385:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 339              		.loc 1 385 3 view .LVU55
 386:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 387:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 388:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 340              		.loc 1 388 3 view .LVU56
 341 0000 064A     		ldr	r2, .L33
 342 0002 1369     		ldr	r3, [r2, #16]
 343 0004 23F00403 		bic	r3, r3, #4
 344 0008 1361     		str	r3, [r2, #16]
 389:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 390:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 391:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 345              		.loc 1 391 3 view .LVU57
 346              		.loc 1 391 5 is_stmt 0 view .LVU58
 347 000a 0129     		cmp	r1, #1
 348 000c 03D0     		beq	.L32
 392:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 393:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 394:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 395:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 396:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 397:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 398:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 399:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 349              		.loc 1 399 5 is_stmt 1 view .LVU59
 350              		.syntax unified
 351              	@ 399 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 352 000e 40BF     		sev
 353              	@ 0 "" 2
 400:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 354              		.loc 1 400 5 view .LVU60
 355              	@ 400 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 356 0010 20BF     		wfe
 357              	@ 0 "" 2
 401:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
ARM GAS  /tmp/cc3xrTCL.s 			page 14


 358              		.loc 1 401 5 view .LVU61
 359              	@ 401 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 360 0012 20BF     		wfe
 361              	@ 0 "" 2
 402:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 403:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 362              		.loc 1 403 1 is_stmt 0 view .LVU62
 363              		.thumb
 364              		.syntax unified
 365 0014 7047     		bx	lr
 366              	.L32:
 394:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 367              		.loc 1 394 5 is_stmt 1 view .LVU63
 368              		.syntax unified
 369              	@ 394 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 370 0016 30BF     		wfi
 371              	@ 0 "" 2
 372              		.thumb
 373              		.syntax unified
 374 0018 7047     		bx	lr
 375              	.L34:
 376 001a 00BF     		.align	2
 377              	.L33:
 378 001c 00ED00E0 		.word	-536810240
 379              		.cfi_endproc
 380              	.LFE141:
 382              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_PWR_EnterSTOPMode
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	HAL_PWR_EnterSTOPMode:
 390              	.LVL4:
 391              	.LFB142:
 404:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 405:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 406:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 407:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 408:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 409:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 410:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 411:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 412:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 413:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 414:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 415:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 416:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 417:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 418:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 419:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 420:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 421:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 422:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 423:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 424:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 425:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
ARM GAS  /tmp/cc3xrTCL.s 			page 15


 392              		.loc 1 425 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 426:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 427:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 397              		.loc 1 427 3 view .LVU65
 428:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 398              		.loc 1 428 3 view .LVU66
 429:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 430:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 431:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 399              		.loc 1 431 3 view .LVU67
 400 0000 0B4A     		ldr	r2, .L39
 401 0002 1368     		ldr	r3, [r2]
 402 0004 23F00303 		bic	r3, r3, #3
 403 0008 0343     		orrs	r3, r3, r0
 404 000a 1360     		str	r3, [r2]
 432:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 433:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 434:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 405              		.loc 1 434 3 view .LVU68
 406 000c 094A     		ldr	r2, .L39+4
 407 000e 1369     		ldr	r3, [r2, #16]
 408 0010 43F00403 		orr	r3, r3, #4
 409 0014 1361     		str	r3, [r2, #16]
 435:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 436:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 437:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 410              		.loc 1 437 3 view .LVU69
 411              		.loc 1 437 5 is_stmt 0 view .LVU70
 412 0016 0129     		cmp	r1, #1
 413 0018 08D0     		beq	.L38
 438:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 439:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 440:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 441:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 442:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 443:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 444:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 445:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 414              		.loc 1 445 5 is_stmt 1 view .LVU71
 415              		.syntax unified
 416              	@ 445 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 417 001a 40BF     		sev
 418              	@ 0 "" 2
 446:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 419              		.loc 1 446 5 view .LVU72
 420              	@ 446 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 421 001c 20BF     		wfe
 422              	@ 0 "" 2
 447:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 423              		.loc 1 447 5 view .LVU73
 424              	@ 447 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 425 001e 20BF     		wfe
 426              	@ 0 "" 2
ARM GAS  /tmp/cc3xrTCL.s 			page 16


 427              		.thumb
 428              		.syntax unified
 429              	.L37:
 448:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 449:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 450:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 430              		.loc 1 450 3 view .LVU74
 431 0020 044A     		ldr	r2, .L39+4
 432 0022 1369     		ldr	r3, [r2, #16]
 433 0024 23F00403 		bic	r3, r3, #4
 434 0028 1361     		str	r3, [r2, #16]
 451:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 435              		.loc 1 451 1 is_stmt 0 view .LVU75
 436 002a 7047     		bx	lr
 437              	.L38:
 440:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 438              		.loc 1 440 5 is_stmt 1 view .LVU76
 439              		.syntax unified
 440              	@ 440 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 441 002c 30BF     		wfi
 442              	@ 0 "" 2
 443              		.thumb
 444              		.syntax unified
 445 002e F7E7     		b	.L37
 446              	.L40:
 447              		.align	2
 448              	.L39:
 449 0030 00700040 		.word	1073770496
 450 0034 00ED00E0 		.word	-536810240
 451              		.cfi_endproc
 452              	.LFE142:
 454              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 455              		.align	1
 456              		.global	HAL_PWR_EnterSTANDBYMode
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	HAL_PWR_EnterSTANDBYMode:
 462              	.LFB143:
 452:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 453:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 454:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 455:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 456:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 457:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 458:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 459:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 460:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 461:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 462:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 463:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 464:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 463              		.loc 1 464 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
ARM GAS  /tmp/cc3xrTCL.s 			page 17


 465:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 466:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 468              		.loc 1 466 3 view .LVU78
 469 0000 054A     		ldr	r2, .L42
 470 0002 1368     		ldr	r3, [r2]
 471 0004 43F00203 		orr	r3, r3, #2
 472 0008 1360     		str	r3, [r2]
 467:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 468:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 469:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 473              		.loc 1 469 3 view .LVU79
 474 000a 044A     		ldr	r2, .L42+4
 475 000c 1369     		ldr	r3, [r2, #16]
 476 000e 43F00403 		orr	r3, r3, #4
 477 0012 1361     		str	r3, [r2, #16]
 470:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 471:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 472:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 473:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 474:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 475:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 476:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 478              		.loc 1 476 3 view .LVU80
 479              		.syntax unified
 480              	@ 476 "ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 481 0014 30BF     		wfi
 482              	@ 0 "" 2
 477:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 483              		.loc 1 477 1 is_stmt 0 view .LVU81
 484              		.thumb
 485              		.syntax unified
 486 0016 7047     		bx	lr
 487              	.L43:
 488              		.align	2
 489              	.L42:
 490 0018 00700040 		.word	1073770496
 491 001c 00ED00E0 		.word	-536810240
 492              		.cfi_endproc
 493              	.LFE143:
 495              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 496              		.align	1
 497              		.weak	HAL_PWR_PVDCallback
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	HAL_PWR_PVDCallback:
 503              	.LFB145:
 478:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 479:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 480:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 481:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 482:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 483:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 484:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 485:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 486:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 487:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
ARM GAS  /tmp/cc3xrTCL.s 			page 18


 488:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 489:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 490:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 491:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 492:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 493:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 494:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 495:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 496:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 497:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 498:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 499:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 500:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 501:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 502:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 504              		.loc 1 502 1 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 503:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 504:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 505:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 506:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 509              		.loc 1 506 1 view .LVU83
 510 0000 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE145:
 514              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 515              		.align	1
 516              		.global	HAL_PWR_PVD_IRQHandler
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 521              	HAL_PWR_PVD_IRQHandler:
 522              	.LFB144:
 485:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 523              		.loc 1 485 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 08B5     		push	{r3, lr}
 528              	.LCFI0:
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 3, -8
 531              		.cfi_offset 14, -4
 487:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 532              		.loc 1 487 3 view .LVU85
 487:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 533              		.loc 1 487 6 is_stmt 0 view .LVU86
 534 0002 064B     		ldr	r3, .L49
 535 0004 5B69     		ldr	r3, [r3, #20]
 487:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 536              		.loc 1 487 5 view .LVU87
 537 0006 13F4803F 		tst	r3, #65536
 538 000a 00D1     		bne	.L48
 539              	.L45:
ARM GAS  /tmp/cc3xrTCL.s 			page 19


 495:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 540              		.loc 1 495 1 view .LVU88
 541 000c 08BD     		pop	{r3, pc}
 542              	.L48:
 490:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 543              		.loc 1 490 5 is_stmt 1 view .LVU89
 544 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 545              	.LVL5:
 493:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 546              		.loc 1 493 5 view .LVU90
 547 0012 024B     		ldr	r3, .L49
 548 0014 4FF48032 		mov	r2, #65536
 549 0018 5A61     		str	r2, [r3, #20]
 495:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 550              		.loc 1 495 1 is_stmt 0 view .LVU91
 551 001a F7E7     		b	.L45
 552              	.L50:
 553              		.align	2
 554              	.L49:
 555 001c 003C0140 		.word	1073822720
 556              		.cfi_endproc
 557              	.LFE144:
 559              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 560              		.align	1
 561              		.global	HAL_PWR_EnableSleepOnExit
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 566              	HAL_PWR_EnableSleepOnExit:
 567              	.LFB146:
 507:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 508:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 509:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 510:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 511:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 512:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 513:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 514:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 515:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 516:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 517:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 568              		.loc 1 517 1 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 518:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 519:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 573              		.loc 1 519 3 view .LVU93
 574 0000 024A     		ldr	r2, .L52
 575 0002 1369     		ldr	r3, [r2, #16]
 576 0004 43F00203 		orr	r3, r3, #2
 577 0008 1361     		str	r3, [r2, #16]
 520:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 578              		.loc 1 520 1 is_stmt 0 view .LVU94
 579 000a 7047     		bx	lr
 580              	.L53:
ARM GAS  /tmp/cc3xrTCL.s 			page 20


 581              		.align	2
 582              	.L52:
 583 000c 00ED00E0 		.word	-536810240
 584              		.cfi_endproc
 585              	.LFE146:
 587              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_PWR_DisableSleepOnExit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	HAL_PWR_DisableSleepOnExit:
 595              	.LFB147:
 521:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 522:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 523:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 524:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 525:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 526:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 527:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 528:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 529:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 596              		.loc 1 529 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 530:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 531:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 601              		.loc 1 531 3 view .LVU96
 602 0000 024A     		ldr	r2, .L55
 603 0002 1369     		ldr	r3, [r2, #16]
 604 0004 23F00203 		bic	r3, r3, #2
 605 0008 1361     		str	r3, [r2, #16]
 532:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 606              		.loc 1 532 1 is_stmt 0 view .LVU97
 607 000a 7047     		bx	lr
 608              	.L56:
 609              		.align	2
 610              	.L55:
 611 000c 00ED00E0 		.word	-536810240
 612              		.cfi_endproc
 613              	.LFE147:
 615              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 616              		.align	1
 617              		.global	HAL_PWR_EnableSEVOnPend
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 622              	HAL_PWR_EnableSEVOnPend:
 623              	.LFB148:
 533:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 534:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 535:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 536:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 537:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 538:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
ARM GAS  /tmp/cc3xrTCL.s 			page 21


 539:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 540:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 541:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 624              		.loc 1 541 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 542:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 543:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 629              		.loc 1 543 3 view .LVU99
 630 0000 024A     		ldr	r2, .L58
 631 0002 1369     		ldr	r3, [r2, #16]
 632 0004 43F01003 		orr	r3, r3, #16
 633 0008 1361     		str	r3, [r2, #16]
 544:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 634              		.loc 1 544 1 is_stmt 0 view .LVU100
 635 000a 7047     		bx	lr
 636              	.L59:
 637              		.align	2
 638              	.L58:
 639 000c 00ED00E0 		.word	-536810240
 640              		.cfi_endproc
 641              	.LFE148:
 643              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 644              		.align	1
 645              		.global	HAL_PWR_DisableSEVOnPend
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	HAL_PWR_DisableSEVOnPend:
 651              	.LFB149:
 545:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 546:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 547:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 548:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 549:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 550:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 551:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 552:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 553:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 652              		.loc 1 553 1 is_stmt 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 554:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 555:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 657              		.loc 1 555 3 view .LVU102
 658 0000 024A     		ldr	r2, .L61
 659 0002 1369     		ldr	r3, [r2, #16]
 660 0004 23F01003 		bic	r3, r3, #16
 661 0008 1361     		str	r3, [r2, #16]
 556:ThirdParty/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 662              		.loc 1 556 1 is_stmt 0 view .LVU103
 663 000a 7047     		bx	lr
 664              	.L62:
ARM GAS  /tmp/cc3xrTCL.s 			page 22


 665              		.align	2
 666              	.L61:
 667 000c 00ED00E0 		.word	-536810240
 668              		.cfi_endproc
 669              	.LFE149:
 671              		.text
 672              	.Letext0:
 673              		.file 2 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 674              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 675              		.file 4 "ThirdParty/CMSIS/Include/core_cm4.h"
 676              		.file 5 "ThirdParty/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 677              		.file 6 "ThirdParty/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 678              		.file 7 "ThirdParty/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
ARM GAS  /tmp/cc3xrTCL.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_pwr.c
     /tmp/cc3xrTCL.s:20     .text.HAL_PWR_DeInit:0000000000000000 $t
     /tmp/cc3xrTCL.s:26     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
     /tmp/cc3xrTCL.s:48     .text.HAL_PWR_DeInit:0000000000000014 $d
     /tmp/cc3xrTCL.s:53     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
     /tmp/cc3xrTCL.s:59     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
     /tmp/cc3xrTCL.s:76     .text.HAL_PWR_EnableBkUpAccess:0000000000000008 $d
     /tmp/cc3xrTCL.s:81     .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
     /tmp/cc3xrTCL.s:87     .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
     /tmp/cc3xrTCL.s:104    .text.HAL_PWR_DisableBkUpAccess:0000000000000008 $d
     /tmp/cc3xrTCL.s:109    .text.HAL_PWR_ConfigPVD:0000000000000000 $t
     /tmp/cc3xrTCL.s:115    .text.HAL_PWR_ConfigPVD:0000000000000000 HAL_PWR_ConfigPVD
     /tmp/cc3xrTCL.s:202    .text.HAL_PWR_ConfigPVD:000000000000007c $d
     /tmp/cc3xrTCL.s:208    .text.HAL_PWR_EnablePVD:0000000000000000 $t
     /tmp/cc3xrTCL.s:214    .text.HAL_PWR_EnablePVD:0000000000000000 HAL_PWR_EnablePVD
     /tmp/cc3xrTCL.s:231    .text.HAL_PWR_EnablePVD:0000000000000008 $d
     /tmp/cc3xrTCL.s:236    .text.HAL_PWR_DisablePVD:0000000000000000 $t
     /tmp/cc3xrTCL.s:242    .text.HAL_PWR_DisablePVD:0000000000000000 HAL_PWR_DisablePVD
     /tmp/cc3xrTCL.s:259    .text.HAL_PWR_DisablePVD:0000000000000008 $d
     /tmp/cc3xrTCL.s:264    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
     /tmp/cc3xrTCL.s:270    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
     /tmp/cc3xrTCL.s:289    .text.HAL_PWR_EnableWakeUpPin:000000000000000c $d
     /tmp/cc3xrTCL.s:294    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
     /tmp/cc3xrTCL.s:300    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
     /tmp/cc3xrTCL.s:319    .text.HAL_PWR_DisableWakeUpPin:000000000000000c $d
     /tmp/cc3xrTCL.s:324    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
     /tmp/cc3xrTCL.s:330    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
     /tmp/cc3xrTCL.s:378    .text.HAL_PWR_EnterSLEEPMode:000000000000001c $d
     /tmp/cc3xrTCL.s:383    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
     /tmp/cc3xrTCL.s:389    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
     /tmp/cc3xrTCL.s:449    .text.HAL_PWR_EnterSTOPMode:0000000000000030 $d
     /tmp/cc3xrTCL.s:455    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
     /tmp/cc3xrTCL.s:461    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
     /tmp/cc3xrTCL.s:490    .text.HAL_PWR_EnterSTANDBYMode:0000000000000018 $d
     /tmp/cc3xrTCL.s:496    .text.HAL_PWR_PVDCallback:0000000000000000 $t
     /tmp/cc3xrTCL.s:502    .text.HAL_PWR_PVDCallback:0000000000000000 HAL_PWR_PVDCallback
     /tmp/cc3xrTCL.s:515    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 $t
     /tmp/cc3xrTCL.s:521    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 HAL_PWR_PVD_IRQHandler
     /tmp/cc3xrTCL.s:555    .text.HAL_PWR_PVD_IRQHandler:000000000000001c $d
     /tmp/cc3xrTCL.s:560    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
     /tmp/cc3xrTCL.s:566    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
     /tmp/cc3xrTCL.s:583    .text.HAL_PWR_EnableSleepOnExit:000000000000000c $d
     /tmp/cc3xrTCL.s:588    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
     /tmp/cc3xrTCL.s:594    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
     /tmp/cc3xrTCL.s:611    .text.HAL_PWR_DisableSleepOnExit:000000000000000c $d
     /tmp/cc3xrTCL.s:616    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
     /tmp/cc3xrTCL.s:622    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
     /tmp/cc3xrTCL.s:639    .text.HAL_PWR_EnableSEVOnPend:000000000000000c $d
     /tmp/cc3xrTCL.s:644    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
     /tmp/cc3xrTCL.s:650    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
     /tmp/cc3xrTCL.s:667    .text.HAL_PWR_DisableSEVOnPend:000000000000000c $d

NO UNDEFINED SYMBOLS
