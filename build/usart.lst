ARM GAS  /tmp/ccm8We9h.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.MX_UART4_Init.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 426F6172 		.ascii	"Board/v3/Src/usart.c\000"
  22      642F7633 
  22      2F537263 
  22      2F757361 
  22      72742E63 
  23              		.section	.text.MX_UART4_Init,"ax",%progbits
  24              		.align	1
  25              		.global	MX_UART4_Init
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	MX_UART4_Init:
  31              	.LFB133:
  32              		.file 1 "Board/v3/Src/usart.c"
   1:Board/v3/Src/usart.c **** /**
   2:Board/v3/Src/usart.c ****   ******************************************************************************
   3:Board/v3/Src/usart.c ****   * File Name          : USART.c
   4:Board/v3/Src/usart.c ****   * Description        : This file provides code for the configuration
   5:Board/v3/Src/usart.c ****   *                      of the USART instances.
   6:Board/v3/Src/usart.c ****   ******************************************************************************
   7:Board/v3/Src/usart.c ****   * This notice applies to any and all portions of this file
   8:Board/v3/Src/usart.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Board/v3/Src/usart.c ****   * USER CODE END. Other portions of this file, whether 
  10:Board/v3/Src/usart.c ****   * inserted by the user or by software development tools
  11:Board/v3/Src/usart.c ****   * are owned by their respective copyright owners.
  12:Board/v3/Src/usart.c ****   *
  13:Board/v3/Src/usart.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Board/v3/Src/usart.c ****   * All rights reserved.
  15:Board/v3/Src/usart.c ****   *
  16:Board/v3/Src/usart.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Board/v3/Src/usart.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Board/v3/Src/usart.c ****   *
  19:Board/v3/Src/usart.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Board/v3/Src/usart.c ****   *    this list of conditions and the following disclaimer.
  21:Board/v3/Src/usart.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Board/v3/Src/usart.c ****   *    this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccm8We9h.s 			page 2


  23:Board/v3/Src/usart.c ****   *    and/or other materials provided with the distribution.
  24:Board/v3/Src/usart.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Board/v3/Src/usart.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Board/v3/Src/usart.c ****   *    derived from this software without specific written permission.
  27:Board/v3/Src/usart.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Board/v3/Src/usart.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Board/v3/Src/usart.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Board/v3/Src/usart.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Board/v3/Src/usart.c ****   *    this license is void and will automatically terminate your rights under 
  32:Board/v3/Src/usart.c ****   *    this license. 
  33:Board/v3/Src/usart.c ****   *
  34:Board/v3/Src/usart.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Board/v3/Src/usart.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Board/v3/Src/usart.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Board/v3/Src/usart.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Board/v3/Src/usart.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Board/v3/Src/usart.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Board/v3/Src/usart.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Board/v3/Src/usart.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Board/v3/Src/usart.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Board/v3/Src/usart.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Board/v3/Src/usart.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Board/v3/Src/usart.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Board/v3/Src/usart.c ****   *
  47:Board/v3/Src/usart.c ****   ******************************************************************************
  48:Board/v3/Src/usart.c ****   */
  49:Board/v3/Src/usart.c **** 
  50:Board/v3/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  51:Board/v3/Src/usart.c **** #include "usart.h"
  52:Board/v3/Src/usart.c **** 
  53:Board/v3/Src/usart.c **** #include "gpio.h"
  54:Board/v3/Src/usart.c **** #include "dma.h"
  55:Board/v3/Src/usart.c **** 
  56:Board/v3/Src/usart.c **** /* USER CODE BEGIN 0 */
  57:Board/v3/Src/usart.c **** 
  58:Board/v3/Src/usart.c **** /* USER CODE END 0 */
  59:Board/v3/Src/usart.c **** 
  60:Board/v3/Src/usart.c **** UART_HandleTypeDef huart4;
  61:Board/v3/Src/usart.c **** UART_HandleTypeDef huart2;
  62:Board/v3/Src/usart.c **** DMA_HandleTypeDef hdma_uart4_rx;
  63:Board/v3/Src/usart.c **** DMA_HandleTypeDef hdma_uart4_tx;
  64:Board/v3/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_rx;
  65:Board/v3/Src/usart.c **** DMA_HandleTypeDef hdma_usart2_tx;
  66:Board/v3/Src/usart.c **** 
  67:Board/v3/Src/usart.c **** /* UART4 init function */
  68:Board/v3/Src/usart.c **** void MX_UART4_Init(void)
  69:Board/v3/Src/usart.c **** {
  33              		.loc 1 69 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 08B5     		push	{r3, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  70:Board/v3/Src/usart.c **** 
ARM GAS  /tmp/ccm8We9h.s 			page 3


  71:Board/v3/Src/usart.c ****   huart4.Instance = UART4;
  42              		.loc 1 71 3 view .LVU1
  43              		.loc 1 71 19 is_stmt 0 view .LVU2
  44 0002 0A48     		ldr	r0, .L5
  45 0004 0A4B     		ldr	r3, .L5+4
  46 0006 0360     		str	r3, [r0]
  72:Board/v3/Src/usart.c ****   //huart4.Init.BaudRate = 115200;  // Provisionally this can be changed to 921600 for faster trans
  73:Board/v3/Src/usart.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 73 3 is_stmt 1 view .LVU3
  48              		.loc 1 73 26 is_stmt 0 view .LVU4
  49 0008 0023     		movs	r3, #0
  50 000a 8360     		str	r3, [r0, #8]
  74:Board/v3/Src/usart.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 74 3 is_stmt 1 view .LVU5
  52              		.loc 1 74 24 is_stmt 0 view .LVU6
  53 000c C360     		str	r3, [r0, #12]
  75:Board/v3/Src/usart.c ****   huart4.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 75 3 is_stmt 1 view .LVU7
  55              		.loc 1 75 22 is_stmt 0 view .LVU8
  56 000e 0361     		str	r3, [r0, #16]
  76:Board/v3/Src/usart.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 76 3 is_stmt 1 view .LVU9
  58              		.loc 1 76 20 is_stmt 0 view .LVU10
  59 0010 0C22     		movs	r2, #12
  60 0012 4261     		str	r2, [r0, #20]
  77:Board/v3/Src/usart.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 77 3 is_stmt 1 view .LVU11
  62              		.loc 1 77 25 is_stmt 0 view .LVU12
  63 0014 8361     		str	r3, [r0, #24]
  78:Board/v3/Src/usart.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 78 3 is_stmt 1 view .LVU13
  65              		.loc 1 78 28 is_stmt 0 view .LVU14
  66 0016 C361     		str	r3, [r0, #28]
  79:Board/v3/Src/usart.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
  67              		.loc 1 79 3 is_stmt 1 view .LVU15
  68              		.loc 1 79 7 is_stmt 0 view .LVU16
  69 0018 FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 79 6 view .LVU17
  72 001c 00B9     		cbnz	r0, .L4
  73              	.L1:
  80:Board/v3/Src/usart.c ****   {
  81:Board/v3/Src/usart.c ****     _Error_Handler(__FILE__, __LINE__);
  82:Board/v3/Src/usart.c ****   }
  83:Board/v3/Src/usart.c **** 
  84:Board/v3/Src/usart.c **** }
  74              		.loc 1 84 1 view .LVU18
  75 001e 08BD     		pop	{r3, pc}
  76              	.L4:
  81:Board/v3/Src/usart.c ****   }
  77              		.loc 1 81 5 is_stmt 1 view .LVU19
  78 0020 5121     		movs	r1, #81
  79 0022 0448     		ldr	r0, .L5+8
  80 0024 FFF7FEFF 		bl	_Error_Handler
  81              	.LVL1:
  82              		.loc 1 84 1 is_stmt 0 view .LVU20
  83 0028 F9E7     		b	.L1
ARM GAS  /tmp/ccm8We9h.s 			page 4


  84              	.L6:
  85 002a 00BF     		.align	2
  86              	.L5:
  87 002c 00000000 		.word	.LANCHOR0
  88 0030 004C0040 		.word	1073761280
  89 0034 00000000 		.word	.LC0
  90              		.cfi_endproc
  91              	.LFE133:
  93              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  94              		.align	1
  95              		.global	MX_USART2_UART_Init
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	MX_USART2_UART_Init:
 101              	.LFB134:
  85:Board/v3/Src/usart.c **** /* USART2 init function */
  86:Board/v3/Src/usart.c **** 
  87:Board/v3/Src/usart.c **** void MX_USART2_UART_Init(void)
  88:Board/v3/Src/usart.c **** {
 102              		.loc 1 88 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
  89:Board/v3/Src/usart.c **** 
  90:Board/v3/Src/usart.c ****   huart2.Instance = USART2;
 111              		.loc 1 90 3 view .LVU22
 112              		.loc 1 90 19 is_stmt 0 view .LVU23
 113 0002 0A48     		ldr	r0, .L11
 114 0004 0A4B     		ldr	r3, .L11+4
 115 0006 0360     		str	r3, [r0]
  91:Board/v3/Src/usart.c ****   //huart2.Init.BaudRate = 115200;
  92:Board/v3/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 116              		.loc 1 92 3 is_stmt 1 view .LVU24
 117              		.loc 1 92 26 is_stmt 0 view .LVU25
 118 0008 0023     		movs	r3, #0
 119 000a 8360     		str	r3, [r0, #8]
  93:Board/v3/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 120              		.loc 1 93 3 is_stmt 1 view .LVU26
 121              		.loc 1 93 24 is_stmt 0 view .LVU27
 122 000c C360     		str	r3, [r0, #12]
  94:Board/v3/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 123              		.loc 1 94 3 is_stmt 1 view .LVU28
 124              		.loc 1 94 22 is_stmt 0 view .LVU29
 125 000e 0361     		str	r3, [r0, #16]
  95:Board/v3/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 126              		.loc 1 95 3 is_stmt 1 view .LVU30
 127              		.loc 1 95 20 is_stmt 0 view .LVU31
 128 0010 0C22     		movs	r2, #12
 129 0012 4261     		str	r2, [r0, #20]
  96:Board/v3/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 130              		.loc 1 96 3 is_stmt 1 view .LVU32
ARM GAS  /tmp/ccm8We9h.s 			page 5


 131              		.loc 1 96 25 is_stmt 0 view .LVU33
 132 0014 8361     		str	r3, [r0, #24]
  97:Board/v3/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 133              		.loc 1 97 3 is_stmt 1 view .LVU34
 134              		.loc 1 97 28 is_stmt 0 view .LVU35
 135 0016 C361     		str	r3, [r0, #28]
  98:Board/v3/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 136              		.loc 1 98 3 is_stmt 1 view .LVU36
 137              		.loc 1 98 7 is_stmt 0 view .LVU37
 138 0018 FFF7FEFF 		bl	HAL_UART_Init
 139              	.LVL2:
 140              		.loc 1 98 6 view .LVU38
 141 001c 00B9     		cbnz	r0, .L10
 142              	.L7:
  99:Board/v3/Src/usart.c ****   {
 100:Board/v3/Src/usart.c ****     Error_Handler();
 101:Board/v3/Src/usart.c ****   }
 102:Board/v3/Src/usart.c **** 
 103:Board/v3/Src/usart.c **** }
 143              		.loc 1 103 1 view .LVU39
 144 001e 08BD     		pop	{r3, pc}
 145              	.L10:
 100:Board/v3/Src/usart.c ****   }
 146              		.loc 1 100 5 is_stmt 1 view .LVU40
 147 0020 6421     		movs	r1, #100
 148 0022 0448     		ldr	r0, .L11+8
 149 0024 FFF7FEFF 		bl	_Error_Handler
 150              	.LVL3:
 151              		.loc 1 103 1 is_stmt 0 view .LVU41
 152 0028 F9E7     		b	.L7
 153              	.L12:
 154 002a 00BF     		.align	2
 155              	.L11:
 156 002c 00000000 		.word	.LANCHOR1
 157 0030 00440040 		.word	1073759232
 158 0034 00000000 		.word	.LC0
 159              		.cfi_endproc
 160              	.LFE134:
 162              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 163              		.align	1
 164              		.global	HAL_UART_MspInit
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	HAL_UART_MspInit:
 170              	.LVL4:
 171              	.LFB135:
 104:Board/v3/Src/usart.c **** 
 105:Board/v3/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
 106:Board/v3/Src/usart.c **** {
 172              		.loc 1 106 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 106 1 is_stmt 0 view .LVU43
 177 0000 10B5     		push	{r4, lr}
 178              	.LCFI2:
ARM GAS  /tmp/ccm8We9h.s 			page 6


 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 182 0002 82B0     		sub	sp, sp, #8
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 16
 185 0004 0446     		mov	r4, r0
 107:Board/v3/Src/usart.c **** 
 108:Board/v3/Src/usart.c ****   if(uartHandle->Instance==UART4)
 186              		.loc 1 108 3 is_stmt 1 view .LVU44
 187              		.loc 1 108 16 is_stmt 0 view .LVU45
 188 0006 0368     		ldr	r3, [r0]
 189              		.loc 1 108 5 view .LVU46
 190 0008 534A     		ldr	r2, .L27
 191 000a 9342     		cmp	r3, r2
 192 000c 04D0     		beq	.L21
 109:Board/v3/Src/usart.c ****   {
 110:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspInit 0 */
 111:Board/v3/Src/usart.c **** 
 112:Board/v3/Src/usart.c ****   /* USER CODE END UART4_MspInit 0 */
 113:Board/v3/Src/usart.c ****     /* UART4 clock enable */
 114:Board/v3/Src/usart.c ****     __HAL_RCC_UART4_CLK_ENABLE();
 115:Board/v3/Src/usart.c **** 
 116:Board/v3/Src/usart.c ****     /* UART4 DMA Init */
 117:Board/v3/Src/usart.c ****     /* UART4_RX Init */
 118:Board/v3/Src/usart.c ****     hdma_uart4_rx.Instance = DMA1_Stream2;
 119:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 120:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 121:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 122:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 123:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 124:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 125:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Mode = DMA_CIRCULAR;
 126:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 127:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 128:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 129:Board/v3/Src/usart.c ****     {
 130:Board/v3/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 131:Board/v3/Src/usart.c ****     }
 132:Board/v3/Src/usart.c **** 
 133:Board/v3/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_uart4_rx);
 134:Board/v3/Src/usart.c **** 
 135:Board/v3/Src/usart.c ****     /* UART4_TX Init */
 136:Board/v3/Src/usart.c ****     hdma_uart4_tx.Instance = DMA1_Stream4;
 137:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Channel = DMA_CHANNEL_4;
 138:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 139:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 140:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemInc = DMA_MINC_ENABLE;
 141:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 142:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 143:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Mode = DMA_NORMAL;
 144:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Priority = DMA_PRIORITY_LOW;
 145:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 146:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_tx) != HAL_OK)
 147:Board/v3/Src/usart.c ****     {
 148:Board/v3/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 149:Board/v3/Src/usart.c ****     }
ARM GAS  /tmp/ccm8We9h.s 			page 7


 150:Board/v3/Src/usart.c **** 
 151:Board/v3/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_uart4_tx);
 152:Board/v3/Src/usart.c **** 
 153:Board/v3/Src/usart.c ****     /* UART4 interrupt Init */
 154:Board/v3/Src/usart.c ****     HAL_NVIC_SetPriority(UART4_IRQn, 10, 0);
 155:Board/v3/Src/usart.c ****     HAL_NVIC_EnableIRQ(UART4_IRQn);
 156:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspInit 1 */
 157:Board/v3/Src/usart.c **** 
 158:Board/v3/Src/usart.c ****   /* USER CODE END UART4_MspInit 1 */
 159:Board/v3/Src/usart.c ****   }
 160:Board/v3/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 193              		.loc 1 160 8 is_stmt 1 view .LVU47
 194              		.loc 1 160 10 is_stmt 0 view .LVU48
 195 000e 534A     		ldr	r2, .L27+4
 196 0010 9342     		cmp	r3, r2
 197 0012 51D0     		beq	.L22
 198              	.LVL5:
 199              	.L13:
 161:Board/v3/Src/usart.c ****   {
 162:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 163:Board/v3/Src/usart.c **** 
 164:Board/v3/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
 165:Board/v3/Src/usart.c ****     /* USART2 clock enable */
 166:Board/v3/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 167:Board/v3/Src/usart.c **** 
 168:Board/v3/Src/usart.c ****     /* USART2 DMA Init */
 169:Board/v3/Src/usart.c ****     /* USART2_RX Init */
 170:Board/v3/Src/usart.c ****     hdma_usart2_rx.Instance = DMA1_Stream5;
 171:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 172:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 173:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 174:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 175:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 176:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 177:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 178:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 179:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 180:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 181:Board/v3/Src/usart.c ****     {
 182:Board/v3/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 183:Board/v3/Src/usart.c ****     }
 184:Board/v3/Src/usart.c **** 
 185:Board/v3/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart2_rx);
 186:Board/v3/Src/usart.c **** 
 187:Board/v3/Src/usart.c ****     /* USART2_TX Init */
 188:Board/v3/Src/usart.c ****     hdma_usart2_tx.Instance = DMA1_Stream6;
 189:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 190:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 191:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 192:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 193:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 194:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 195:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 196:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 197:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 198:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 199:Board/v3/Src/usart.c ****     {
ARM GAS  /tmp/ccm8We9h.s 			page 8


 200:Board/v3/Src/usart.c ****       _Error_Handler(__FILE__, __LINE__);
 201:Board/v3/Src/usart.c ****     }
 202:Board/v3/Src/usart.c **** 
 203:Board/v3/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart2_tx);
 204:Board/v3/Src/usart.c **** 
 205:Board/v3/Src/usart.c ****     /* USART2 interrupt Init */
 206:Board/v3/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 10, 0);
 207:Board/v3/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 208:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 209:Board/v3/Src/usart.c **** 
 210:Board/v3/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
 211:Board/v3/Src/usart.c ****   }
 212:Board/v3/Src/usart.c **** }
 200              		.loc 1 212 1 view .LVU49
 201 0014 02B0     		add	sp, sp, #8
 202              	.LCFI4:
 203              		.cfi_remember_state
 204              		.cfi_def_cfa_offset 8
 205              		@ sp needed
 206 0016 10BD     		pop	{r4, pc}
 207              	.LVL6:
 208              	.L21:
 209              	.LCFI5:
 210              		.cfi_restore_state
 114:Board/v3/Src/usart.c **** 
 211              		.loc 1 114 5 is_stmt 1 view .LVU50
 212              	.LBB2:
 114:Board/v3/Src/usart.c **** 
 213              		.loc 1 114 5 view .LVU51
 214 0018 0023     		movs	r3, #0
 215 001a 0093     		str	r3, [sp]
 114:Board/v3/Src/usart.c **** 
 216              		.loc 1 114 5 view .LVU52
 217 001c 02F5F632 		add	r2, r2, #125952
 218 0020 116C     		ldr	r1, [r2, #64]
 219 0022 41F40021 		orr	r1, r1, #524288
 220 0026 1164     		str	r1, [r2, #64]
 114:Board/v3/Src/usart.c **** 
 221              		.loc 1 114 5 view .LVU53
 222 0028 126C     		ldr	r2, [r2, #64]
 223 002a 02F40022 		and	r2, r2, #524288
 224 002e 0092     		str	r2, [sp]
 114:Board/v3/Src/usart.c **** 
 225              		.loc 1 114 5 view .LVU54
 226 0030 009A     		ldr	r2, [sp]
 227              	.LBE2:
 114:Board/v3/Src/usart.c **** 
 228              		.loc 1 114 5 view .LVU55
 118:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 229              		.loc 1 118 5 view .LVU56
 118:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 230              		.loc 1 118 28 is_stmt 0 view .LVU57
 231 0032 4B48     		ldr	r0, .L27+8
 232              	.LVL7:
 118:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 233              		.loc 1 118 28 view .LVU58
 234 0034 4B4A     		ldr	r2, .L27+12
ARM GAS  /tmp/ccm8We9h.s 			page 9


 235 0036 0260     		str	r2, [r0]
 119:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 236              		.loc 1 119 5 is_stmt 1 view .LVU59
 119:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 237              		.loc 1 119 32 is_stmt 0 view .LVU60
 238 0038 4FF00062 		mov	r2, #134217728
 239 003c 4260     		str	r2, [r0, #4]
 120:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 240              		.loc 1 120 5 is_stmt 1 view .LVU61
 120:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 241              		.loc 1 120 34 is_stmt 0 view .LVU62
 242 003e 8360     		str	r3, [r0, #8]
 121:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 243              		.loc 1 121 5 is_stmt 1 view .LVU63
 121:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 244              		.loc 1 121 34 is_stmt 0 view .LVU64
 245 0040 C360     		str	r3, [r0, #12]
 122:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 246              		.loc 1 122 5 is_stmt 1 view .LVU65
 122:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 247              		.loc 1 122 31 is_stmt 0 view .LVU66
 248 0042 4FF48062 		mov	r2, #1024
 249 0046 0261     		str	r2, [r0, #16]
 123:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 250              		.loc 1 123 5 is_stmt 1 view .LVU67
 123:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 251              		.loc 1 123 44 is_stmt 0 view .LVU68
 252 0048 4361     		str	r3, [r0, #20]
 124:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Mode = DMA_CIRCULAR;
 253              		.loc 1 124 5 is_stmt 1 view .LVU69
 124:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Mode = DMA_CIRCULAR;
 254              		.loc 1 124 41 is_stmt 0 view .LVU70
 255 004a 8361     		str	r3, [r0, #24]
 125:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 256              		.loc 1 125 5 is_stmt 1 view .LVU71
 125:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 257              		.loc 1 125 29 is_stmt 0 view .LVU72
 258 004c 4FF48072 		mov	r2, #256
 259 0050 C261     		str	r2, [r0, #28]
 126:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 260              		.loc 1 126 5 is_stmt 1 view .LVU73
 126:Board/v3/Src/usart.c ****     hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 261              		.loc 1 126 33 is_stmt 0 view .LVU74
 262 0052 0362     		str	r3, [r0, #32]
 127:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 263              		.loc 1 127 5 is_stmt 1 view .LVU75
 127:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 264              		.loc 1 127 33 is_stmt 0 view .LVU76
 265 0054 4362     		str	r3, [r0, #36]
 128:Board/v3/Src/usart.c ****     {
 266              		.loc 1 128 5 is_stmt 1 view .LVU77
 128:Board/v3/Src/usart.c ****     {
 267              		.loc 1 128 9 is_stmt 0 view .LVU78
 268 0056 FFF7FEFF 		bl	HAL_DMA_Init
 269              	.LVL8:
 128:Board/v3/Src/usart.c ****     {
 270              		.loc 1 128 8 view .LVU79
ARM GAS  /tmp/ccm8We9h.s 			page 10


 271 005a 18BB     		cbnz	r0, .L23
 272              	.L15:
 133:Board/v3/Src/usart.c **** 
 273              		.loc 1 133 5 is_stmt 1 view .LVU80
 133:Board/v3/Src/usart.c **** 
 274              		.loc 1 133 5 view .LVU81
 275 005c 404B     		ldr	r3, .L27+8
 276 005e 6363     		str	r3, [r4, #52]
 133:Board/v3/Src/usart.c **** 
 277              		.loc 1 133 5 view .LVU82
 278 0060 9C63     		str	r4, [r3, #56]
 133:Board/v3/Src/usart.c **** 
 279              		.loc 1 133 5 view .LVU83
 136:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Channel = DMA_CHANNEL_4;
 280              		.loc 1 136 5 view .LVU84
 136:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Channel = DMA_CHANNEL_4;
 281              		.loc 1 136 28 is_stmt 0 view .LVU85
 282 0062 4148     		ldr	r0, .L27+16
 283 0064 414B     		ldr	r3, .L27+20
 284 0066 0360     		str	r3, [r0]
 137:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 285              		.loc 1 137 5 is_stmt 1 view .LVU86
 137:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 286              		.loc 1 137 32 is_stmt 0 view .LVU87
 287 0068 4FF00063 		mov	r3, #134217728
 288 006c 4360     		str	r3, [r0, #4]
 138:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 289              		.loc 1 138 5 is_stmt 1 view .LVU88
 138:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 290              		.loc 1 138 34 is_stmt 0 view .LVU89
 291 006e 4023     		movs	r3, #64
 292 0070 8360     		str	r3, [r0, #8]
 139:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemInc = DMA_MINC_ENABLE;
 293              		.loc 1 139 5 is_stmt 1 view .LVU90
 139:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemInc = DMA_MINC_ENABLE;
 294              		.loc 1 139 34 is_stmt 0 view .LVU91
 295 0072 0023     		movs	r3, #0
 296 0074 C360     		str	r3, [r0, #12]
 140:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 297              		.loc 1 140 5 is_stmt 1 view .LVU92
 140:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 298              		.loc 1 140 31 is_stmt 0 view .LVU93
 299 0076 4FF48062 		mov	r2, #1024
 300 007a 0261     		str	r2, [r0, #16]
 141:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 301              		.loc 1 141 5 is_stmt 1 view .LVU94
 141:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 302              		.loc 1 141 44 is_stmt 0 view .LVU95
 303 007c 4361     		str	r3, [r0, #20]
 142:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Mode = DMA_NORMAL;
 304              		.loc 1 142 5 is_stmt 1 view .LVU96
 142:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Mode = DMA_NORMAL;
 305              		.loc 1 142 41 is_stmt 0 view .LVU97
 306 007e 8361     		str	r3, [r0, #24]
 143:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Priority = DMA_PRIORITY_LOW;
 307              		.loc 1 143 5 is_stmt 1 view .LVU98
 143:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/ccm8We9h.s 			page 11


 308              		.loc 1 143 29 is_stmt 0 view .LVU99
 309 0080 C361     		str	r3, [r0, #28]
 144:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 310              		.loc 1 144 5 is_stmt 1 view .LVU100
 144:Board/v3/Src/usart.c ****     hdma_uart4_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 311              		.loc 1 144 33 is_stmt 0 view .LVU101
 312 0082 0362     		str	r3, [r0, #32]
 145:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_tx) != HAL_OK)
 313              		.loc 1 145 5 is_stmt 1 view .LVU102
 145:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_uart4_tx) != HAL_OK)
 314              		.loc 1 145 33 is_stmt 0 view .LVU103
 315 0084 4362     		str	r3, [r0, #36]
 146:Board/v3/Src/usart.c ****     {
 316              		.loc 1 146 5 is_stmt 1 view .LVU104
 146:Board/v3/Src/usart.c ****     {
 317              		.loc 1 146 9 is_stmt 0 view .LVU105
 318 0086 FFF7FEFF 		bl	HAL_DMA_Init
 319              	.LVL9:
 146:Board/v3/Src/usart.c ****     {
 320              		.loc 1 146 8 view .LVU106
 321 008a 80B9     		cbnz	r0, .L24
 322              	.L16:
 151:Board/v3/Src/usart.c **** 
 323              		.loc 1 151 5 is_stmt 1 view .LVU107
 151:Board/v3/Src/usart.c **** 
 324              		.loc 1 151 5 view .LVU108
 325 008c 364B     		ldr	r3, .L27+16
 326 008e 2363     		str	r3, [r4, #48]
 151:Board/v3/Src/usart.c **** 
 327              		.loc 1 151 5 view .LVU109
 328 0090 9C63     		str	r4, [r3, #56]
 151:Board/v3/Src/usart.c **** 
 329              		.loc 1 151 5 view .LVU110
 154:Board/v3/Src/usart.c ****     HAL_NVIC_EnableIRQ(UART4_IRQn);
 330              		.loc 1 154 5 view .LVU111
 331 0092 0022     		movs	r2, #0
 332 0094 0A21     		movs	r1, #10
 333 0096 3420     		movs	r0, #52
 334 0098 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 335              	.LVL10:
 155:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspInit 1 */
 336              		.loc 1 155 5 view .LVU112
 337 009c 3420     		movs	r0, #52
 338 009e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 339              	.LVL11:
 340 00a2 B7E7     		b	.L13
 341              	.L23:
 130:Board/v3/Src/usart.c ****     }
 342              		.loc 1 130 7 view .LVU113
 343 00a4 8221     		movs	r1, #130
 344 00a6 3248     		ldr	r0, .L27+24
 345 00a8 FFF7FEFF 		bl	_Error_Handler
 346              	.LVL12:
 347 00ac D6E7     		b	.L15
 348              	.L24:
 148:Board/v3/Src/usart.c ****     }
 349              		.loc 1 148 7 view .LVU114
ARM GAS  /tmp/ccm8We9h.s 			page 12


 350 00ae 9421     		movs	r1, #148
 351 00b0 2F48     		ldr	r0, .L27+24
 352 00b2 FFF7FEFF 		bl	_Error_Handler
 353              	.LVL13:
 354 00b6 E9E7     		b	.L16
 355              	.LVL14:
 356              	.L22:
 166:Board/v3/Src/usart.c **** 
 357              		.loc 1 166 5 view .LVU115
 358              	.LBB3:
 166:Board/v3/Src/usart.c **** 
 359              		.loc 1 166 5 view .LVU116
 360 00b8 0023     		movs	r3, #0
 361 00ba 0193     		str	r3, [sp, #4]
 166:Board/v3/Src/usart.c **** 
 362              		.loc 1 166 5 view .LVU117
 363 00bc 02F5FA32 		add	r2, r2, #128000
 364 00c0 116C     		ldr	r1, [r2, #64]
 365 00c2 41F40031 		orr	r1, r1, #131072
 366 00c6 1164     		str	r1, [r2, #64]
 166:Board/v3/Src/usart.c **** 
 367              		.loc 1 166 5 view .LVU118
 368 00c8 126C     		ldr	r2, [r2, #64]
 369 00ca 02F40032 		and	r2, r2, #131072
 370 00ce 0192     		str	r2, [sp, #4]
 166:Board/v3/Src/usart.c **** 
 371              		.loc 1 166 5 view .LVU119
 372 00d0 019A     		ldr	r2, [sp, #4]
 373              	.LBE3:
 166:Board/v3/Src/usart.c **** 
 374              		.loc 1 166 5 view .LVU120
 170:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 375              		.loc 1 170 5 view .LVU121
 170:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 376              		.loc 1 170 29 is_stmt 0 view .LVU122
 377 00d2 2848     		ldr	r0, .L27+28
 378              	.LVL15:
 170:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 379              		.loc 1 170 29 view .LVU123
 380 00d4 284A     		ldr	r2, .L27+32
 381 00d6 0260     		str	r2, [r0]
 171:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 382              		.loc 1 171 5 is_stmt 1 view .LVU124
 171:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 383              		.loc 1 171 33 is_stmt 0 view .LVU125
 384 00d8 4FF00062 		mov	r2, #134217728
 385 00dc 4260     		str	r2, [r0, #4]
 172:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 386              		.loc 1 172 5 is_stmt 1 view .LVU126
 172:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 387              		.loc 1 172 35 is_stmt 0 view .LVU127
 388 00de 8360     		str	r3, [r0, #8]
 173:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 389              		.loc 1 173 5 is_stmt 1 view .LVU128
 173:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 390              		.loc 1 173 35 is_stmt 0 view .LVU129
 391 00e0 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccm8We9h.s 			page 13


 174:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 392              		.loc 1 174 5 is_stmt 1 view .LVU130
 174:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 393              		.loc 1 174 32 is_stmt 0 view .LVU131
 394 00e2 4FF48062 		mov	r2, #1024
 395 00e6 0261     		str	r2, [r0, #16]
 175:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 396              		.loc 1 175 5 is_stmt 1 view .LVU132
 175:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 397              		.loc 1 175 45 is_stmt 0 view .LVU133
 398 00e8 4361     		str	r3, [r0, #20]
 176:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 399              		.loc 1 176 5 is_stmt 1 view .LVU134
 176:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 400              		.loc 1 176 42 is_stmt 0 view .LVU135
 401 00ea 8361     		str	r3, [r0, #24]
 177:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 402              		.loc 1 177 5 is_stmt 1 view .LVU136
 177:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 403              		.loc 1 177 30 is_stmt 0 view .LVU137
 404 00ec 4FF48072 		mov	r2, #256
 405 00f0 C261     		str	r2, [r0, #28]
 178:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 406              		.loc 1 178 5 is_stmt 1 view .LVU138
 178:Board/v3/Src/usart.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 407              		.loc 1 178 34 is_stmt 0 view .LVU139
 408 00f2 0362     		str	r3, [r0, #32]
 179:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 409              		.loc 1 179 5 is_stmt 1 view .LVU140
 179:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 410              		.loc 1 179 34 is_stmt 0 view .LVU141
 411 00f4 4362     		str	r3, [r0, #36]
 180:Board/v3/Src/usart.c ****     {
 412              		.loc 1 180 5 is_stmt 1 view .LVU142
 180:Board/v3/Src/usart.c ****     {
 413              		.loc 1 180 9 is_stmt 0 view .LVU143
 414 00f6 FFF7FEFF 		bl	HAL_DMA_Init
 415              	.LVL16:
 180:Board/v3/Src/usart.c ****     {
 416              		.loc 1 180 8 view .LVU144
 417 00fa 18BB     		cbnz	r0, .L25
 418              	.L18:
 185:Board/v3/Src/usart.c **** 
 419              		.loc 1 185 5 is_stmt 1 view .LVU145
 185:Board/v3/Src/usart.c **** 
 420              		.loc 1 185 5 view .LVU146
 421 00fc 1D4B     		ldr	r3, .L27+28
 422 00fe 6363     		str	r3, [r4, #52]
 185:Board/v3/Src/usart.c **** 
 423              		.loc 1 185 5 view .LVU147
 424 0100 9C63     		str	r4, [r3, #56]
 185:Board/v3/Src/usart.c **** 
 425              		.loc 1 185 5 view .LVU148
 188:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 426              		.loc 1 188 5 view .LVU149
 188:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 427              		.loc 1 188 29 is_stmt 0 view .LVU150
ARM GAS  /tmp/ccm8We9h.s 			page 14


 428 0102 1E48     		ldr	r0, .L27+36
 429 0104 1E4B     		ldr	r3, .L27+40
 430 0106 0360     		str	r3, [r0]
 189:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 431              		.loc 1 189 5 is_stmt 1 view .LVU151
 189:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 432              		.loc 1 189 33 is_stmt 0 view .LVU152
 433 0108 4FF00063 		mov	r3, #134217728
 434 010c 4360     		str	r3, [r0, #4]
 190:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 435              		.loc 1 190 5 is_stmt 1 view .LVU153
 190:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 436              		.loc 1 190 35 is_stmt 0 view .LVU154
 437 010e 4023     		movs	r3, #64
 438 0110 8360     		str	r3, [r0, #8]
 191:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 439              		.loc 1 191 5 is_stmt 1 view .LVU155
 191:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 440              		.loc 1 191 35 is_stmt 0 view .LVU156
 441 0112 0023     		movs	r3, #0
 442 0114 C360     		str	r3, [r0, #12]
 192:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 443              		.loc 1 192 5 is_stmt 1 view .LVU157
 192:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 444              		.loc 1 192 32 is_stmt 0 view .LVU158
 445 0116 4FF48062 		mov	r2, #1024
 446 011a 0261     		str	r2, [r0, #16]
 193:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 447              		.loc 1 193 5 is_stmt 1 view .LVU159
 193:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 448              		.loc 1 193 45 is_stmt 0 view .LVU160
 449 011c 4361     		str	r3, [r0, #20]
 194:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 450              		.loc 1 194 5 is_stmt 1 view .LVU161
 194:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 451              		.loc 1 194 42 is_stmt 0 view .LVU162
 452 011e 8361     		str	r3, [r0, #24]
 195:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 453              		.loc 1 195 5 is_stmt 1 view .LVU163
 195:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 454              		.loc 1 195 30 is_stmt 0 view .LVU164
 455 0120 C361     		str	r3, [r0, #28]
 196:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 456              		.loc 1 196 5 is_stmt 1 view .LVU165
 196:Board/v3/Src/usart.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 457              		.loc 1 196 34 is_stmt 0 view .LVU166
 458 0122 0362     		str	r3, [r0, #32]
 197:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 459              		.loc 1 197 5 is_stmt 1 view .LVU167
 197:Board/v3/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 460              		.loc 1 197 34 is_stmt 0 view .LVU168
 461 0124 4362     		str	r3, [r0, #36]
 198:Board/v3/Src/usart.c ****     {
 462              		.loc 1 198 5 is_stmt 1 view .LVU169
 198:Board/v3/Src/usart.c ****     {
 463              		.loc 1 198 9 is_stmt 0 view .LVU170
 464 0126 FFF7FEFF 		bl	HAL_DMA_Init
ARM GAS  /tmp/ccm8We9h.s 			page 15


 465              	.LVL17:
 198:Board/v3/Src/usart.c ****     {
 466              		.loc 1 198 8 view .LVU171
 467 012a 80B9     		cbnz	r0, .L26
 468              	.L19:
 203:Board/v3/Src/usart.c **** 
 469              		.loc 1 203 5 is_stmt 1 view .LVU172
 203:Board/v3/Src/usart.c **** 
 470              		.loc 1 203 5 view .LVU173
 471 012c 134B     		ldr	r3, .L27+36
 472 012e 2363     		str	r3, [r4, #48]
 203:Board/v3/Src/usart.c **** 
 473              		.loc 1 203 5 view .LVU174
 474 0130 9C63     		str	r4, [r3, #56]
 203:Board/v3/Src/usart.c **** 
 475              		.loc 1 203 5 view .LVU175
 206:Board/v3/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 476              		.loc 1 206 5 view .LVU176
 477 0132 0022     		movs	r2, #0
 478 0134 0A21     		movs	r1, #10
 479 0136 2620     		movs	r0, #38
 480 0138 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 481              	.LVL18:
 207:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 482              		.loc 1 207 5 view .LVU177
 483 013c 2620     		movs	r0, #38
 484 013e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 485              	.LVL19:
 486              		.loc 1 212 1 is_stmt 0 view .LVU178
 487 0142 67E7     		b	.L13
 488              	.L25:
 182:Board/v3/Src/usart.c ****     }
 489              		.loc 1 182 7 is_stmt 1 view .LVU179
 490 0144 B621     		movs	r1, #182
 491 0146 0A48     		ldr	r0, .L27+24
 492 0148 FFF7FEFF 		bl	_Error_Handler
 493              	.LVL20:
 494 014c D6E7     		b	.L18
 495              	.L26:
 200:Board/v3/Src/usart.c ****     }
 496              		.loc 1 200 7 view .LVU180
 497 014e C821     		movs	r1, #200
 498 0150 0748     		ldr	r0, .L27+24
 499 0152 FFF7FEFF 		bl	_Error_Handler
 500              	.LVL21:
 501 0156 E9E7     		b	.L19
 502              	.L28:
 503              		.align	2
 504              	.L27:
 505 0158 004C0040 		.word	1073761280
 506 015c 00440040 		.word	1073759232
 507 0160 00000000 		.word	.LANCHOR2
 508 0164 40600240 		.word	1073897536
 509 0168 00000000 		.word	.LANCHOR3
 510 016c 70600240 		.word	1073897584
 511 0170 00000000 		.word	.LC0
 512 0174 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccm8We9h.s 			page 16


 513 0178 88600240 		.word	1073897608
 514 017c 00000000 		.word	.LANCHOR5
 515 0180 A0600240 		.word	1073897632
 516              		.cfi_endproc
 517              	.LFE135:
 519              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_UART_MspDeInit
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	HAL_UART_MspDeInit:
 527              	.LVL22:
 528              	.LFB136:
 213:Board/v3/Src/usart.c **** 
 214:Board/v3/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 215:Board/v3/Src/usart.c **** {
 529              		.loc 1 215 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		.loc 1 215 1 is_stmt 0 view .LVU182
 534 0000 10B5     		push	{r4, lr}
 535              	.LCFI6:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 539 0002 0446     		mov	r4, r0
 216:Board/v3/Src/usart.c **** 
 217:Board/v3/Src/usart.c ****   if(uartHandle->Instance==UART4)
 540              		.loc 1 217 3 is_stmt 1 view .LVU183
 541              		.loc 1 217 16 is_stmt 0 view .LVU184
 542 0004 0368     		ldr	r3, [r0]
 543              		.loc 1 217 5 view .LVU185
 544 0006 134A     		ldr	r2, .L35
 545 0008 9342     		cmp	r3, r2
 546 000a 03D0     		beq	.L33
 218:Board/v3/Src/usart.c ****   {
 219:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspDeInit 0 */
 220:Board/v3/Src/usart.c **** 
 221:Board/v3/Src/usart.c ****   /* USER CODE END UART4_MspDeInit 0 */
 222:Board/v3/Src/usart.c ****     /* Peripheral clock disable */
 223:Board/v3/Src/usart.c ****     __HAL_RCC_UART4_CLK_DISABLE();
 224:Board/v3/Src/usart.c **** 
 225:Board/v3/Src/usart.c ****     /* UART4 DMA DeInit */
 226:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 227:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 228:Board/v3/Src/usart.c **** 
 229:Board/v3/Src/usart.c ****     /* UART4 interrupt Deinit */
 230:Board/v3/Src/usart.c ****     HAL_NVIC_DisableIRQ(UART4_IRQn);
 231:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspDeInit 1 */
 232:Board/v3/Src/usart.c **** 
 233:Board/v3/Src/usart.c ****   /* USER CODE END UART4_MspDeInit 1 */
 234:Board/v3/Src/usart.c ****   }
 235:Board/v3/Src/usart.c ****   else if(uartHandle->Instance==USART2)
 547              		.loc 1 235 8 is_stmt 1 view .LVU186
 548              		.loc 1 235 10 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccm8We9h.s 			page 17


 549 000c 124A     		ldr	r2, .L35+4
 550 000e 9342     		cmp	r3, r2
 551 0010 10D0     		beq	.L34
 552              	.LVL23:
 553              	.L29:
 236:Board/v3/Src/usart.c ****   {
 237:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 238:Board/v3/Src/usart.c **** 
 239:Board/v3/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 240:Board/v3/Src/usart.c ****     /* Peripheral clock disable */
 241:Board/v3/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 242:Board/v3/Src/usart.c **** 
 243:Board/v3/Src/usart.c ****     /* USART2 DMA DeInit */
 244:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 245:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 246:Board/v3/Src/usart.c **** 
 247:Board/v3/Src/usart.c ****     /* USART2 interrupt Deinit */
 248:Board/v3/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 249:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 250:Board/v3/Src/usart.c **** 
 251:Board/v3/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 252:Board/v3/Src/usart.c ****   }
 253:Board/v3/Src/usart.c **** } 
 554              		.loc 1 253 1 view .LVU188
 555 0012 10BD     		pop	{r4, pc}
 556              	.LVL24:
 557              	.L33:
 223:Board/v3/Src/usart.c **** 
 558              		.loc 1 223 5 is_stmt 1 view .LVU189
 559 0014 02F5F632 		add	r2, r2, #125952
 560 0018 136C     		ldr	r3, [r2, #64]
 561 001a 23F40023 		bic	r3, r3, #524288
 562 001e 1364     		str	r3, [r2, #64]
 226:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 563              		.loc 1 226 5 view .LVU190
 564 0020 406B     		ldr	r0, [r0, #52]
 565              	.LVL25:
 226:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 566              		.loc 1 226 5 is_stmt 0 view .LVU191
 567 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 568              	.LVL26:
 227:Board/v3/Src/usart.c **** 
 569              		.loc 1 227 5 is_stmt 1 view .LVU192
 570 0026 206B     		ldr	r0, [r4, #48]
 571 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 572              	.LVL27:
 230:Board/v3/Src/usart.c ****   /* USER CODE BEGIN UART4_MspDeInit 1 */
 573              		.loc 1 230 5 view .LVU193
 574 002c 3420     		movs	r0, #52
 575 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 576              	.LVL28:
 577 0032 EEE7     		b	.L29
 578              	.LVL29:
 579              	.L34:
 241:Board/v3/Src/usart.c **** 
 580              		.loc 1 241 5 view .LVU194
 581 0034 02F5FA32 		add	r2, r2, #128000
ARM GAS  /tmp/ccm8We9h.s 			page 18


 582 0038 136C     		ldr	r3, [r2, #64]
 583 003a 23F40033 		bic	r3, r3, #131072
 584 003e 1364     		str	r3, [r2, #64]
 244:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 585              		.loc 1 244 5 view .LVU195
 586 0040 406B     		ldr	r0, [r0, #52]
 587              	.LVL30:
 244:Board/v3/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 588              		.loc 1 244 5 is_stmt 0 view .LVU196
 589 0042 FFF7FEFF 		bl	HAL_DMA_DeInit
 590              	.LVL31:
 245:Board/v3/Src/usart.c **** 
 591              		.loc 1 245 5 is_stmt 1 view .LVU197
 592 0046 206B     		ldr	r0, [r4, #48]
 593 0048 FFF7FEFF 		bl	HAL_DMA_DeInit
 594              	.LVL32:
 248:Board/v3/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 595              		.loc 1 248 5 view .LVU198
 596 004c 2620     		movs	r0, #38
 597 004e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 598              	.LVL33:
 599              		.loc 1 253 1 is_stmt 0 view .LVU199
 600 0052 DEE7     		b	.L29
 601              	.L36:
 602              		.align	2
 603              	.L35:
 604 0054 004C0040 		.word	1073761280
 605 0058 00440040 		.word	1073759232
 606              		.cfi_endproc
 607              	.LFE136:
 609              		.global	hdma_usart2_tx
 610              		.global	hdma_usart2_rx
 611              		.global	hdma_uart4_tx
 612              		.global	hdma_uart4_rx
 613              		.global	huart2
 614              		.global	huart4
 615              		.section	.bss.hdma_uart4_rx,"aw",%nobits
 616              		.align	2
 617              		.set	.LANCHOR2,. + 0
 620              	hdma_uart4_rx:
 621 0000 00000000 		.space	96
 621      00000000 
 621      00000000 
 621      00000000 
 621      00000000 
 622              		.section	.bss.hdma_uart4_tx,"aw",%nobits
 623              		.align	2
 624              		.set	.LANCHOR3,. + 0
 627              	hdma_uart4_tx:
 628 0000 00000000 		.space	96
 628      00000000 
 628      00000000 
 628      00000000 
 628      00000000 
 629              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 630              		.align	2
 631              		.set	.LANCHOR4,. + 0
ARM GAS  /tmp/ccm8We9h.s 			page 19


 634              	hdma_usart2_rx:
 635 0000 00000000 		.space	96
 635      00000000 
 635      00000000 
 635      00000000 
 635      00000000 
 636              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 637              		.align	2
 638              		.set	.LANCHOR5,. + 0
 641              	hdma_usart2_tx:
 642 0000 00000000 		.space	96
 642      00000000 
 642      00000000 
 642      00000000 
 642      00000000 
 643              		.section	.bss.huart2,"aw",%nobits
 644              		.align	2
 645              		.set	.LANCHOR1,. + 0
 648              	huart2:
 649 0000 00000000 		.space	64
 649      00000000 
 649      00000000 
 649      00000000 
 649      00000000 
 650              		.section	.bss.huart4,"aw",%nobits
 651              		.align	2
 652              		.set	.LANCHOR0,. + 0
 655              	huart4:
 656 0000 00000000 		.space	64
 656      00000000 
 656      00000000 
 656      00000000 
 656      00000000 
 657              		.text
 658              	.Letext0:
 659              		.file 2 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 660              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 661              		.file 4 "ThirdParty/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 662              		.file 5 "ThirdParty/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 663              		.file 6 "ThirdParty/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 664              		.file 7 "ThirdParty/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 665              		.file 8 "Board/v3/Inc/usart.h"
 666              		.file 9 "ThirdParty/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 667              		.file 10 "Board/v3/Inc/dma.h"
ARM GAS  /tmp/ccm8We9h.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccm8We9h.s:20     .rodata.MX_UART4_Init.str1.4:0000000000000000 $d
     /tmp/ccm8We9h.s:24     .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccm8We9h.s:30     .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccm8We9h.s:87     .text.MX_UART4_Init:000000000000002c $d
     /tmp/ccm8We9h.s:94     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccm8We9h.s:100    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccm8We9h.s:156    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccm8We9h.s:163    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccm8We9h.s:169    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccm8We9h.s:505    .text.HAL_UART_MspInit:0000000000000158 $d
     /tmp/ccm8We9h.s:520    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccm8We9h.s:526    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccm8We9h.s:604    .text.HAL_UART_MspDeInit:0000000000000054 $d
     /tmp/ccm8We9h.s:641    .bss.hdma_usart2_tx:0000000000000000 hdma_usart2_tx
     /tmp/ccm8We9h.s:634    .bss.hdma_usart2_rx:0000000000000000 hdma_usart2_rx
     /tmp/ccm8We9h.s:627    .bss.hdma_uart4_tx:0000000000000000 hdma_uart4_tx
     /tmp/ccm8We9h.s:620    .bss.hdma_uart4_rx:0000000000000000 hdma_uart4_rx
     /tmp/ccm8We9h.s:648    .bss.huart2:0000000000000000 huart2
     /tmp/ccm8We9h.s:655    .bss.huart4:0000000000000000 huart4
     /tmp/ccm8We9h.s:616    .bss.hdma_uart4_rx:0000000000000000 $d
     /tmp/ccm8We9h.s:623    .bss.hdma_uart4_tx:0000000000000000 $d
     /tmp/ccm8We9h.s:630    .bss.hdma_usart2_rx:0000000000000000 $d
     /tmp/ccm8We9h.s:637    .bss.hdma_usart2_tx:0000000000000000 $d
     /tmp/ccm8We9h.s:644    .bss.huart2:0000000000000000 $d
     /tmp/ccm8We9h.s:651    .bss.huart4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
