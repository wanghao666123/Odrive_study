ARM GAS  /tmp/ccrmmslP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"interface_usb.cpp"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 7573625F 		.ascii	"usb_server_thread_def\000"
  19      73657276 
  19      65725F74 
  19      68726561 
  19      645F6465 
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text._ZN5fibre16Stm32UsbTxStream12cancel_writeEj,"ax",%progbits
  24              		.align	1
  25              		.global	_ZN5fibre16Stm32UsbTxStream12cancel_writeEj
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	_ZN5fibre16Stm32UsbTxStream12cancel_writeEj:
  31              		.fnstart
  32              	.LVL0:
  33              	.LFB5187:
  34              		.file 1 "communication/interface_usb.cpp"
   1:communication/interface_usb.cpp **** 
   2:communication/interface_usb.cpp **** #include "interface_usb.h"
   3:communication/interface_usb.cpp **** #include "ascii_protocol.hpp"
   4:communication/interface_usb.cpp **** 
   5:communication/interface_usb.cpp **** #include <MotorControl/utils.hpp>
   6:communication/interface_usb.cpp **** 
   7:communication/interface_usb.cpp **** #include <fibre/async_stream.hpp>
   8:communication/interface_usb.cpp **** #include <fibre/../../legacy_protocol.hpp>
   9:communication/interface_usb.cpp **** #include <usbd_cdc.h>
  10:communication/interface_usb.cpp **** #include <usbd_cdc_if.h>
  11:communication/interface_usb.cpp **** #include <usb_device.h>
  12:communication/interface_usb.cpp **** #include <cmsis_os.h>
  13:communication/interface_usb.cpp **** #include <freertos_vars.h>
  14:communication/interface_usb.cpp **** 
  15:communication/interface_usb.cpp **** #include <odrive_main.h>
  16:communication/interface_usb.cpp **** 
  17:communication/interface_usb.cpp **** osThreadId usb_thread;
  18:communication/interface_usb.cpp **** const uint32_t stack_size_usb_thread = 4096; // Bytes
  19:communication/interface_usb.cpp **** USBStats_t usb_stats_;
  20:communication/interface_usb.cpp **** 
ARM GAS  /tmp/ccrmmslP.s 			page 2


  21:communication/interface_usb.cpp **** namespace fibre {
  22:communication/interface_usb.cpp **** 
  23:communication/interface_usb.cpp **** class Stm32UsbTxStream : public AsyncStreamSink {
  24:communication/interface_usb.cpp **** public:
  25:communication/interface_usb.cpp ****     Stm32UsbTxStream(uint8_t endpoint_num) : endpoint_num_(endpoint_num) {}
  26:communication/interface_usb.cpp **** 
  27:communication/interface_usb.cpp ****     void start_write(cbufptr_t buffer, TransferHandle* handle, Callback<void, WriteResult> complete
  28:communication/interface_usb.cpp ****     void cancel_write(TransferHandle transfer_handle) final;
  29:communication/interface_usb.cpp ****     void did_finish();
  30:communication/interface_usb.cpp **** 
  31:communication/interface_usb.cpp ****     const uint8_t endpoint_num_;
  32:communication/interface_usb.cpp ****     bool connected_ = false;
  33:communication/interface_usb.cpp ****     Callback<void, WriteResult> completer_;
  34:communication/interface_usb.cpp ****     const uint8_t* tx_end_ = nullptr;
  35:communication/interface_usb.cpp **** };
  36:communication/interface_usb.cpp **** 
  37:communication/interface_usb.cpp **** class Stm32UsbRxStream : public AsyncStreamSource {
  38:communication/interface_usb.cpp **** public:
  39:communication/interface_usb.cpp ****     Stm32UsbRxStream(uint8_t endpoint_num) : endpoint_num_(endpoint_num) {}
  40:communication/interface_usb.cpp **** 
  41:communication/interface_usb.cpp ****     void start_read(bufptr_t buffer, TransferHandle* handle, Callback<void, ReadResult> completer) 
  42:communication/interface_usb.cpp ****     void cancel_read(TransferHandle transfer_handle) final;
  43:communication/interface_usb.cpp ****     void did_finish();
  44:communication/interface_usb.cpp ****     
  45:communication/interface_usb.cpp ****     const uint8_t endpoint_num_;
  46:communication/interface_usb.cpp ****     bool connected_ = false;
  47:communication/interface_usb.cpp ****     Callback<void, ReadResult> completer_;
  48:communication/interface_usb.cpp ****     uint8_t* rx_end_ = nullptr;
  49:communication/interface_usb.cpp **** };
  50:communication/interface_usb.cpp **** 
  51:communication/interface_usb.cpp **** }
  52:communication/interface_usb.cpp **** 
  53:communication/interface_usb.cpp **** using namespace fibre;
  54:communication/interface_usb.cpp **** 
  55:communication/interface_usb.cpp **** void Stm32UsbTxStream::start_write(cbufptr_t buffer, TransferHandle* handle, Callback<void, WriteRe
  56:communication/interface_usb.cpp ****     if (handle) {
  57:communication/interface_usb.cpp ****         *handle = reinterpret_cast<TransferHandle>(this);
  58:communication/interface_usb.cpp ****     }
  59:communication/interface_usb.cpp **** 
  60:communication/interface_usb.cpp ****     if (!connected_) {
  61:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
  62:communication/interface_usb.cpp ****         return;
  63:communication/interface_usb.cpp ****     }
  64:communication/interface_usb.cpp **** 
  65:communication/interface_usb.cpp ****     // Note on MTU: on the physical layer, a full speed device can transmit up
  66:communication/interface_usb.cpp ****     // to 64 bytes of payload per bulk package. However a single logical
  67:communication/interface_usb.cpp ****     // transfer can consist of multiple 64 byte packets terminated by a 0 byte
  68:communication/interface_usb.cpp ****     // packet. Currently we don't implement this segmentation. Therefore we
  69:communication/interface_usb.cpp ****     // must ensure that all packets are < 64 bytes, otherwise the host will wait
  70:communication/interface_usb.cpp ****     // for more.
  71:communication/interface_usb.cpp ****     if (buffer.size() >= USB_TX_DATA_SIZE) {
  72:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
  73:communication/interface_usb.cpp ****         return;
  74:communication/interface_usb.cpp ****     }
  75:communication/interface_usb.cpp **** 
  76:communication/interface_usb.cpp ****     if (completer_ || tx_end_) {
  77:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
ARM GAS  /tmp/ccrmmslP.s 			page 3


  78:communication/interface_usb.cpp ****         return;
  79:communication/interface_usb.cpp ****     }
  80:communication/interface_usb.cpp **** 
  81:communication/interface_usb.cpp ****     completer_ = completer;
  82:communication/interface_usb.cpp ****     tx_end_ = buffer.end();
  83:communication/interface_usb.cpp **** 
  84:communication/interface_usb.cpp ****     if (
  85:communication/interface_usb.cpp **** #if HW_VERSION_MAJOR == 3 // TODO: remove preprocessor switch
  86:communication/interface_usb.cpp ****         CDC_Transmit_FS
  87:communication/interface_usb.cpp **** #elif HW_VERSION_MAJOR == 4
  88:communication/interface_usb.cpp ****         CDC_Transmit_HS
  89:communication/interface_usb.cpp **** #else
  90:communication/interface_usb.cpp **** #error "not supported"
  91:communication/interface_usb.cpp **** #endif
  92:communication/interface_usb.cpp ****         (const_cast<uint8_t*>(buffer.begin()), buffer.size(), endpoint_num_) != USBD_OK) {
  93:communication/interface_usb.cpp ****         tx_end_ = nullptr;
  94:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
  95:communication/interface_usb.cpp ****     }
  96:communication/interface_usb.cpp **** }
  97:communication/interface_usb.cpp **** 
  98:communication/interface_usb.cpp **** void Stm32UsbTxStream::cancel_write(TransferHandle transfer_handle) {
  35              		.loc 1 98 69 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  99:communication/interface_usb.cpp ****     // not implemented
 100:communication/interface_usb.cpp **** }
  40              		.loc 1 100 1 is_stmt 0 view .LVU1
  41 0000 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE5187:
  44              		.cantunwind
  45              		.fnend
  47              		.section	.text._ZN5fibre16Stm32UsbRxStream11cancel_readEj,"ax",%progbits
  48              		.align	1
  49              		.global	_ZN5fibre16Stm32UsbRxStream11cancel_readEj
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	_ZN5fibre16Stm32UsbRxStream11cancel_readEj:
  55              		.fnstart
  56              	.LVL1:
  57              	.LFB5190:
 101:communication/interface_usb.cpp **** 
 102:communication/interface_usb.cpp **** void Stm32UsbTxStream::did_finish() {
 103:communication/interface_usb.cpp ****     const uint8_t* tx_end = tx_end_;
 104:communication/interface_usb.cpp ****     tx_end_ = nullptr;
 105:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, tx_end});
 106:communication/interface_usb.cpp **** }
 107:communication/interface_usb.cpp **** 
 108:communication/interface_usb.cpp **** void Stm32UsbRxStream::start_read(bufptr_t buffer, TransferHandle* handle, Callback<void, ReadResul
 109:communication/interface_usb.cpp ****     if (handle) {
 110:communication/interface_usb.cpp ****         *handle = reinterpret_cast<TransferHandle>(this);
 111:communication/interface_usb.cpp ****     }
 112:communication/interface_usb.cpp **** 
 113:communication/interface_usb.cpp ****     if (!connected_) {
ARM GAS  /tmp/ccrmmslP.s 			page 4


 114:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 115:communication/interface_usb.cpp ****         return;
 116:communication/interface_usb.cpp ****     }
 117:communication/interface_usb.cpp **** 
 118:communication/interface_usb.cpp ****     if (completer_ || rx_end_) {
 119:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 120:communication/interface_usb.cpp ****         return;
 121:communication/interface_usb.cpp ****     }
 122:communication/interface_usb.cpp **** 
 123:communication/interface_usb.cpp ****     completer_ = completer;
 124:communication/interface_usb.cpp ****     rx_end_ = buffer.begin(); // the pointer is updated at the end of the transfer
 125:communication/interface_usb.cpp **** 
 126:communication/interface_usb.cpp ****     if (USBD_CDC_ReceivePacket(&usb_dev_handle, buffer.begin(), buffer.size(), endpoint_num_) != US
 127:communication/interface_usb.cpp ****         rx_end_ = nullptr;
 128:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
 129:communication/interface_usb.cpp ****         return;
 130:communication/interface_usb.cpp ****     }
 131:communication/interface_usb.cpp **** }
 132:communication/interface_usb.cpp **** 
 133:communication/interface_usb.cpp **** void Stm32UsbRxStream::cancel_read(TransferHandle transfer_handle) {
  58              		.loc 1 133 68 is_stmt 1 view -0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 134:communication/interface_usb.cpp ****     // not implemented
 135:communication/interface_usb.cpp **** }
  63              		.loc 1 135 1 is_stmt 0 view .LVU3
  64 0000 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE5190:
  67              		.cantunwind
  68              		.fnend
  70              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_Z41__static_initialization_and_destruction_0ii:
  77              		.fnstart
  78              	.LVL2:
  79              	.LFB6277:
 136:communication/interface_usb.cpp **** 
 137:communication/interface_usb.cpp **** void Stm32UsbRxStream::did_finish() {
 138:communication/interface_usb.cpp ****     uint8_t* rx_end = rx_end_;
 139:communication/interface_usb.cpp ****     rx_end_ = nullptr;
 140:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, rx_end});
 141:communication/interface_usb.cpp **** }
 142:communication/interface_usb.cpp **** 
 143:communication/interface_usb.cpp **** Stm32UsbTxStream usb_cdc_tx_stream(CDC_IN_EP);
 144:communication/interface_usb.cpp **** Stm32UsbTxStream usb_native_tx_stream(ODRIVE_IN_EP);
 145:communication/interface_usb.cpp **** Stm32UsbRxStream usb_cdc_rx_stream(CDC_OUT_EP);
 146:communication/interface_usb.cpp **** Stm32UsbRxStream usb_native_rx_stream(ODRIVE_OUT_EP);
 147:communication/interface_usb.cpp **** 
 148:communication/interface_usb.cpp **** LegacyProtocolStreamBased fibre_over_cdc(&usb_cdc_rx_stream, &usb_cdc_tx_stream);
 149:communication/interface_usb.cpp **** LegacyProtocolPacketBased fibre_over_usb(&usb_native_rx_stream, &usb_native_tx_stream, USB_TX_DATA_
 150:communication/interface_usb.cpp **** 
ARM GAS  /tmp/ccrmmslP.s 			page 5


 151:communication/interface_usb.cpp **** fibre::AsyncStreamSinkMultiplexer<2> usb_cdc_tx_multiplexer(usb_cdc_tx_stream);
 152:communication/interface_usb.cpp **** fibre::BufferedStreamSink<64> usb_cdc_stdout_sink(usb_cdc_tx_multiplexer); // Used in communication
 153:communication/interface_usb.cpp **** AsciiProtocol ascii_over_cdc(&usb_cdc_rx_stream, &usb_cdc_tx_multiplexer);
 154:communication/interface_usb.cpp **** 
 155:communication/interface_usb.cpp **** bool usb_cdc_stdout_pending = false;
 156:communication/interface_usb.cpp **** 
 157:communication/interface_usb.cpp **** static void usb_server_thread(void * ctx) {
 158:communication/interface_usb.cpp ****     (void) ctx;
 159:communication/interface_usb.cpp ****  
 160:communication/interface_usb.cpp ****     for (;;) {
 161:communication/interface_usb.cpp ****         osEvent event = osMessageGet(usb_event_queue, osWaitForever);
 162:communication/interface_usb.cpp **** 
 163:communication/interface_usb.cpp ****         if (event.status != osEventMessage) {
 164:communication/interface_usb.cpp ****             continue;
 165:communication/interface_usb.cpp ****         }
 166:communication/interface_usb.cpp **** 
 167:communication/interface_usb.cpp ****         usb_stats_.rx_cnt++;
 168:communication/interface_usb.cpp **** 
 169:communication/interface_usb.cpp ****         switch (event.value.v) {
 170:communication/interface_usb.cpp ****             case 1: { // USB connected event
 171:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = true;
 172:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = true;
 173:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = true;
 174:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = true;
 175:communication/interface_usb.cpp **** 
 176:communication/interface_usb.cpp ****                 fibre_over_usb.start({});
 177:communication/interface_usb.cpp **** 
 178:communication/interface_usb.cpp ****                 if (odrv.config_.usb_cdc_protocol == ODrive::STREAM_PROTOCOL_TYPE_FIBRE) {
 179:communication/interface_usb.cpp ****                     fibre_over_cdc.start({});
 180:communication/interface_usb.cpp ****                 } else if (odrv.config_.usb_cdc_protocol == ODrive::STREAM_PROTOCOL_TYPE_ASCII
 181:communication/interface_usb.cpp ****                         || odrv.config_.usb_cdc_protocol == ODrive::STREAM_PROTOCOL_TYPE_ASCII_AND_
 182:communication/interface_usb.cpp ****                     ascii_over_cdc.start();
 183:communication/interface_usb.cpp ****                 }
 184:communication/interface_usb.cpp ****             } break;
 185:communication/interface_usb.cpp **** 
 186:communication/interface_usb.cpp ****             case 2: { // USB disconnected event
 187:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = false;
 188:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = false;
 189:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = false;
 190:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = false;
 191:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 192:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 193:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 194:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 195:communication/interface_usb.cpp ****             } break;
 196:communication/interface_usb.cpp **** 
 197:communication/interface_usb.cpp ****             case 3: { // TX on CDC interface done
 198:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 199:communication/interface_usb.cpp ****             } break;
 200:communication/interface_usb.cpp **** 
 201:communication/interface_usb.cpp ****             case 4: { // TX on custom interface done
 202:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 203:communication/interface_usb.cpp ****             } break;
 204:communication/interface_usb.cpp **** 
 205:communication/interface_usb.cpp ****             case 5: { // RX on CDC interface done
 206:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 207:communication/interface_usb.cpp ****             } break;
ARM GAS  /tmp/ccrmmslP.s 			page 6


 208:communication/interface_usb.cpp **** 
 209:communication/interface_usb.cpp ****             case 6: { // RX on custom interface done
 210:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 211:communication/interface_usb.cpp ****             } break;
 212:communication/interface_usb.cpp **** 
 213:communication/interface_usb.cpp ****             case 7: { // stdout has data
 214:communication/interface_usb.cpp ****                 usb_cdc_stdout_pending = false;
 215:communication/interface_usb.cpp ****                 usb_cdc_stdout_sink.maybe_start_async_write();
 216:communication/interface_usb.cpp ****             } break;
 217:communication/interface_usb.cpp ****         }
 218:communication/interface_usb.cpp ****     }
 219:communication/interface_usb.cpp **** }
 220:communication/interface_usb.cpp **** 
 221:communication/interface_usb.cpp **** // Called from CDC_Receive_FS callback function, this allows the communication
 222:communication/interface_usb.cpp **** // thread to handle the incoming data
 223:communication/interface_usb.cpp **** void usb_rx_process_packet(uint8_t *buf, uint32_t len, uint8_t endpoint_pair) {
 224:communication/interface_usb.cpp ****     if (endpoint_pair == CDC_OUT_EP && usb_cdc_rx_stream.rx_end_) {
 225:communication/interface_usb.cpp ****         usb_cdc_rx_stream.rx_end_ += len;
 226:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 5, 0);
 227:communication/interface_usb.cpp ****     } else if (endpoint_pair == ODRIVE_OUT_EP && usb_native_rx_stream.rx_end_) {
 228:communication/interface_usb.cpp ****         usb_native_rx_stream.rx_end_ += len;
 229:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 6, 0);
 230:communication/interface_usb.cpp ****     }
 231:communication/interface_usb.cpp **** }
 232:communication/interface_usb.cpp **** 
 233:communication/interface_usb.cpp **** void start_usb_server() {
 234:communication/interface_usb.cpp ****     // Start USB communication thread
 235:communication/interface_usb.cpp ****     osThreadDef(usb_server_thread_def, usb_server_thread, osPriorityNormal, 0, stack_size_usb_threa
 236:communication/interface_usb.cpp ****     usb_thread = osThreadCreate(osThread(usb_server_thread_def), NULL);
 237:communication/interface_usb.cpp **** }
  80              		.loc 1 237 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 1 237 1 is_stmt 0 view .LVU5
  86 0000 0128     		cmp	r0, #1
  87 0002 00D0     		beq	.L11
  88              	.L8:
  89 0004 7047     		bx	lr
  90              	.L11:
  91              		.loc 1 237 1 discriminator 1 view .LVU6
  92 0006 4FF6FF73 		movw	r3, #65535
  93 000a 9942     		cmp	r1, r3
  94 000c FAD1     		bne	.L8
  95              		.loc 1 237 1 view .LVU7
  96 000e F0B4     		push	{r4, r5, r6, r7}
  97              	.LCFI0:
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 7, -4
 103              	.LVL3:
 104              	.LBB566:
 105              	.LBI566:
  25:communication/interface_usb.cpp **** 
ARM GAS  /tmp/ccrmmslP.s 			page 7


 106              		.loc 1 25 5 is_stmt 1 view .LVU8
 107              	.LBB567:
 108              	.LBB568:
 109              	.LBB569:
 110              	.LBI569:
 111              		.file 2 "fibre-cpp/include/fibre/async_stream.hpp"
   1:fibre-cpp/include/fibre/async_stream.hpp **** #ifndef __FIBRE_ASYNC_STREAM_HPP
   2:fibre-cpp/include/fibre/async_stream.hpp **** #define __FIBRE_ASYNC_STREAM_HPP
   3:fibre-cpp/include/fibre/async_stream.hpp **** 
   4:fibre-cpp/include/fibre/async_stream.hpp **** #include <fibre/bufptr.hpp>
   5:fibre-cpp/include/fibre/async_stream.hpp **** #include <fibre/callback.hpp>
   6:fibre-cpp/include/fibre/async_stream.hpp **** #include <stdint.h>
   7:fibre-cpp/include/fibre/async_stream.hpp **** 
   8:fibre-cpp/include/fibre/async_stream.hpp **** namespace fibre {
   9:fibre-cpp/include/fibre/async_stream.hpp **** 
  10:fibre-cpp/include/fibre/async_stream.hpp **** enum StreamStatus {
  11:fibre-cpp/include/fibre/async_stream.hpp ****     kStreamOk,
  12:fibre-cpp/include/fibre/async_stream.hpp ****     kStreamCancelled,
  13:fibre-cpp/include/fibre/async_stream.hpp ****     kStreamClosed,
  14:fibre-cpp/include/fibre/async_stream.hpp ****     kStreamError
  15:fibre-cpp/include/fibre/async_stream.hpp **** };
  16:fibre-cpp/include/fibre/async_stream.hpp **** 
  17:fibre-cpp/include/fibre/async_stream.hpp **** 
  18:fibre-cpp/include/fibre/async_stream.hpp **** struct ReadResult {
  19:fibre-cpp/include/fibre/async_stream.hpp ****     StreamStatus status;
  20:fibre-cpp/include/fibre/async_stream.hpp **** 
  21:fibre-cpp/include/fibre/async_stream.hpp ****     /**
  22:fibre-cpp/include/fibre/async_stream.hpp ****      * @brief The pointer to one position after the last byte that was
  23:fibre-cpp/include/fibre/async_stream.hpp ****      * transferred.
  24:fibre-cpp/include/fibre/async_stream.hpp ****      * This must always be in [buffer.begin(), buffer.end()], even if the
  25:fibre-cpp/include/fibre/async_stream.hpp ****      * transfer was not succesful.
  26:fibre-cpp/include/fibre/async_stream.hpp ****      * If the status is kStreamError or kStreamCancelled then the accuracy
  27:fibre-cpp/include/fibre/async_stream.hpp ****      * of this field is not guaranteed.
  28:fibre-cpp/include/fibre/async_stream.hpp ****      */
  29:fibre-cpp/include/fibre/async_stream.hpp ****     unsigned char* end;
  30:fibre-cpp/include/fibre/async_stream.hpp **** };
  31:fibre-cpp/include/fibre/async_stream.hpp **** 
  32:fibre-cpp/include/fibre/async_stream.hpp **** struct WriteResult {
  33:fibre-cpp/include/fibre/async_stream.hpp ****     StreamStatus status;
  34:fibre-cpp/include/fibre/async_stream.hpp **** 
  35:fibre-cpp/include/fibre/async_stream.hpp ****     /**
  36:fibre-cpp/include/fibre/async_stream.hpp ****      * @brief The pointer to one position after the last byte that was
  37:fibre-cpp/include/fibre/async_stream.hpp ****      * transferred.
  38:fibre-cpp/include/fibre/async_stream.hpp ****      * This must always be in [buffer.begin(), buffer.end()], even if the
  39:fibre-cpp/include/fibre/async_stream.hpp ****      * transfer was not succesful.
  40:fibre-cpp/include/fibre/async_stream.hpp ****      * If the status is kStreamError or kStreamCancelled then the accuracy
  41:fibre-cpp/include/fibre/async_stream.hpp ****      * of this field is not guaranteed.
  42:fibre-cpp/include/fibre/async_stream.hpp ****      */
  43:fibre-cpp/include/fibre/async_stream.hpp ****     const unsigned char* end;
  44:fibre-cpp/include/fibre/async_stream.hpp **** };
  45:fibre-cpp/include/fibre/async_stream.hpp **** 
  46:fibre-cpp/include/fibre/async_stream.hpp **** 
  47:fibre-cpp/include/fibre/async_stream.hpp **** using TransferHandle = uintptr_t;
  48:fibre-cpp/include/fibre/async_stream.hpp **** 
  49:fibre-cpp/include/fibre/async_stream.hpp **** /**
  50:fibre-cpp/include/fibre/async_stream.hpp ****  * @brief Base class for asynchronous stream sources.
  51:fibre-cpp/include/fibre/async_stream.hpp ****  */
ARM GAS  /tmp/ccrmmslP.s 			page 8


  52:fibre-cpp/include/fibre/async_stream.hpp **** class AsyncStreamSource {
  53:fibre-cpp/include/fibre/async_stream.hpp **** public:
  54:fibre-cpp/include/fibre/async_stream.hpp ****     /**
  55:fibre-cpp/include/fibre/async_stream.hpp ****      * @brief Starts a read operation. Once the read operation completes,
  56:fibre-cpp/include/fibre/async_stream.hpp ****      * on_finished.complete() is called.
  57:fibre-cpp/include/fibre/async_stream.hpp ****      *
  58:fibre-cpp/include/fibre/async_stream.hpp ****      * Most implementations only allow one transfer to be active at a time.
  59:fibre-cpp/include/fibre/async_stream.hpp ****      *
  60:fibre-cpp/include/fibre/async_stream.hpp ****      * TODO: specify if `completer` can be called directly within this function.
  61:fibre-cpp/include/fibre/async_stream.hpp ****      *
  62:fibre-cpp/include/fibre/async_stream.hpp ****      * @param buffer: The buffer where the data to be written shall be fetched from.
  63:fibre-cpp/include/fibre/async_stream.hpp ****      *        Must remain valid until `completer` is satisfied.
  64:fibre-cpp/include/fibre/async_stream.hpp ****      * @param handle: The variable pointed to by this argument is set to an
  65:fibre-cpp/include/fibre/async_stream.hpp ****      *        opaque transfer handle that can be passed to cancel_read() as
  66:fibre-cpp/include/fibre/async_stream.hpp ****      *        long as the operation has not yet completed.
  67:fibre-cpp/include/fibre/async_stream.hpp ****      *        If the completer is invoked directly from start_read() then the
  68:fibre-cpp/include/fibre/async_stream.hpp ****      *        handle is not modified after this invokation. That means it's safe
  69:fibre-cpp/include/fibre/async_stream.hpp ****      *        for the completion handler to reuse the handle variable.
  70:fibre-cpp/include/fibre/async_stream.hpp ****      * @param completer: The completer that will be completed once the operation
  71:fibre-cpp/include/fibre/async_stream.hpp ****      *        finishes, whether successful or not.
  72:fibre-cpp/include/fibre/async_stream.hpp ****      *        Must remain valid until it is satisfied.
  73:fibre-cpp/include/fibre/async_stream.hpp ****      */
  74:fibre-cpp/include/fibre/async_stream.hpp ****     virtual void start_read(bufptr_t buffer, TransferHandle* handle, Callback<void, ReadResult> com
  75:fibre-cpp/include/fibre/async_stream.hpp **** 
  76:fibre-cpp/include/fibre/async_stream.hpp ****     /**
  77:fibre-cpp/include/fibre/async_stream.hpp ****      * @brief Cancels an operation that was previously started with start_read().
  78:fibre-cpp/include/fibre/async_stream.hpp ****      *
  79:fibre-cpp/include/fibre/async_stream.hpp ****      * The transfer is cancelled asynchronously and the associated completer
  80:fibre-cpp/include/fibre/async_stream.hpp ****      * will eventually be completed with kStreamCancelled. Until then the
  81:fibre-cpp/include/fibre/async_stream.hpp ****      * transfer must be considered still in progress and associated resources
  82:fibre-cpp/include/fibre/async_stream.hpp ****      * must not be freed.
  83:fibre-cpp/include/fibre/async_stream.hpp ****      * 
  84:fibre-cpp/include/fibre/async_stream.hpp ****      * TODO: specify if an implementation is allowed to return something other
  85:fibre-cpp/include/fibre/async_stream.hpp ****      * than kStreamCancelled when the transfer was cancelled.
  86:fibre-cpp/include/fibre/async_stream.hpp ****      *
  87:fibre-cpp/include/fibre/async_stream.hpp ****      * This function must not be called once the stream has started to invoke
  88:fibre-cpp/include/fibre/async_stream.hpp ****      * the associated completion handler. It must also not be called twice for
  89:fibre-cpp/include/fibre/async_stream.hpp ****      * the same transfer.
  90:fibre-cpp/include/fibre/async_stream.hpp ****      */
  91:fibre-cpp/include/fibre/async_stream.hpp ****     virtual void cancel_read(TransferHandle transfer_handle) = 0;
  92:fibre-cpp/include/fibre/async_stream.hpp **** };
  93:fibre-cpp/include/fibre/async_stream.hpp **** 
  94:fibre-cpp/include/fibre/async_stream.hpp **** /**
  95:fibre-cpp/include/fibre/async_stream.hpp ****  * @brief Base class for asynchronous stream sources.
  96:fibre-cpp/include/fibre/async_stream.hpp ****  *
  97:fibre-cpp/include/fibre/async_stream.hpp ****  * Thread-safety: Implementations are generally not required to provide thread
  98:fibre-cpp/include/fibre/async_stream.hpp ****  * safety. Users should only call the functions of this class on the same thread
  99:fibre-cpp/include/fibre/async_stream.hpp ****  * as the event loop on which the stream runs.
 100:fibre-cpp/include/fibre/async_stream.hpp ****  */
 101:fibre-cpp/include/fibre/async_stream.hpp **** class AsyncStreamSink {
 112              		.loc 2 101 7 view .LVU9
 113              	.LBB570:
 114 0010 4949     		ldr	r1, .L13
 115              	.LVL4:
 116              		.loc 2 101 7 is_stmt 0 view .LVU10
 117 0012 4A4F     		ldr	r7, .L13+4
 118 0014 0F60     		str	r7, [r1]
ARM GAS  /tmp/ccrmmslP.s 			page 9


 119              	.LVL5:
 120              		.loc 2 101 7 view .LVU11
 121              	.LBE570:
 122              	.LBE569:
  25:communication/interface_usb.cpp **** 
 123              		.loc 1 25 72 view .LVU12
 124 0016 4A4A     		ldr	r2, .L13+8
 125 0018 0A60     		str	r2, [r1]
 126 001a 8123     		movs	r3, #129
 127 001c 0B71     		strb	r3, [r1, #4]
 128 001e 0023     		movs	r3, #0
 129 0020 4B71     		strb	r3, [r1, #5]
 130              	.LVL6:
 131              	.LBB571:
 132              	.LBI571:
 133              		.file 3 "fibre-cpp/include/fibre/callback.hpp"
   1:fibre-cpp/include/fibre/callback.hpp **** #ifndef __CALLBACK_HPP
   2:fibre-cpp/include/fibre/callback.hpp **** #define __CALLBACK_HPP
   3:fibre-cpp/include/fibre/callback.hpp **** 
   4:fibre-cpp/include/fibre/callback.hpp **** #include <stdlib.h>
   5:fibre-cpp/include/fibre/callback.hpp **** #include <typeinfo>
   6:fibre-cpp/include/fibre/callback.hpp **** #include <tuple>
   7:fibre-cpp/include/fibre/callback.hpp **** #include <functional>
   8:fibre-cpp/include/fibre/callback.hpp **** #include <type_traits>
   9:fibre-cpp/include/fibre/callback.hpp **** 
  10:fibre-cpp/include/fibre/callback.hpp **** namespace fibre {
  11:fibre-cpp/include/fibre/callback.hpp **** 
  12:fibre-cpp/include/fibre/callback.hpp **** namespace detail {
  13:fibre-cpp/include/fibre/callback.hpp **** template<typename T> struct get_default { static T val() { return {}; } };
  14:fibre-cpp/include/fibre/callback.hpp **** template<> struct get_default<void> { static void val() {} };
  15:fibre-cpp/include/fibre/callback.hpp **** }
  16:fibre-cpp/include/fibre/callback.hpp **** 
  17:fibre-cpp/include/fibre/callback.hpp **** template<typename TRet, typename ... TArgs>
  18:fibre-cpp/include/fibre/callback.hpp **** class Callback {
  19:fibre-cpp/include/fibre/callback.hpp **** public:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback() : cb_(nullptr), ctx_(nullptr) {}
 134              		.loc 3 20 5 is_stmt 1 view .LVU13
 135              	.LBB572:
 136              	.LBB573:
 137              		.loc 3 20 44 is_stmt 0 view .LVU14
 138 0022 8B60     		str	r3, [r1, #8]
 139 0024 CB60     		str	r3, [r1, #12]
 140              	.LVL7:
 141              		.loc 3 20 44 view .LVU15
 142              	.LBE573:
 143              	.LBE572:
 144              	.LBE571:
  25:communication/interface_usb.cpp **** 
 145              		.loc 1 25 72 view .LVU16
 146 0026 0B61     		str	r3, [r1, #16]
 147              	.LVL8:
  25:communication/interface_usb.cpp **** 
 148              		.loc 1 25 72 view .LVU17
 149              	.LBE568:
 150              	.LBE567:
 151              	.LBE566:
 152              	.LBB574:
ARM GAS  /tmp/ccrmmslP.s 			page 10


 153              	.LBI574:
  25:communication/interface_usb.cpp **** 
 154              		.loc 1 25 5 is_stmt 1 view .LVU18
 155              	.LBB575:
 156              	.LBB576:
 157              	.LBB577:
 158              	.LBI577:
 159              		.loc 2 101 7 view .LVU19
 160              	.LBB578:
 161 0028 464C     		ldr	r4, .L13+12
 162 002a 2760     		str	r7, [r4]
 163              	.LVL9:
 164              		.loc 2 101 7 is_stmt 0 view .LVU20
 165              	.LBE578:
 166              	.LBE577:
  25:communication/interface_usb.cpp **** 
 167              		.loc 1 25 72 view .LVU21
 168 002c 2260     		str	r2, [r4]
 169 002e 8322     		movs	r2, #131
 170 0030 2271     		strb	r2, [r4, #4]
 171 0032 6371     		strb	r3, [r4, #5]
 172              	.LVL10:
 173              	.LBB579:
 174              	.LBI579:
 175              		.loc 3 20 5 is_stmt 1 view .LVU22
 176              	.LBB580:
 177              	.LBB581:
 178              		.loc 3 20 44 is_stmt 0 view .LVU23
 179 0034 A360     		str	r3, [r4, #8]
 180 0036 E360     		str	r3, [r4, #12]
 181              	.LVL11:
 182              		.loc 3 20 44 view .LVU24
 183              	.LBE581:
 184              	.LBE580:
 185              	.LBE579:
  25:communication/interface_usb.cpp **** 
 186              		.loc 1 25 72 view .LVU25
 187 0038 2361     		str	r3, [r4, #16]
 188              	.LVL12:
  25:communication/interface_usb.cpp **** 
 189              		.loc 1 25 72 view .LVU26
 190              	.LBE576:
 191              	.LBE575:
 192              	.LBE574:
 193              	.LBB582:
 194              	.LBI582:
  39:communication/interface_usb.cpp **** 
 195              		.loc 1 39 5 is_stmt 1 view .LVU27
 196              	.LBB583:
 197              	.LBB584:
 198              	.LBB585:
 199              	.LBI585:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 200              		.loc 2 52 7 view .LVU28
 201              	.LBB586:
 202 003a 434E     		ldr	r6, .L13+16
 203 003c DFF830C1 		ldr	ip, .L13+56
ARM GAS  /tmp/ccrmmslP.s 			page 11


 204 0040 C6F800C0 		str	ip, [r6]
 205              	.LVL13:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 206              		.loc 2 52 7 is_stmt 0 view .LVU29
 207              	.LBE586:
 208              	.LBE585:
  39:communication/interface_usb.cpp **** 
 209              		.loc 1 39 72 view .LVU30
 210 0044 414A     		ldr	r2, .L13+20
 211 0046 3260     		str	r2, [r6]
 212 0048 0125     		movs	r5, #1
 213 004a 3571     		strb	r5, [r6, #4]
 214 004c 7371     		strb	r3, [r6, #5]
 215              	.LVL14:
 216              	.LBB587:
 217              	.LBI587:
 218              		.loc 3 20 5 is_stmt 1 view .LVU31
 219              	.LBB588:
 220              	.LBB589:
 221              		.loc 3 20 44 is_stmt 0 view .LVU32
 222 004e B360     		str	r3, [r6, #8]
 223 0050 F360     		str	r3, [r6, #12]
 224              	.LVL15:
 225              		.loc 3 20 44 view .LVU33
 226              	.LBE589:
 227              	.LBE588:
 228              	.LBE587:
  39:communication/interface_usb.cpp **** 
 229              		.loc 1 39 72 view .LVU34
 230 0052 3361     		str	r3, [r6, #16]
 231              	.LVL16:
  39:communication/interface_usb.cpp **** 
 232              		.loc 1 39 72 view .LVU35
 233              	.LBE584:
 234              	.LBE583:
 235              	.LBE582:
 236              	.LBB590:
 237              	.LBI590:
  39:communication/interface_usb.cpp **** 
 238              		.loc 1 39 5 is_stmt 1 view .LVU36
 239              	.LBB591:
 240              	.LBB592:
 241              	.LBB593:
 242              	.LBI593:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 243              		.loc 2 52 7 view .LVU37
 244              	.LBB594:
 245 0054 3E4D     		ldr	r5, .L13+24
 246 0056 C5F800C0 		str	ip, [r5]
 247              	.LVL17:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 248              		.loc 2 52 7 is_stmt 0 view .LVU38
 249              	.LBE594:
 250              	.LBE593:
  39:communication/interface_usb.cpp **** 
 251              		.loc 1 39 72 view .LVU39
 252 005a 2A60     		str	r2, [r5]
ARM GAS  /tmp/ccrmmslP.s 			page 12


 253 005c 0322     		movs	r2, #3
 254 005e 2A71     		strb	r2, [r5, #4]
 255 0060 6B71     		strb	r3, [r5, #5]
 256              	.LVL18:
 257              	.LBB595:
 258              	.LBI595:
 259              		.loc 3 20 5 is_stmt 1 view .LVU40
 260              	.LBB596:
 261              	.LBB597:
 262              		.loc 3 20 44 is_stmt 0 view .LVU41
 263 0062 AB60     		str	r3, [r5, #8]
 264 0064 EB60     		str	r3, [r5, #12]
 265              	.LVL19:
 266              		.loc 3 20 44 view .LVU42
 267              	.LBE597:
 268              	.LBE596:
 269              	.LBE595:
  39:communication/interface_usb.cpp **** 
 270              		.loc 1 39 72 view .LVU43
 271 0066 2B61     		str	r3, [r5, #16]
 272              	.LVL20:
  39:communication/interface_usb.cpp **** 
 273              		.loc 1 39 72 view .LVU44
 274              	.LBE592:
 275              	.LBE591:
 276              	.LBE590:
 277              	.LBB598:
 278              	.LBI598:
 279              		.file 4 "fibre-cpp/include/fibre/../../legacy_protocol.hpp"
   1:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #ifndef __FIBRE_LEGACY_PROTOCOL_HPP
   2:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #define __FIBRE_LEGACY_PROTOCOL_HPP
   3:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
   4:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #include <fibre/async_stream.hpp>
   5:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
   6:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #ifdef FIBRE_ENABLE_CLIENT
   7:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #include "legacy_object_client.hpp"
   8:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #include <unordered_map>
   9:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #include <optional>
  10:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #include <queue>
  11:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #endif
  12:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  13:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** namespace fibre {
  14:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  15:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** // Default CRC-8 Polynomial: x^8 + x^5 + x^4 + x^2 + x + 1
  16:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** // Can protect a 4 byte payload against toggling of up to 5 bits
  17:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** //  source: https://users.ece.cmu.edu/~koopman/crc/index.html
  18:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint8_t CANONICAL_CRC8_POLYNOMIAL = 0x37;
  19:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint8_t CANONICAL_CRC8_INIT = 0x42;
  20:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  21:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** // Default CRC-16 Polynomial: 0x9eb2 x^16 + x^13 + x^12 + x^11 + x^10 + x^8 + x^6 + x^5 + x^2 + 1
  22:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** // Can protect a 135 byte payload against toggling of up to 5 bits
  23:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** //  source: https://users.ece.cmu.edu/~koopman/crc/index.html
  24:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** // Also known as CRC-16-DNP
  25:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint16_t CANONICAL_CRC16_POLYNOMIAL = 0x3d65;
  26:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint16_t CANONICAL_CRC16_INIT = 0x1337;
  27:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  28:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint8_t CANONICAL_PREFIX = 0xAA;
ARM GAS  /tmp/ccrmmslP.s 			page 13


  29:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  30:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** constexpr uint16_t PROTOCOL_VERSION = 1;
  31:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  32:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  33:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** class PacketWrapper : public AsyncStreamSink {
  34:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** public:
  35:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     PacketWrapper(AsyncStreamSink* tx_channel)
  36:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : tx_channel_(tx_channel) {}
  37:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  38:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start_write(cbufptr_t buffer, TransferHandle* handle, Callback<void, WriteResult> complete
  39:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void cancel_write(TransferHandle transfer_handle) final;
  40:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  41:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** private:
  42:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void complete(WriteResult result);
  43:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  44:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     AsyncStreamSink* tx_channel_;
  45:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     TransferHandle inner_transfer_handle_;
  46:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t header_buf_[3];
  47:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t trailer_buf_[2];
  48:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     const uint8_t* expected_tx_end_;
  49:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     cbufptr_t payload_buf_ = {nullptr, nullptr};
  50:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     Callback<void, WriteResult> completer_;
  51:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  52:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     enum {
  53:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateIdle,
  54:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateCancelling,
  55:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateSendingHeader,
  56:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateSendingPayload,
  57:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateSendingTrailer
  58:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     } state_ = kStateIdle;
  59:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** };
  60:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  61:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  62:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** class PacketUnwrapper : public AsyncStreamSource {
  63:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** public:
  64:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     PacketUnwrapper(AsyncStreamSource* rx_channel)
  65:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : rx_channel_(rx_channel) {}
  66:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  67:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start_read(bufptr_t buffer, TransferHandle* handle, Callback<void, ReadResult> completer) 
  68:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void cancel_read(TransferHandle transfer_handle) final;
  69:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  70:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** private:
  71:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void complete(ReadResult result);
  72:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  73:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     AsyncStreamSource* rx_channel_;
  74:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     TransferHandle inner_transfer_handle_;
  75:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t rx_buf_[3];
  76:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t* expected_rx_end_;
  77:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     size_t payload_length_ = 0;
  78:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     bufptr_t payload_buf_ = {nullptr, nullptr};
  79:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     Callback<void, ReadResult> completer_;
  80:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  81:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     enum {
  82:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateIdle,
  83:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateCancelling,
  84:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateReceivingHeader,
  85:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateReceivingPayload,
ARM GAS  /tmp/ccrmmslP.s 			page 14


  86:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         kStateReceivingTrailer
  87:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     } state_ = kStateIdle;
  88:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** };
  89:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  90:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  91:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** struct LegacyProtocolPacketBased {
  92:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** public:
  93:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     LegacyProtocolPacketBased(AsyncStreamSource* rx_channel, AsyncStreamSink* tx_channel, size_t tx
  94:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : rx_channel_(rx_channel), tx_channel_(tx_channel), tx_mtu_(std::min(tx_mtu, sizeof(tx_buf_
  95:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
  96:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     AsyncStreamSource* rx_channel_ = nullptr;
  97:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     AsyncStreamSink* tx_channel_ = nullptr;
  98:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     size_t tx_mtu_;
  99:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t tx_buf_[128];
 100:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t rx_buf_[128];
 101:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 102:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     TransferHandle tx_handle_ = 0; // non-zero while a TX operation is in progress
 103:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint8_t* rx_end_ = nullptr; // non-zero if an RX operation has finished but wasn't handled yet 
 104:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     StreamStatus rx_status_ = kStreamOk; // non-ok if the RX process was terminated permanently.
 105:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****                                          // This signals to the TX process that it should close
 106:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****                                          // the protocol instance at the next possible instant.
 107:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     
 108:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     Callback<void, LegacyProtocolPacketBased*, StreamStatus> on_stopped_ = nullptr;
 109:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 110:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #if FIBRE_ENABLE_CLIENT
 111:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start_endpoint_operation(uint16_t endpoint_id, cbufptr_t tx_buf, bufptr_t rx_buf, Endpoint
 112:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void cancel_endpoint_operation(EndpointOperationHandle handle);
 113:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 114:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     LegacyObjectClient client_{this};
 115:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #endif
 116:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 117:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #if FIBRE_ENABLE_CLIENT
 118:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start(Callback<void, LegacyObjectClient*, std::shared_ptr<LegacyObject>> on_found_root_obj
 119:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #else
 120:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start(Callback<void, LegacyProtocolPacketBased*, StreamStatus> on_stopped);
 121:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #endif
 122:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 123:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** private:
 124:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 125:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #if FIBRE_ENABLE_CLIENT
 126:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     struct EndpointOperation {
 127:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         uint16_t seqno;
 128:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         uint16_t endpoint_id;
 129:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         cbufptr_t tx_buf;
 130:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         bool tx_done;
 131:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         bufptr_t rx_buf;
 132:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         bool rx_done;
 133:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         Callback<void, EndpointOperationResult> callback;
 134:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     };
 135:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 136:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start_endpoint_operation(EndpointOperation op);
 137:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 138:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     uint16_t outbound_seq_no_ = 0;
 139:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     std::vector<EndpointOperation> pending_operations_; // operations that are waiting for TX
 140:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     EndpointOperationHandle transmitting_op_ = 0; // operation that is in TX
 141:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     std::unordered_map<uint16_t, EndpointOperation> expected_acks_; // operations that are waiting 
 142:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #endif
ARM GAS  /tmp/ccrmmslP.s 			page 15


 143:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 144:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void on_write_finished(WriteResult result);
 145:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void on_read_finished(ReadResult result);
 146:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void on_rx_closed(StreamStatus status);
 147:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void on_rx_tx_closed(StreamStatus status);
 148:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** };
 149:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 150:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 151:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** struct LegacyProtocolStreamBased {
 152:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** public:
 153:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     LegacyProtocolStreamBased(AsyncStreamSource* rx_channel, AsyncStreamSink* tx_channel)
 280              		.loc 4 153 5 is_stmt 1 view .LVU45
 281              	.LBB599:
 282              	.LBB600:
 283              	.LBI600:
  64:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : rx_channel_(rx_channel) {}
 284              		.loc 4 64 5 view .LVU46
 285              	.LBB601:
 286              	.LBB602:
 287              	.LBB603:
 288              	.LBI603:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 289              		.loc 2 52 7 view .LVU47
 290              	.LBB604:
 291 0068 3A4A     		ldr	r2, .L13+28
 292 006a C2F800C0 		str	ip, [r2]
 293              	.LVL21:
  52:fibre-cpp/include/fibre/async_stream.hpp **** public:
 294              		.loc 2 52 7 is_stmt 0 view .LVU48
 295              	.LBE604:
 296              	.LBE603:
  65:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 297              		.loc 4 65 33 view .LVU49
 298 006e DFF804C1 		ldr	ip, .L13+60
 299 0072 C2F800C0 		str	ip, [r2]
 300 0076 5660     		str	r6, [r2, #4]
 301 0078 5361     		str	r3, [r2, #20]
 302              	.LVL22:
 303              	.LBB605:
 304              	.LBI605:
 305              		.file 5 "fibre-cpp/include/fibre/bufptr.hpp"
   1:fibre-cpp/include/fibre/bufptr.hpp **** #ifndef __FIBRE_BUFPTR_HPP
   2:fibre-cpp/include/fibre/bufptr.hpp **** #define __FIBRE_BUFPTR_HPP
   3:fibre-cpp/include/fibre/bufptr.hpp **** 
   4:fibre-cpp/include/fibre/bufptr.hpp **** #include <stdlib.h>
   5:fibre-cpp/include/fibre/bufptr.hpp **** #include <vector>
   6:fibre-cpp/include/fibre/bufptr.hpp **** 
   7:fibre-cpp/include/fibre/bufptr.hpp **** namespace fibre {
   8:fibre-cpp/include/fibre/bufptr.hpp **** 
   9:fibre-cpp/include/fibre/bufptr.hpp **** static inline bool soft_assert(bool expr) { return expr; } // TODO: implement
  10:fibre-cpp/include/fibre/bufptr.hpp **** 
  11:fibre-cpp/include/fibre/bufptr.hpp **** /**
  12:fibre-cpp/include/fibre/bufptr.hpp ****  * @brief Holds a reference to a buffer and a length.
  13:fibre-cpp/include/fibre/bufptr.hpp ****  * Since this class implements begin() and end(), you can use it with many
  14:fibre-cpp/include/fibre/bufptr.hpp ****  * standard algorithms that operate on iterable objects.
  15:fibre-cpp/include/fibre/bufptr.hpp ****  */
  16:fibre-cpp/include/fibre/bufptr.hpp **** template<typename T>
ARM GAS  /tmp/ccrmmslP.s 			page 16


  17:fibre-cpp/include/fibre/bufptr.hpp **** struct generic_bufptr_t {
  18:fibre-cpp/include/fibre/bufptr.hpp ****     using iterator = T*;
  19:fibre-cpp/include/fibre/bufptr.hpp ****     using const_iterator = const T*;
  20:fibre-cpp/include/fibre/bufptr.hpp **** 
  21:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(T* begin, size_t length) : begin_(begin), end_(begin + length) {}
  22:fibre-cpp/include/fibre/bufptr.hpp **** 
  23:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(T* begin, T* end) : begin_(begin), end_(end) {}
 306              		.loc 5 23 5 is_stmt 1 view .LVU50
 307              	.LBB606:
 308              	.LBB607:
 309              		.loc 5 23 65 is_stmt 0 view .LVU51
 310 007a 9361     		str	r3, [r2, #24]
 311 007c D361     		str	r3, [r2, #28]
 312              	.LVL23:
 313              		.loc 5 23 65 view .LVU52
 314              	.LBE607:
 315              	.LBE606:
 316              	.LBE605:
 317              	.LBB608:
 318              	.LBI608:
 319              		.loc 3 20 5 is_stmt 1 view .LVU53
 320              	.LBB609:
 321              	.LBB610:
 322              		.loc 3 20 44 is_stmt 0 view .LVU54
 323 007e 1362     		str	r3, [r2, #32]
 324 0080 5362     		str	r3, [r2, #36]
 325              	.LVL24:
 326              		.loc 3 20 44 view .LVU55
 327              	.LBE610:
 328              	.LBE609:
 329              	.LBE608:
  65:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 330              		.loc 4 65 33 view .LVU56
 331 0082 82F82830 		strb	r3, [r2, #40]
 332              	.LVL25:
  65:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 333              		.loc 4 65 33 view .LVU57
 334              	.LBE602:
 335              	.LBE601:
 336              	.LBE600:
 337              	.LBB611:
 338              	.LBI611:
  35:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : tx_channel_(tx_channel) {}
 339              		.loc 4 35 5 is_stmt 1 view .LVU58
 340              	.LBB612:
 341              	.LBB613:
 342              	.LBB614:
 343              	.LBI614:
 344              		.loc 2 101 7 view .LVU59
 345              	.LBB615:
 346 0086 D762     		str	r7, [r2, #44]
 347              	.LVL26:
 348              		.loc 2 101 7 is_stmt 0 view .LVU60
 349              	.LBE615:
 350              	.LBE614:
  36:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 351              		.loc 4 36 33 view .LVU61
ARM GAS  /tmp/ccrmmslP.s 			page 17


 352 0088 334E     		ldr	r6, .L13+32
 353 008a D662     		str	r6, [r2, #44]
 354 008c 1163     		str	r1, [r2, #48]
 355              	.LVL27:
 356              	.LBB616:
 357              	.LBI616:
 358              		.loc 5 23 5 is_stmt 1 view .LVU62
 359              	.LBB617:
 360              	.LBB618:
 361              		.loc 5 23 65 is_stmt 0 view .LVU63
 362 008e 5364     		str	r3, [r2, #68]
 363 0090 9364     		str	r3, [r2, #72]
 364              	.LVL28:
 365              		.loc 5 23 65 view .LVU64
 366              	.LBE618:
 367              	.LBE617:
 368              	.LBE616:
 369              	.LBB619:
 370              	.LBI619:
 371              		.loc 3 20 5 is_stmt 1 view .LVU65
 372              	.LBB620:
 373              	.LBB621:
 374              		.loc 3 20 44 is_stmt 0 view .LVU66
 375 0092 D364     		str	r3, [r2, #76]
 376 0094 1365     		str	r3, [r2, #80]
 377              	.LVL29:
 378              		.loc 3 20 44 view .LVU67
 379              	.LBE621:
 380              	.LBE620:
 381              	.LBE619:
  36:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 382              		.loc 4 36 33 view .LVU68
 383 0096 82F85430 		strb	r3, [r2, #84]
 384              	.LVL30:
  36:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 385              		.loc 4 36 33 view .LVU69
 386              	.LBE613:
 387              	.LBE612:
 388              	.LBE611:
 389              	.LBB622:
 390              	.LBI622:
  93:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : rx_channel_(rx_channel), tx_channel_(tx_channel), tx_mtu_(std::min(tx_mtu, sizeof(tx_buf_
 391              		.loc 4 93 5 is_stmt 1 view .LVU70
 392              	.LBB623:
 393              	.LBB624:
  94:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 394              		.loc 4 94 102 is_stmt 0 view .LVU71
 395 009a 9265     		str	r2, [r2, #88]
 396 009c 02F12C06 		add	r6, r2, #44
 397 00a0 D665     		str	r6, [r2, #92]
 398              	.LVL31:
 399              	.LBB625:
 400              	.LBI625:
 401              		.file 6 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
   1:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  /tmp/ccrmmslP.s 			page 18


   4:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
ARM GAS  /tmp/ccrmmslP.s 			page 19


  61:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
ARM GAS  /tmp/ccrmmslP.s 			page 20


 118:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
ARM GAS  /tmp/ccrmmslP.s 			page 21


 175:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 402              		.loc 6 230 5 is_stmt 1 view .LVU72
ARM GAS  /tmp/ccrmmslP.s 			page 22


 403              		.loc 6 230 5 is_stmt 0 view .LVU73
 404              	.LBE625:
  94:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 405              		.loc 4 94 102 view .LVU74
 406 00a2 7F26     		movs	r6, #127
 407 00a4 1666     		str	r6, [r2, #96]
 408 00a6 C2F86431 		str	r3, [r2, #356]
 409 00aa C2F86831 		str	r3, [r2, #360]
 410 00ae 82F86C31 		strb	r3, [r2, #364]
 411              	.LVL32:
 412              	.LBB626:
 413              	.LBI626:
  21:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 414              		.loc 3 21 5 is_stmt 1 view .LVU75
 415              	.LBB627:
 416              	.LBB628:
 417              		.loc 3 21 58 is_stmt 0 view .LVU76
 418 00b2 C2F87031 		str	r3, [r2, #368]
 419 00b6 C2F87431 		str	r3, [r2, #372]
 420              	.LVL33:
 421              		.loc 3 21 58 view .LVU77
 422              	.LBE628:
 423              	.LBE627:
 424              	.LBE626:
 425              	.LBE624:
 426              	.LBE623:
 427              	.LBE622:
 428              	.LBE599:
 429              	.LBE598:
 430              	.LBB629:
 431              	.LBI629:
  93:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : rx_channel_(rx_channel), tx_channel_(tx_channel), tx_mtu_(std::min(tx_mtu, sizeof(tx_buf_
 432              		.loc 4 93 5 is_stmt 1 view .LVU78
 433              	.LBB630:
 434              	.LBB631:
  94:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 435              		.loc 4 94 102 is_stmt 0 view .LVU79
 436 00ba 284A     		ldr	r2, .L13+36
 437 00bc 1560     		str	r5, [r2]
 438 00be 5460     		str	r4, [r2, #4]
 439              	.LVL34:
 440              	.LBB632:
 441              	.LBI632:
 442              		.loc 6 230 5 is_stmt 1 view .LVU80
 443              		.loc 6 230 5 is_stmt 0 view .LVU81
 444              	.LBE632:
  94:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 445              		.loc 4 94 102 view .LVU82
 446 00c0 3F24     		movs	r4, #63
 447 00c2 9460     		str	r4, [r2, #8]
 448 00c4 C2F80C31 		str	r3, [r2, #268]
 449 00c8 C2F81031 		str	r3, [r2, #272]
 450 00cc 82F81431 		strb	r3, [r2, #276]
 451              	.LVL35:
 452              	.LBB633:
 453              	.LBI633:
 454              		.loc 3 21 5 is_stmt 1 view .LVU83
ARM GAS  /tmp/ccrmmslP.s 			page 23


 455              	.LBB634:
 456              	.LBB635:
 457              		.loc 3 21 58 is_stmt 0 view .LVU84
 458 00d0 C2F81831 		str	r3, [r2, #280]
 459 00d4 C2F81C31 		str	r3, [r2, #284]
 460              	.LVL36:
 461              		.loc 3 21 58 view .LVU85
 462              	.LBE635:
 463              	.LBE634:
 464              	.LBE633:
 465              	.LBE631:
 466              	.LBE630:
 467              	.LBE629:
 468              	.LBB636:
 469              	.LBI636:
 470              		.file 7 "fibre-cpp/include/fibre/../../stream_utils.hpp"
   1:fibre-cpp/include/fibre/../../stream_utils.hpp **** #ifndef __FIBRE_STREAM_UTILS_HPP
   2:fibre-cpp/include/fibre/../../stream_utils.hpp **** #define __FIBRE_STREAM_UTILS_HPP
   3:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
   4:fibre-cpp/include/fibre/../../stream_utils.hpp **** #include <fibre/async_stream.hpp>
   5:fibre-cpp/include/fibre/../../stream_utils.hpp **** #include <string.h>
   6:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
   7:fibre-cpp/include/fibre/../../stream_utils.hpp **** namespace fibre {
   8:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
   9:fibre-cpp/include/fibre/../../stream_utils.hpp **** template<size_t I>
  10:fibre-cpp/include/fibre/../../stream_utils.hpp **** class BufferedStreamSink {
  11:fibre-cpp/include/fibre/../../stream_utils.hpp **** public:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp ****     BufferedStreamSink(AsyncStreamSink& sink) : sink_(sink) {}
  13:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  14:fibre-cpp/include/fibre/../../stream_utils.hpp ****     /**
  15:fibre-cpp/include/fibre/../../stream_utils.hpp ****      * @brief Enqueues as much of the specified buffer as possible.
  16:fibre-cpp/include/fibre/../../stream_utils.hpp ****      * 
  17:fibre-cpp/include/fibre/../../stream_utils.hpp ****      * Thread safety: only one write call is allowed at a time. The write call
  18:fibre-cpp/include/fibre/../../stream_utils.hpp ****      * can be on a different thread from the underlying stream's event loop.
  19:fibre-cpp/include/fibre/../../stream_utils.hpp ****      * (TODO: this is not true yet, see comment in function)
  20:fibre-cpp/include/fibre/../../stream_utils.hpp ****      */
  21:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void write(cbufptr_t buf) {
  22:fibre-cpp/include/fibre/../../stream_utils.hpp ****         size_t read_idx = read_idx_; // read_idx_ could change during this function
  23:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  24:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if ((read_idx + 1) % I == write_idx_) {
  25:fibre-cpp/include/fibre/../../stream_utils.hpp ****             return;
  26:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
  27:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  28:fibre-cpp/include/fibre/../../stream_utils.hpp ****         // We subtract 1 from the read index because we never want the write
  29:fibre-cpp/include/fibre/../../stream_utils.hpp ****         // pointer to catch up with the read pointer, cause then
  30:fibre-cpp/include/fibre/../../stream_utils.hpp ****         // `write_idx_ == read_idx_` could mean both "full" and "empty".
  31:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  32:fibre-cpp/include/fibre/../../stream_utils.hpp ****         read_idx = (read_idx + I - 1) % I; 
  33:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  34:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (write_idx_ > read_idx) {
  35:fibre-cpp/include/fibre/../../stream_utils.hpp ****             size_t n_copy = std::min(I - write_idx_, buf.size());
  36:fibre-cpp/include/fibre/../../stream_utils.hpp ****             memcpy(buffer_ + write_idx_, buf.begin(), n_copy);
  37:fibre-cpp/include/fibre/../../stream_utils.hpp ****             write_idx_ = (write_idx_ + n_copy) % I;
  38:fibre-cpp/include/fibre/../../stream_utils.hpp ****             buf = buf.skip(n_copy);
  39:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
  40:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  41:fibre-cpp/include/fibre/../../stream_utils.hpp ****         size_t n_copy = std::min(read_idx - write_idx_, buf.size());
ARM GAS  /tmp/ccrmmslP.s 			page 24


  42:fibre-cpp/include/fibre/../../stream_utils.hpp ****         memcpy(buffer_ + write_idx_, buf.begin(), n_copy);
  43:fibre-cpp/include/fibre/../../stream_utils.hpp ****         write_idx_ = (write_idx_ + n_copy) % I;
  44:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  45:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //if (!__atomic_exchange_n(&is_active_, true, __ATOMIC_SEQ_CST)) {
  46:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //    // TODO: calling the sink in here breaks the rule that async
  47:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //    // functions must only be called on the event loop thread.
  48:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //    // But to do that we need to implement a proper event loop where we
  49:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //    // can enqueue calls.
  50:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //    maybe_start_async_write();
  51:fibre-cpp/include/fibre/../../stream_utils.hpp ****         //}
  52:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
  53:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  54:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void maybe_start_async_write() {
  55:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (is_active_) {
  56:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ < write_idx_) {
  58:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + write_idx_}, &transfer_handle_, MEMBE
  60:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
  61:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + I}, &transfer_handle_, MEMBER_CB(this
  63:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
  64:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
  65:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
  66:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
  67:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  68:fibre-cpp/include/fibre/../../stream_utils.hpp **** private:
  69:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void on_write_complete(WriteResult result) {
  70:fibre-cpp/include/fibre/../../stream_utils.hpp ****         is_active_ = false;
  71:fibre-cpp/include/fibre/../../stream_utils.hpp ****         transfer_handle_ = 0;
  72:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  73:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (result.status == kStreamOk) {
  74:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (result.end < buffer_ || result.end > (buffer_ + I)) {
  75:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 for (;;)
  76:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     transfer_handle_ = 0;
  77:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
  78:fibre-cpp/include/fibre/../../stream_utils.hpp ****             read_idx_ = (result.end - buffer_) % I;
  79:fibre-cpp/include/fibre/../../stream_utils.hpp ****             maybe_start_async_write();
  80:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
  81:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
  82:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  83:fibre-cpp/include/fibre/../../stream_utils.hpp ****     uint8_t buffer_[I];
  84:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  85:fibre-cpp/include/fibre/../../stream_utils.hpp ****     // Both indices are in [0, I)
  86:fibre-cpp/include/fibre/../../stream_utils.hpp ****     // They are equal if the buffer is empty (no valid data).
  87:fibre-cpp/include/fibre/../../stream_utils.hpp ****     size_t write_idx_ = 0; // [0, I)
  88:fibre-cpp/include/fibre/../../stream_utils.hpp ****     size_t read_idx_ = 0; // [0, I)
  89:fibre-cpp/include/fibre/../../stream_utils.hpp ****     bool is_active_ = false;
  90:fibre-cpp/include/fibre/../../stream_utils.hpp ****     TransferHandle transfer_handle_ = 0;
  91:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  92:fibre-cpp/include/fibre/../../stream_utils.hpp ****     AsyncStreamSink& sink_;
  93:fibre-cpp/include/fibre/../../stream_utils.hpp **** };
  94:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
  95:fibre-cpp/include/fibre/../../stream_utils.hpp **** /**
  96:fibre-cpp/include/fibre/../../stream_utils.hpp ****  * @brief Buffers up to NSlots concurrent async write requests.
  97:fibre-cpp/include/fibre/../../stream_utils.hpp ****  * 
  98:fibre-cpp/include/fibre/../../stream_utils.hpp ****  * This can be used to wrap sinks that can only handle one concurrent write
ARM GAS  /tmp/ccrmmslP.s 			page 25


  99:fibre-cpp/include/fibre/../../stream_utils.hpp ****  * operation at a time but are written to by multiple independent sources.
 100:fibre-cpp/include/fibre/../../stream_utils.hpp ****  */
 101:fibre-cpp/include/fibre/../../stream_utils.hpp **** template<size_t NSlots>
 102:fibre-cpp/include/fibre/../../stream_utils.hpp **** class AsyncStreamSinkMultiplexer : public AsyncStreamSink {
 103:fibre-cpp/include/fibre/../../stream_utils.hpp **** public:
 104:fibre-cpp/include/fibre/../../stream_utils.hpp ****     AsyncStreamSinkMultiplexer(AsyncStreamSink& sink) : sink_(sink) {}
 471              		.loc 7 104 5 is_stmt 1 view .LVU86
 472              	.LBB637:
 473              	.LBB638:
 474              	.LBB639:
 475              	.LBI639:
 476              		.loc 2 101 7 view .LVU87
 477              	.LBB640:
 478 00d8 214B     		ldr	r3, .L13+40
 479 00da 1F60     		str	r7, [r3]
 480              	.LVL37:
 481              		.loc 2 101 7 is_stmt 0 view .LVU88
 482              	.LBE640:
 483              	.LBE639:
 484              		.loc 7 104 67 view .LVU89
 485 00dc 214A     		ldr	r2, .L13+44
 486 00de 1A60     		str	r2, [r3]
 487 00e0 5960     		str	r1, [r3, #4]
 488 00e2 0833     		adds	r3, r3, #8
 489 00e4 07E0     		b	.L6
 490              	.LVL38:
 491              	.L12:
 492              	.LBB641:
 493              	.LBI641:
 494              		.file 8 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple"
   1:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // <tuple> -*- C++ -*-
   2:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
   3:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** //
   5:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // any later version.
  10:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  11:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  16:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  20:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  25:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** /** @file include/tuple
  26:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****  *  This is a Standard C++ Library header.
  27:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****  */
ARM GAS  /tmp/ccrmmslP.s 			page 26


  28:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  29:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #define _GLIBCXX_TUPLE 1
  31:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  32:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #pragma GCC system_header
  33:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  34:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #if __cplusplus < 201103L
  35:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** # include <bits/c++0x_warning.h>
  36:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #else
  37:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  38:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #include <utility>
  39:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #include <array>
  40:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #include <bits/uses_allocator.h>
  41:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #include <bits/invoke.h>
  42:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #if __cplusplus > 201703L
  43:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** # include <compare>
  44:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** # define __cpp_lib_constexpr_tuple 201811L
  45:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #endif
  46:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  47:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  48:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** {
  49:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  51:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
  52:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    *  @addtogroup utilities
  53:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    *  @{
  54:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
  55:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  56:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename... _Elements>
  57:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     class tuple;
  58:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  59:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Tp>
  60:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
  61:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  62:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  63:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _El0, typename... _El>
  64:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
  65:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  66:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  67:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Tp>
  68:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     using __empty_not_final
  69:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     = typename conditional<__is_final(_Tp), false_type,
  70:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  71:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  72:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename _Head,
  73:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	   bool = __empty_not_final<_Head>::value>
  74:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Head_base;
  75:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  76:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
  77:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Head_base<_Idx, _Head, true>
  78:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     : public _Head
  79:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
  80:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base()
  81:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Head() { }
  82:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  83:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
  84:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Head(__h) { }
ARM GAS  /tmp/ccrmmslP.s 			page 27


  85:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  86:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  87:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  88:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  89:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
  90:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
  91:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  92:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  93:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  94:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Head() { }
  95:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
  96:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
  97:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  98:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  99:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 100:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 101:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 102:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(*__a._M_a) { }
 103:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 104:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 105:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 106:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 107:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 108:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 109:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 110:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 111:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 112:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 113:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 114:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 115:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 116:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr _Head&
 117:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 118:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 119:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr const _Head&
 120:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 121:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 122:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 123:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
 124:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Head_base<_Idx, _Head, false>
 125:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base()
 127:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl() { }
 128:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 129:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
 130:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl(__h) { }
 131:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 132:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 133:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 134:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 135:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 136:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
 137:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 138:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 139:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 140:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
 141:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl() { }
ARM GAS  /tmp/ccrmmslP.s 			page 28


 142:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 143:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 144:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 145:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 146:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 147:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 148:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 149:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(*__a._M_a) { }
 150:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 151:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 152:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 153:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 154:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 155:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 156:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 157:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 158:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 159:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 160:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 161:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 162:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 163:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 164:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 165:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr _Head&
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 167:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 168:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr const _Head&
 169:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 170:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 171:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Head _M_head_impl;
 172:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 173:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 174:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
 175:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * Contains the actual implementation of the @c tuple template, stored
 176:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * as a recursive inheritance hierarchy from the first element (most
 177:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * derived class) to the last (least derived class). The @c Idx
 178:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * parameter gives the 0-based index of the element stored at this
 179:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * point in the hierarchy; we use it to implement a constant-time
 180:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * get() operation.
 181:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
 182:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename... _Elements>
 183:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Tuple_impl;
 184:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 185:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
 186:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * Recursive tuple implementation. Here we store the @c Head element
 187:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * and derive from a @c Tuple_impl containing the remaining elements
 188:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * (which contains the @c Tail).
 189:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
 190:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename _Head, typename... _Tail>
 191:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Tuple_impl<_Idx, _Head, _Tail...>
 192:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     : public _Tuple_impl<_Idx + 1, _Tail...>,
 193:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       private _Head_base<_Idx, _Head>
 194:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 195:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 196:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 197:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
 198:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Head_base<_Idx, _Head> _Base;
ARM GAS  /tmp/ccrmmslP.s 			page 29


 199:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 200:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr _Head&
 201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 202:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 203:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr const _Head&
 204:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 205:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 206:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr _Inherited&
 207:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 208:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 209:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr const _Inherited&
 210:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_tail(const _Tuple_impl& __t) noexcept { return __t; }
 211:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 212:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl()
 213:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Inherited(), _Base() { }
 214:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 215:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       explicit
 216:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 217:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Inherited(__tail...), _Base(__head) { }
 218:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 219:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead, typename... _UTail, typename = typename
 220:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****                enable_if<sizeof...(_Tail) == sizeof...(_UTail)>::type>
 221:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         explicit
 222:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 223:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_UTail>(__tail)...),
 224:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(std::forward<_UHead>(__head)) { }
 225:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 226:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 227:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 228:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 229:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // 2729. Missing SFINAE on std::pair::operator=
 230:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 231:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 232:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr
 233:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 234:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__and_<is_nothrow_move_constructible<_Head>,
 235:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	              is_nothrow_move_constructible<_Inherited>>::value)
 236:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Inherited(std::move(_M_tail(__in))),
 237:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Base(std::forward<_Head>(_M_head(__in))) { }
 238:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 239:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 240:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
 241:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 242:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 243:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 244:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead, typename... _UTails>
 245:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 246:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::move
 247:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 248:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(std::forward<_UHead>
 249:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 250:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 251:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 252:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 253:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 254:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a),
 255:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****           _Base(__tag, __use_alloc<_Head>(__a)) { }
ARM GAS  /tmp/ccrmmslP.s 			page 30


 256:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 257:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 258:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 259:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		    const _Head& __head, const _Tail&... __tail)
 260:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __tail...),
 261:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 262:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 263:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTail,
 264:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****                typename = typename enable_if<sizeof...(_Tail)
 265:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 					     == sizeof...(_UTail)>::type>
 266:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 267:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 268:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _UHead&& __head, _UTail&&... __tail)
 269:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_UTail>(__tail)...),
 270:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****           _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 271:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	        std::forward<_UHead>(__head)) { }
 272:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 273:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 274:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 275:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 276:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            const _Tuple_impl& __in)
 277:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, _M_tail(__in)),
 278:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 279:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 280:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 281:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 282:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 283:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _Tuple_impl&& __in)
 284:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::move(_M_tail(__in))),
 285:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 286:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 287:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 288:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 289:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 290:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 291:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		    const _Tuple_impl<_Idx, _UHead, _UTails...>& __in)
 292:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
 293:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     _Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)),
 294:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 295:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)) { }
 296:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 297:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 298:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 299:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 300:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 301:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::move
 302:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 303:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 304:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****                 std::forward<_UHead>
 305:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 306:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 307:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 308:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 309:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         void
 310:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _M_assign(const _Tuple_impl<_Idx, _UElements...>& __in)
 311:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         {
 312:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
ARM GAS  /tmp/ccrmmslP.s 			page 31


 313:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_tail(*this)._M_assign(
 314:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      _Tuple_impl<_Idx, _UElements...>::_M_tail(__in));
 315:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 316:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 317:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead, typename... _UTails>
 318:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 319:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         void
 320:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 321:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         {
 322:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_head(*this) = std::forward<_UHead>
 323:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
 324:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_tail(*this)._M_assign(
 325:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      std::move(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)));
 326:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 327:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 328:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     protected:
 329:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 330:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       void
 331:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_swap(_Tuple_impl& __in)
 332:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 333:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using std::swap;
 334:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	swap(_M_head(*this), _M_head(__in));
 335:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Inherited::_M_swap(_M_tail(__in));
 336:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 337:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 338:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 339:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Basis case of inheritance recursion.
 340:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
 341:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _Tuple_impl<_Idx, _Head>
 342:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     : private _Head_base<_Idx, _Head>
 343:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 344:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 345:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 346:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Head_base<_Idx, _Head> _Base;
 347:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 348:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr _Head&
 349:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 350:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 351:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr const _Head&
 352:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 353:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 354:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl()
 355:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Base() { }
 356:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 357:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       explicit
 358:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl(const _Head& __head)
 359:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Base(__head) { }
 360:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 361:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 362:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         explicit
 363:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(_UHead&& __head)
 364:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(std::forward<_UHead>(__head)) { }
 365:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 366:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 367:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 368:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 369:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // 2729. Missing SFINAE on std::pair::operator=
ARM GAS  /tmp/ccrmmslP.s 			page 32


 370:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 371:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 372:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr
 373:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 374:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 375:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Base(std::forward<_Head>(_M_head(__in))) { }
 376:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 377:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 378:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
 379:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 380:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 381:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 382:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
 383:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 384:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 385:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 386:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 387:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 388:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 389:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__tag, __use_alloc<_Head>(__a)) { }
 390:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 391:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 392:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 393:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		    const _Head& __head)
 394:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 395:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 396:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 397:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 398:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 399:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _UHead&& __head)
 400:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 401:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	        std::forward<_UHead>(__head)) { }
 402:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 403:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 404:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 405:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 406:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            const _Tuple_impl& __in)
 407:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 408:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 409:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 410:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 411:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 412:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _Tuple_impl&& __in)
 413:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 414:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 415:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 416:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 417:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 418:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 419:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            const _Tuple_impl<_Idx, _UHead>& __in)
 420:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 421:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 422:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 423:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 424:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 425:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 426:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	            _Tuple_impl<_Idx, _UHead>&& __in)
ARM GAS  /tmp/ccrmmslP.s 			page 33


 427:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 428:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****                 std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 429:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 430:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 431:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 432:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 433:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         void
 434:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _M_assign(const _Tuple_impl<_Idx, _UHead>& __in)
 435:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         {
 436:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
 437:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 438:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 439:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _UHead>
 440:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 441:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         void
 442:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         _M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
 443:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****         {
 444:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _M_head(*this)
 445:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 446:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 447:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 448:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     protected:
 449:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 450:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       void
 451:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _M_swap(_Tuple_impl& __in)
 452:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 453:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using std::swap;
 454:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	swap(_M_head(*this), _M_head(__in));
 455:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 456:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 457:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 458:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Concept utility functions, reused in conditionally-explicit
 459:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // constructors.
 460:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<bool, typename... _Types>
 461:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _TupleConstraints
 462:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 463:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Tp, typename _Up> // Workaround for PR 96592
 464:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using is_constructible
 465:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  = __bool_constant<__is_constructible(_Tp, _Up)>;
 466:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 467:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for a non-explicit constructor.
 468:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 469:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // and every Ui is implicitly convertible to Ti.
 470:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UTypes>
 471:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __is_implicitly_constructible()
 472:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 473:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
 474:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			is_convertible<_UTypes, _Types>...
 475:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			>::value;
 476:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 477:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 478:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for a non-explicit constructor.
 479:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 480:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // but not every Ui is implicitly convertible to Ti.
 481:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UTypes>
 482:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __is_explicitly_constructible()
 483:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
ARM GAS  /tmp/ccrmmslP.s 			page 34


 484:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
 485:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			__not_<__and_<is_convertible<_UTypes, _Types>...>>
 486:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			>::value;
 487:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 488:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 489:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr bool __is_implicitly_default_constructible()
 490:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 491:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return __and_<std::__is_implicitly_default_constructible<_Types>...
 492:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		      >::value;
 493:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 494:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 495:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr bool __is_explicitly_default_constructible()
 496:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 497:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return __and_<is_default_constructible<_Types>...,
 498:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		      __not_<__and_<
 499:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			std::__is_implicitly_default_constructible<_Types>...>
 500:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		      >>::value;
 501:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 502:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 503:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 504:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Partial specialization used when a required precondition isn't met,
 505:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // e.g. when sizeof...(_Types) != sizeof...(_UTypes).
 506:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename... _Types>
 507:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct _TupleConstraints<false, _Types...>
 508:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 509:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UTypes>
 510:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __is_implicitly_constructible()
 511:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return false; }
 512:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 513:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UTypes>
 514:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __is_explicitly_constructible()
 515:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return false; }
 516:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 517:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 518:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /// Primary class template, tuple
 519:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename... _Elements>
 520:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     class tuple : public _Tuple_impl<0, _Elements...>
 521:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 522:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Tuple_impl<0, _Elements...> _Inherited;
 523:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 524:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Cond>
 525:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _TCC = _TupleConstraints<_Cond, _Elements...>;
 526:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 527:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit default constructor
 528:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy>
 529:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 530:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Dummy>::__is_implicitly_default_constructible(),
 531:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 532:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 533:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for explicit default constructor
 534:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy>
 535:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 536:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Dummy>::__is_explicitly_default_constructible(),
 537:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 538:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 539:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit constructors
 540:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Cond, typename... _Args>
ARM GAS  /tmp/ccrmmslP.s 			page 35


 541:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ImplicitCtor = __enable_if_t<
 542:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_Args...>(),
 543:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 544:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 545:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit constructors
 546:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Cond, typename... _Args>
 547:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ExplicitCtor = __enable_if_t<
 548:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_Args...>(),
 549:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 550:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 551:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 552:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr
 553:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<sizeof...(_UElements) == sizeof...(_Elements), bool>
 554:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__assignable()
 555:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return __and_<is_assignable<_Elements&, _UElements>...>::value; }
 556:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 557:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Condition for noexcept-specifier of an assignment operator.
 558:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 559:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __nothrow_assignable()
 560:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 561:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return
 562:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    __and_<is_nothrow_assignable<_Elements&, _UElements>...>::value;
 563:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 564:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 565:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Condition for noexcept-specifier of a constructor.
 566:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 567:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __nothrow_constructible()
 568:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 569:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return
 570:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    __and_<is_nothrow_constructible<_Elements, _UElements>...>::value;
 571:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 572:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 573:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) == 1.
 574:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Up>
 575:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __valid_args()
 576:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 577:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return sizeof...(_Elements) == 1
 578:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    && !is_same<tuple, __remove_cvref_t<_Up>>::value;
 579:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 580:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 581:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) > 1.
 582:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename, typename, typename... _Tail>
 583:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __valid_args()
 584:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return (sizeof...(_Tail) + 2) == sizeof...(_Elements); }
 585:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 586:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       /* Constraint for constructors with a tuple<UTypes...> parameter ensures
 587:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * that the constructor is only viable when it would not interfere with
 588:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * tuple(UTypes&&...) or tuple(const tuple&) or tuple(tuple&&).
 589:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * Such constructors are only viable if:
 590:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * either sizeof...(Types) != 1,
 591:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * or (when Types... expands to T and UTypes... expands to U)
 592:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * is_convertible_v<TUPLE, T>, is_constructible_v<T, TUPLE>,
 593:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        * and is_same_v<T, U> are all false.
 594:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****        */
 595:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Tuple, typename = tuple,
 596:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       typename = __remove_cvref_t<_Tuple>>
 597:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	struct _UseOtherCtor
ARM GAS  /tmp/ccrmmslP.s 			page 36


 598:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: false_type
 599:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ };
 600:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // If TUPLE is convertible to the single element in *this,
 601:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // then TUPLE should match tuple(UTypes&&...) instead.
 602:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Tuple, typename _Tp, typename _Up>
 603:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Up>>
 604:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: __or_<is_convertible<_Tuple, _Tp>, is_constructible<_Tp, _Tuple>>
 605:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ };
 606:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // If TUPLE and *this each have a single element of the same type,
 607:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // then TUPLE should match a copy/move constructor instead.
 608:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Tuple, typename _Tp>
 609:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Tp>>
 610:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: true_type
 611:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ };
 612:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 613:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Return true iff sizeof...(Types) == 1 && tuple_size_v<TUPLE> == 1
 614:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // and the single element in Types can be initialized from TUPLE,
 615:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // or is the same type as tuple_element_t<0, TUPLE>.
 616:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Tuple>
 617:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __use_other_ctor()
 618:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return _UseOtherCtor<_Tuple>::value; }
 619:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 620:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     public:
 621:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Dummy = void,
 622:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitDefaultCtor<is_void<_Dummy>::value> = true>
 623:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 624:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple()
 495              		.loc 8 624 2 is_stmt 1 view .LVU90
 496              	.LBB642:
 497              	.LBI642:
 212:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Inherited(), _Base() { }
 498              		.loc 8 212 17 view .LVU91
 499              	.LBB643:
 500              	.LBI643:
 212:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Inherited(), _Base() { }
 501              		.loc 8 212 17 view .LVU92
 502              	.LBB644:
 503              	.LBI644:
 354:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _Base() { }
 504              		.loc 8 354 17 view .LVU93
 505              	.LBB645:
 506              	.LBI645:
 126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl() { }
 507              		.loc 8 126 17 view .LVU94
 508              	.LBB646:
 509              	.LBI646:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 510              		.loc 3 20 5 view .LVU95
 511              	.LBB647:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 512              		.loc 3 20 44 is_stmt 0 view .LVU96
 513 00e6 0022     		movs	r2, #0
 514 00e8 1A60     		str	r2, [r3]
 515 00ea 5A60     		str	r2, [r3, #4]
 516              	.LVL39:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 517              		.loc 3 20 44 view .LVU97
ARM GAS  /tmp/ccrmmslP.s 			page 37


 518              	.LBE647:
 519              	.LBE646:
 520              	.LBE645:
 521              	.LBE644:
 522              	.LBB648:
 523              	.LBI648:
 126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl() { }
 524              		.loc 8 126 17 is_stmt 1 view .LVU98
 525              	.LBB649:
 526              	.LBI649:
  24:fibre-cpp/include/fibre/bufptr.hpp **** 
  25:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t() : begin_(nullptr), end_(nullptr) {}
 527              		.loc 5 25 5 view .LVU99
 528              	.LBB650:
 529              		.loc 5 25 55 is_stmt 0 view .LVU100
 530 00ec 9A60     		str	r2, [r3, #8]
 531 00ee DA60     		str	r2, [r3, #12]
 532              	.LVL40:
 533              		.loc 5 25 55 view .LVU101
 534              	.LBE650:
 535              	.LBE649:
 536              	.LBE648:
 537              	.LBE643:
 538              	.LBB651:
 539              	.LBI651:
 126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       : _M_head_impl() { }
 540              		.loc 8 126 17 is_stmt 1 view .LVU102
 541              	.LBB652:
 127:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 542              		.loc 8 127 22 is_stmt 0 view .LVU103
 543 00f0 1A74     		strb	r2, [r3, #16]
 544              	.LVL41:
 127:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 545              		.loc 8 127 22 view .LVU104
 546              	.LBE652:
 547              	.LBE651:
 548              	.LBE642:
 549              	.LBE641:
 550              		.loc 7 104 67 view .LVU105
 551 00f2 1433     		adds	r3, r3, #20
 552              		.loc 7 104 67 is_stmt 1 view .LVU106
 553 00f4 0138     		subs	r0, r0, #1
 554              	.L6:
 555              		.loc 7 104 67 view .LVU107
 556 00f6 0028     		cmp	r0, #0
 557 00f8 F5DA     		bge	.L12
 558 00fa 1949     		ldr	r1, .L13+40
 559 00fc 0023     		movs	r3, #0
 560 00fe 0B63     		str	r3, [r1, #48]
 561 0100 4B63     		str	r3, [r1, #52]
 562              	.LVL42:
 563              		.loc 7 104 67 is_stmt 0 view .LVU108
 564              	.LBE638:
 565              	.LBE637:
 566              	.LBE636:
 567              	.LBB653:
 568              	.LBI653:
ARM GAS  /tmp/ccrmmslP.s 			page 38


  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 569              		.loc 7 12 5 is_stmt 1 view .LVU109
 570              	.LBB654:
 571              	.LBB655:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 572              		.loc 7 12 59 is_stmt 0 view .LVU110
 573 0102 194A     		ldr	r2, .L13+48
 574 0104 1364     		str	r3, [r2, #64]
 575 0106 5364     		str	r3, [r2, #68]
 576 0108 82F84830 		strb	r3, [r2, #72]
 577 010c D364     		str	r3, [r2, #76]
 578 010e 1165     		str	r1, [r2, #80]
 579              	.LVL43:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 580              		.loc 7 12 59 view .LVU111
 581              	.LBE655:
 582              	.LBE654:
 583              	.LBE653:
 584              	.LBB656:
 585              	.LBI656:
 586              		.file 9 "communication/ascii_protocol.hpp"
   1:communication/ascii_protocol.hpp **** #ifndef __ASCII_PROTOCOL_HPP
   2:communication/ascii_protocol.hpp **** #define __ASCII_PROTOCOL_HPP
   3:communication/ascii_protocol.hpp **** 
   4:communication/ascii_protocol.hpp **** #include <fibre/async_stream.hpp>
   5:communication/ascii_protocol.hpp **** #include <fibre/../../stream_utils.hpp>
   6:communication/ascii_protocol.hpp **** 
   7:communication/ascii_protocol.hpp **** #define MAX_LINE_LENGTH ((size_t)256)
   8:communication/ascii_protocol.hpp **** 
   9:communication/ascii_protocol.hpp **** class AsciiProtocol {
  10:communication/ascii_protocol.hpp **** public:
  11:communication/ascii_protocol.hpp ****     AsciiProtocol(fibre::AsyncStreamSource* rx_channel, fibre::AsyncStreamSink* tx_channel)
 587              		.loc 9 11 5 is_stmt 1 view .LVU112
 588              	.LBB657:
 589              	.LBB658:
  12:communication/ascii_protocol.hpp ****         : rx_channel_(rx_channel), sink_(*tx_channel) {}
 590              		.loc 9 12 53 is_stmt 0 view .LVU113
 591 0110 164A     		ldr	r2, .L13+52
 592 0112 0D48     		ldr	r0, .L13+16
 593 0114 1060     		str	r0, [r2]
 594 0116 5360     		str	r3, [r2, #4]
 595 0118 0120     		movs	r0, #1
 596 011a 82F80801 		strb	r0, [r2, #264]
 597              	.LVL44:
 598              	.LBB659:
 599              	.LBI659:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 600              		.loc 7 12 5 is_stmt 1 view .LVU114
 601              	.LBB660:
 602              	.LBB661:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 603              		.loc 7 12 59 is_stmt 0 view .LVU115
 604 011e C2F80C33 		str	r3, [r2, #780]
 605 0122 C2F81033 		str	r3, [r2, #784]
 606 0126 82F81433 		strb	r3, [r2, #788]
 607 012a C2F81833 		str	r3, [r2, #792]
 608 012e C2F81C13 		str	r1, [r2, #796]
ARM GAS  /tmp/ccrmmslP.s 			page 39


 609              	.LVL45:
  12:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 610              		.loc 7 12 59 view .LVU116
 611              	.LBE661:
 612              	.LBE660:
 613              	.LBE659:
 614              	.LBE658:
 615              	.LBE657:
 616              	.LBE656:
 617              		.loc 1 237 1 view .LVU117
 618 0132 F0BC     		pop	{r4, r5, r6, r7}
 619              	.LCFI1:
 620              		.cfi_restore 7
 621              		.cfi_restore 6
 622              		.cfi_restore 5
 623              		.cfi_restore 4
 624              		.cfi_def_cfa_offset 0
 625 0134 7047     		bx	lr
 626              	.L14:
 627 0136 00BF     		.align	2
 628              	.L13:
 629 0138 00000000 		.word	.LANCHOR1
 630 013c 08000000 		.word	_ZTVN5fibre15AsyncStreamSinkE+8
 631 0140 08000000 		.word	.LANCHOR2+8
 632 0144 00000000 		.word	.LANCHOR3
 633 0148 00000000 		.word	.LANCHOR4
 634 014c 08000000 		.word	.LANCHOR5+8
 635 0150 00000000 		.word	.LANCHOR6
 636 0154 00000000 		.word	.LANCHOR7
 637 0158 08000000 		.word	_ZTVN5fibre13PacketWrapperE+8
 638 015c 00000000 		.word	.LANCHOR8
 639 0160 00000000 		.word	.LANCHOR0
 640 0164 08000000 		.word	_ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE+8
 641 0168 00000000 		.word	.LANCHOR9
 642 016c 00000000 		.word	.LANCHOR10
 643 0170 08000000 		.word	_ZTVN5fibre17AsyncStreamSourceE+8
 644 0174 08000000 		.word	_ZTVN5fibre15PacketUnwrapperE+8
 645              		.cfi_endproc
 646              	.LFE6277:
 647              		.cantunwind
 648              		.fnend
 650              		.section	.text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj,"axG",%progbits,_ZN5fib
 651              		.align	1
 652              		.weak	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 657              	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj:
 658              		.fnstart
 659              	.LVL46:
 660              	.LFB6279:
 105:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 106:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void start_write(cbufptr_t buffer, TransferHandle* handle, Callback<void, WriteResult> complete
 107:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 108:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 109:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (!__atomic_exchange_n(&slot_in_use, true, __ATOMIC_SEQ_CST)) {
 110:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_buf = buffer;
ARM GAS  /tmp/ccrmmslP.s 			page 40


 111:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_completer = completer;
 112:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 113:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 if (handle) {
 114:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     *handle = i + 1; // returning a valid handle of 0 is not a good idea
 115:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 116:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 117:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 // If the underlying sink wasn't busy, start it now.
 118:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 if (active_slot_ == 0) {
 119:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     active_slot_ = i + 1;
 120:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     sink_.start_write(slot_buf, &transfer_handle_, MEMBER_CB(this, on_write_complet
 121:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 122:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 123:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 return;
 124:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
 125:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
 126:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 127:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (handle) {
 128:fibre-cpp/include/fibre/../../stream_utils.hpp ****             *handle = 0;
 129:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
 130:fibre-cpp/include/fibre/../../stream_utils.hpp ****         completer.invoke({kStreamError, buffer.begin()});
 131:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
 132:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 133:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void cancel_write(TransferHandle transfer_handle) final {
 661              		.loc 7 133 10 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 24
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		.loc 7 133 10 is_stmt 0 view .LVU119
 666 0000 30B5     		push	{r4, r5, lr}
 667              		.save {r4, r5, lr}
 668              	.LCFI2:
 669              		.cfi_def_cfa_offset 12
 670              		.cfi_offset 4, -12
 671              		.cfi_offset 5, -8
 672              		.cfi_offset 14, -4
 673              		.pad #28
 674 0002 87B0     		sub	sp, sp, #28
 675              	.LCFI3:
 676              		.cfi_def_cfa_offset 40
 677 0004 0346     		mov	r3, r0
 678              	.LBB662:
 134:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (transfer_handle == active_slot_) {
 679              		.loc 7 134 32 view .LVU120
 680 0006 026B     		ldr	r2, [r0, #48]
 681              		.loc 7 134 9 view .LVU121
 682 0008 8A42     		cmp	r2, r1
 683 000a 1FD0     		beq	.L20
 684              	.LBB663:
 135:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // This transfer is the one that the underlying sink is busy with.
 136:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.cancel_write(transfer_handle_);
 137:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 138:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // This transfer is only enqueued but not yet started.
 139:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[transfer_handle - 1];
 685              		.loc 7 139 84 view .LVU122
 686 000c 0139     		subs	r1, r1, #1
 687              	.LVL47:
 688              		.loc 7 139 19 view .LVU123
ARM GAS  /tmp/ccrmmslP.s 			page 41


 689 000e 01EB8101 		add	r1, r1, r1, lsl #2
 690              	.LVL48:
 691              		.loc 7 139 19 view .LVU124
 692 0012 8900     		lsls	r1, r1, #2
 693 0014 0831     		adds	r1, r1, #8
 694 0016 4218     		adds	r2, r0, r1
 695              	.LVL49:
 696              	.LBB664:
 697              	.LBI664:
  22:fibre-cpp/include/fibre/callback.hpp ****     Callback(TRet(*callback)(void*, TArgs...), void* ctx) :
  23:fibre-cpp/include/fibre/callback.hpp ****         cb_(callback), ctx_(ctx) {}
  24:fibre-cpp/include/fibre/callback.hpp **** 
  25:fibre-cpp/include/fibre/callback.hpp ****     /**
  26:fibre-cpp/include/fibre/callback.hpp ****      * @brief Creates a copy of another Callback instance.
  27:fibre-cpp/include/fibre/callback.hpp ****      * 
  28:fibre-cpp/include/fibre/callback.hpp ****      * This is only works it the other callback has identical template parameters.
  29:fibre-cpp/include/fibre/callback.hpp ****      * This constructor is templated so that construction from an incompatible
  30:fibre-cpp/include/fibre/callback.hpp ****      * callback gives a useful error message.
  31:fibre-cpp/include/fibre/callback.hpp ****      */
  32:fibre-cpp/include/fibre/callback.hpp ****     //template<typename TRetOther, typename ... TArgsOther>
  33:fibre-cpp/include/fibre/callback.hpp ****     //Callback(const Callback<TRetOther, TArgsOther...>& other) : cb_(other.cb_), ctx_(other.ctx_) 
  34:fibre-cpp/include/fibre/callback.hpp ****     //    static_assert(std::is_same<Callback<TRetOther, TArgsOther...>, Callback>::value, "incompa
  35:fibre-cpp/include/fibre/callback.hpp ****     //}
  36:fibre-cpp/include/fibre/callback.hpp **** 
  37:fibre-cpp/include/fibre/callback.hpp ****     Callback(const Callback& other) : cb_(other.cb_), ctx_(other.ctx_) {}
 698              		.loc 3 37 5 is_stmt 1 view .LVU125
 699              	.LBB665:
 700              	.LBB666:
 701              		.loc 3 37 49 is_stmt 0 view .LVU126
 702 0018 4458     		ldr	r4, [r0, r1]
 703              		.loc 3 37 70 view .LVU127
 704 001a 0094     		str	r4, [sp]
 705              		.loc 3 37 66 view .LVU128
 706 001c 5568     		ldr	r5, [r2, #4]
 707              		.loc 3 37 70 view .LVU129
 708 001e 0195     		str	r5, [sp, #4]
 709              	.LVL50:
 710              		.loc 3 37 70 view .LVU130
 711              	.LBE666:
 712              	.LBE665:
 713              	.LBE664:
 140:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto completer = slot_completer;
 141:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto end = slot_buf.end();
 714              		.loc 7 141 18 view .LVU131
 715 0020 D168     		ldr	r1, [r2, #12]
 716              	.LVL51:
 142:fibre-cpp/include/fibre/../../stream_utils.hpp ****             slot_in_use = false;
 717              		.loc 7 142 25 view .LVU132
 718 0022 0023     		movs	r3, #0
 719 0024 1374     		strb	r3, [r2, #16]
 143:fibre-cpp/include/fibre/../../stream_utils.hpp ****             completer.invoke_and_clear({kStreamCancelled, end});
 720              		.loc 7 143 39 view .LVU133
 721 0026 0122     		movs	r2, #1
 722              	.LVL52:
 723              		.loc 7 143 39 view .LVU134
 724 0028 8DF81020 		strb	r2, [sp, #16]
 725 002c 0591     		str	r1, [sp, #20]
ARM GAS  /tmp/ccrmmslP.s 			page 42


 726              	.LVL53:
 727              		.loc 7 143 39 view .LVU135
 728 002e 02AA     		add	r2, sp, #8
 729 0030 06A9     		add	r1, sp, #24
 730              	.LVL54:
 731              		.loc 7 143 39 view .LVU136
 732 0032 11E90300 		ldmdb	r1, {r0, r1}
 733              	.LVL55:
 734              		.loc 7 143 39 view .LVU137
 735 0036 82E80300 		stm	r2, {r0, r1}
 736              	.LBB667:
 737              	.LBI667:
  38:fibre-cpp/include/fibre/callback.hpp **** 
  39:fibre-cpp/include/fibre/callback.hpp ****     // If you get a compile error "[...] invokes a deleted function" that points
  40:fibre-cpp/include/fibre/callback.hpp ****     // here then you're probably trying to assign a Callback with incompatible
  41:fibre-cpp/include/fibre/callback.hpp ****     // template arguments to another Callback.
  42:fibre-cpp/include/fibre/callback.hpp ****     template<typename TRetOther, typename ... TArgsOther>
  43:fibre-cpp/include/fibre/callback.hpp ****     Callback(const Callback<TRetOther, TArgsOther...>& other) = delete;
  44:fibre-cpp/include/fibre/callback.hpp **** 
  45:fibre-cpp/include/fibre/callback.hpp ****     /**
  46:fibre-cpp/include/fibre/callback.hpp ****      * @brief Constructs a callback object from a functor. The functor must
  47:fibre-cpp/include/fibre/callback.hpp ****      * remain allocated throughout the lifetime of the Callback.
  48:fibre-cpp/include/fibre/callback.hpp ****      */
  49:fibre-cpp/include/fibre/callback.hpp ****     template<typename TFunc>
  50:fibre-cpp/include/fibre/callback.hpp ****     Callback(const TFunc& func) :
  51:fibre-cpp/include/fibre/callback.hpp ****         cb_([](void* ctx, TArgs...args){
  52:fibre-cpp/include/fibre/callback.hpp ****             return (*(const TFunc*)ctx)(args...);
  53:fibre-cpp/include/fibre/callback.hpp ****         }), ctx_((void*)&func) {}
  54:fibre-cpp/include/fibre/callback.hpp **** 
  55:fibre-cpp/include/fibre/callback.hpp ****     operator bool() {
  56:fibre-cpp/include/fibre/callback.hpp ****         return cb_;
  57:fibre-cpp/include/fibre/callback.hpp ****     }
  58:fibre-cpp/include/fibre/callback.hpp ****     
  59:fibre-cpp/include/fibre/callback.hpp ****     TRet invoke(TArgs ... arg) const {
  60:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
  61:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
  62:fibre-cpp/include/fibre/callback.hpp ****         }
  63:fibre-cpp/include/fibre/callback.hpp ****         return detail::get_default<TRet>::val();
  64:fibre-cpp/include/fibre/callback.hpp ****     }
  65:fibre-cpp/include/fibre/callback.hpp **** 
  66:fibre-cpp/include/fibre/callback.hpp ****     TRet invoke_and_clear(TArgs ... arg) {
 738              		.loc 3 66 10 is_stmt 1 view .LVU138
 739              	.LVL56:
 740              	.LBB668:
  67:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
  68:fibre-cpp/include/fibre/callback.hpp ****         auto cb = cb_;
  69:fibre-cpp/include/fibre/callback.hpp ****         ctx_ = nullptr;
 741              		.loc 3 69 14 is_stmt 0 view .LVU139
 742 003a 0193     		str	r3, [sp, #4]
  70:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 743              		.loc 3 70 13 view .LVU140
 744 003c 0093     		str	r3, [sp]
  71:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 745              		.loc 3 71 9 view .LVU141
 746 003e 1CB1     		cbz	r4, .L15
  72:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 747              		.loc 3 72 25 view .LVU142
ARM GAS  /tmp/ccrmmslP.s 			page 43


 748 0040 D2E90012 		ldrd	r1, r2, [r2]
 749 0044 2846     		mov	r0, r5
 750 0046 A047     		blx	r4
 751              	.LVL57:
 752              	.L15:
 753              		.loc 3 72 25 view .LVU143
 754              	.LBE668:
 755              	.LBE667:
 756              	.LBE663:
 757              	.LBE662:
 144:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
 145:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
 758              		.loc 7 145 5 view .LVU144
 759 0048 07B0     		add	sp, sp, #28
 760              	.LCFI4:
 761              		.cfi_remember_state
 762              		.cfi_def_cfa_offset 12
 763              		@ sp needed
 764 004a 30BD     		pop	{r4, r5, pc}
 765              	.LVL58:
 766              	.L20:
 767              	.LCFI5:
 768              		.cfi_restore_state
 769              	.LBB669:
 136:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 770              		.loc 7 136 13 view .LVU145
 771 004c 4068     		ldr	r0, [r0, #4]
 772              	.LVL59:
 136:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 773              		.loc 7 136 31 view .LVU146
 774 004e 0268     		ldr	r2, [r0]
 775 0050 5268     		ldr	r2, [r2, #4]
 776 0052 596B     		ldr	r1, [r3, #52]
 777              	.LVL60:
 136:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 778              		.loc 7 136 31 view .LVU147
 779 0054 9047     		blx	r2
 780              	.LVL61:
 136:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 781              		.loc 7 136 31 view .LVU148
 782 0056 F7E7     		b	.L15
 783              	.LBE669:
 784              		.cfi_endproc
 785              	.LFE6279:
 786              		.fnend
 788              		.section	.text._ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIv
 789              		.align	1
 790              		.global	_ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11W
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	_ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResul
 796              		.fnstart
 797              	.LVL62:
 798              	.LFB5186:
  55:communication/interface_usb.cpp ****     if (handle) {
 799              		.loc 1 55 117 is_stmt 1 view -0
ARM GAS  /tmp/ccrmmslP.s 			page 44


 800              		.cfi_startproc
 801              		@ args = 4, pretend = 0, frame = 48
 802              		@ frame_needed = 0, uses_anonymous_args = 0
  55:communication/interface_usb.cpp ****     if (handle) {
 803              		.loc 1 55 117 is_stmt 0 view .LVU150
 804 0000 70B5     		push	{r4, r5, r6, lr}
 805              		.save {r4, r5, r6, lr}
 806              	.LCFI6:
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 4, -16
 809              		.cfi_offset 5, -12
 810              		.cfi_offset 6, -8
 811              		.cfi_offset 14, -4
 812              		.pad #48
 813 0002 8CB0     		sub	sp, sp, #48
 814              	.LCFI7:
 815              		.cfi_def_cfa_offset 64
 816 0004 0446     		mov	r4, r0
 817 0006 6846     		mov	r0, sp
 818              	.LVL63:
  55:communication/interface_usb.cpp ****     if (handle) {
 819              		.loc 1 55 117 view .LVU151
 820 0008 80E80600 		stm	r0, {r1, r2}
 821 000c 109D     		ldr	r5, [sp, #64]
  56:communication/interface_usb.cpp ****         *handle = reinterpret_cast<TransferHandle>(this);
 822              		.loc 1 56 5 is_stmt 1 view .LVU152
 823 000e 03B1     		cbz	r3, .L22
  57:communication/interface_usb.cpp ****     }
 824              		.loc 1 57 9 view .LVU153
  57:communication/interface_usb.cpp ****     }
 825              		.loc 1 57 17 is_stmt 0 view .LVU154
 826 0010 1C60     		str	r4, [r3]
 827              	.L22:
  60:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 828              		.loc 1 60 5 is_stmt 1 view .LVU155
  60:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 829              		.loc 1 60 10 is_stmt 0 view .LVU156
 830 0012 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 831              	.LVL64:
  60:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 832              		.loc 1 60 5 view .LVU157
 833 0014 CBB1     		cbz	r3, .L33
  71:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 834              		.loc 1 71 5 is_stmt 1 view .LVU158
 835              	.LVL65:
 836              	.LBB670:
 837              	.LBI670:
  26:fibre-cpp/include/fibre/bufptr.hpp **** 
  27:fibre-cpp/include/fibre/bufptr.hpp ****     template<size_t I>
  28:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(T (&begin)[I]) : generic_bufptr_t(begin, I) {}
  29:fibre-cpp/include/fibre/bufptr.hpp **** 
  30:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(std::vector<typename std::remove_const<T>::type>& vector)
  31:fibre-cpp/include/fibre/bufptr.hpp ****         : generic_bufptr_t(vector.data(), vector.size()) {}
  32:fibre-cpp/include/fibre/bufptr.hpp **** 
  33:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(const std::vector<typename std::remove_const<T>::type>& vector)
  34:fibre-cpp/include/fibre/bufptr.hpp ****         : generic_bufptr_t(vector.data(), vector.size()) {}
  35:fibre-cpp/include/fibre/bufptr.hpp **** 
ARM GAS  /tmp/ccrmmslP.s 			page 45


  36:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t(const generic_bufptr_t<typename std::remove_const<T>::type>& other)
  37:fibre-cpp/include/fibre/bufptr.hpp ****         : generic_bufptr_t(other.begin(), other.end()) {}
  38:fibre-cpp/include/fibre/bufptr.hpp **** 
  39:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t& operator+=(size_t num) {
  40:fibre-cpp/include/fibre/bufptr.hpp ****         if (!soft_assert(num <= size())) {
  41:fibre-cpp/include/fibre/bufptr.hpp ****             num = size();
  42:fibre-cpp/include/fibre/bufptr.hpp ****         }
  43:fibre-cpp/include/fibre/bufptr.hpp ****         begin_ += num;
  44:fibre-cpp/include/fibre/bufptr.hpp ****         return *this;
  45:fibre-cpp/include/fibre/bufptr.hpp ****     }
  46:fibre-cpp/include/fibre/bufptr.hpp **** 
  47:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t operator++(int) {
  48:fibre-cpp/include/fibre/bufptr.hpp ****         generic_bufptr_t result = *this;
  49:fibre-cpp/include/fibre/bufptr.hpp ****         *this += 1;
  50:fibre-cpp/include/fibre/bufptr.hpp ****         return result;
  51:fibre-cpp/include/fibre/bufptr.hpp ****     }
  52:fibre-cpp/include/fibre/bufptr.hpp **** 
  53:fibre-cpp/include/fibre/bufptr.hpp ****     T& operator*() {
  54:fibre-cpp/include/fibre/bufptr.hpp ****         return *begin_;
  55:fibre-cpp/include/fibre/bufptr.hpp ****     }
  56:fibre-cpp/include/fibre/bufptr.hpp **** 
  57:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t take(size_t num) const {
  58:fibre-cpp/include/fibre/bufptr.hpp ****         if (!soft_assert(num <= size())) {
  59:fibre-cpp/include/fibre/bufptr.hpp ****             num = size();
  60:fibre-cpp/include/fibre/bufptr.hpp ****         }
  61:fibre-cpp/include/fibre/bufptr.hpp ****         generic_bufptr_t result = {begin_, num};
  62:fibre-cpp/include/fibre/bufptr.hpp ****         return result;
  63:fibre-cpp/include/fibre/bufptr.hpp ****     }
  64:fibre-cpp/include/fibre/bufptr.hpp **** 
  65:fibre-cpp/include/fibre/bufptr.hpp ****     generic_bufptr_t skip(size_t num, size_t* processed_bytes = nullptr) const {
  66:fibre-cpp/include/fibre/bufptr.hpp ****         if (!soft_assert(num <= size())) {
  67:fibre-cpp/include/fibre/bufptr.hpp ****             num = size();
  68:fibre-cpp/include/fibre/bufptr.hpp ****         }
  69:fibre-cpp/include/fibre/bufptr.hpp ****         if (processed_bytes)
  70:fibre-cpp/include/fibre/bufptr.hpp ****             (*processed_bytes) += num;
  71:fibre-cpp/include/fibre/bufptr.hpp ****         return {begin_ + num, end_};
  72:fibre-cpp/include/fibre/bufptr.hpp ****     }
  73:fibre-cpp/include/fibre/bufptr.hpp **** 
  74:fibre-cpp/include/fibre/bufptr.hpp ****     size_t size() const {
 838              		.loc 5 74 12 view .LVU159
 839              	.LBB671:
  75:fibre-cpp/include/fibre/bufptr.hpp ****         return end_ - begin_;
 840              		.loc 5 75 16 is_stmt 0 view .LVU160
 841 0016 019A     		ldr	r2, [sp, #4]
 842              		.loc 5 75 23 view .LVU161
 843 0018 009E     		ldr	r6, [sp]
 844              		.loc 5 75 21 view .LVU162
 845 001a 931B     		subs	r3, r2, r6
 846              	.LVL66:
 847              		.loc 5 75 21 view .LVU163
 848              	.LBE671:
 849              	.LBE670:
  71:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 850              		.loc 1 71 5 view .LVU164
 851 001c 3F2B     		cmp	r3, #63
 852 001e 27D8     		bhi	.L34
  76:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
ARM GAS  /tmp/ccrmmslP.s 			page 46


 853              		.loc 1 76 5 is_stmt 1 view .LVU165
 854              	.LVL67:
 855              	.LBB672:
 856              	.LBI672:
  55:fibre-cpp/include/fibre/callback.hpp ****         return cb_;
 857              		.loc 3 55 5 view .LVU166
 858              	.LBB673:
  56:fibre-cpp/include/fibre/callback.hpp ****     }
 859              		.loc 3 56 16 is_stmt 0 view .LVU167
 860 0020 A168     		ldr	r1, [r4, #8]
 861              	.LVL68:
  56:fibre-cpp/include/fibre/callback.hpp ****     }
 862              		.loc 3 56 16 view .LVU168
 863              	.LBE673:
 864              	.LBE672:
  76:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 865              		.loc 1 76 20 view .LVU169
 866 0022 0029     		cmp	r1, #0
 867 0024 36D0     		beq	.L35
 868              	.L28:
  77:communication/interface_usb.cpp ****         return;
 869              		.loc 1 77 9 is_stmt 1 view .LVU170
  77:communication/interface_usb.cpp ****         return;
 870              		.loc 1 77 25 is_stmt 0 view .LVU171
 871 0026 0323     		movs	r3, #3
 872 0028 8DF82030 		strb	r3, [sp, #32]
 873 002c 0996     		str	r6, [sp, #36]
 874              	.LVL69:
  77:communication/interface_usb.cpp ****         return;
 875              		.loc 1 77 25 view .LVU172
 876 002e 02AB     		add	r3, sp, #8
 877 0030 08AA     		add	r2, sp, #32
 878 0032 92E80300 		ldm	r2, {r0, r1}
 879 0036 83E80300 		stm	r3, {r0, r1}
 880              	.LBB674:
 881              	.LBI674:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 882              		.loc 3 59 10 is_stmt 1 view .LVU173
 883              	.LBB675:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 884              		.loc 3 60 13 is_stmt 0 view .LVU174
 885 003a 2B68     		ldr	r3, [r5]
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 886              		.loc 3 60 9 view .LVU175
 887 003c 1BB1     		cbz	r3, .L21
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 888              		.loc 3 61 22 view .LVU176
 889 003e 02AA     		add	r2, sp, #8
 890 0040 06CA     		ldm	r2, {r1, r2}
 891 0042 6868     		ldr	r0, [r5, #4]
 892 0044 9847     		blx	r3
 893              	.LVL70:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 894              		.loc 3 61 22 view .LVU177
 895              	.LBE675:
 896              	.LBE674:
  78:communication/interface_usb.cpp ****     }
ARM GAS  /tmp/ccrmmslP.s 			page 47


 897              		.loc 1 78 9 is_stmt 1 view .LVU178
 898              	.L21:
  96:communication/interface_usb.cpp **** 
 899              		.loc 1 96 1 is_stmt 0 view .LVU179
 900 0046 0CB0     		add	sp, sp, #48
 901              	.LCFI8:
 902              		.cfi_remember_state
 903              		.cfi_def_cfa_offset 16
 904              		@ sp needed
 905 0048 70BD     		pop	{r4, r5, r6, pc}
 906              	.LVL71:
 907              	.L33:
 908              	.LCFI9:
 909              		.cfi_restore_state
  61:communication/interface_usb.cpp ****         return;
 910              		.loc 1 61 9 is_stmt 1 view .LVU180
  61:communication/interface_usb.cpp ****         return;
 911              		.loc 1 61 25 is_stmt 0 view .LVU181
 912 004a 0223     		movs	r3, #2
 913 004c 8DF81030 		strb	r3, [sp, #16]
  61:communication/interface_usb.cpp ****         return;
 914              		.loc 1 61 54 view .LVU182
 915 0050 009B     		ldr	r3, [sp]
  61:communication/interface_usb.cpp ****         return;
 916              		.loc 1 61 25 view .LVU183
 917 0052 0593     		str	r3, [sp, #20]
 918              	.LVL72:
  61:communication/interface_usb.cpp ****         return;
 919              		.loc 1 61 25 view .LVU184
 920 0054 02AB     		add	r3, sp, #8
 921 0056 04AA     		add	r2, sp, #16
 922 0058 92E80300 		ldm	r2, {r0, r1}
 923 005c 83E80300 		stm	r3, {r0, r1}
 924              	.LBB676:
 925              	.LBI676:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 926              		.loc 3 59 10 is_stmt 1 view .LVU185
 927              	.LBB677:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 928              		.loc 3 60 13 is_stmt 0 view .LVU186
 929 0060 2B68     		ldr	r3, [r5]
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 930              		.loc 3 60 9 view .LVU187
 931 0062 002B     		cmp	r3, #0
 932 0064 EFD0     		beq	.L21
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 933              		.loc 3 61 22 view .LVU188
 934 0066 02AA     		add	r2, sp, #8
 935 0068 06CA     		ldm	r2, {r1, r2}
 936 006a 6868     		ldr	r0, [r5, #4]
 937 006c 9847     		blx	r3
 938              	.LVL73:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 939              		.loc 3 61 22 view .LVU189
 940              	.LBE677:
 941              	.LBE676:
  62:communication/interface_usb.cpp ****     }
ARM GAS  /tmp/ccrmmslP.s 			page 48


 942              		.loc 1 62 9 is_stmt 1 view .LVU190
 943 006e EAE7     		b	.L21
 944              	.L34:
  72:communication/interface_usb.cpp ****         return;
 945              		.loc 1 72 9 view .LVU191
  72:communication/interface_usb.cpp ****         return;
 946              		.loc 1 72 25 is_stmt 0 view .LVU192
 947 0070 0323     		movs	r3, #3
 948 0072 8DF81830 		strb	r3, [sp, #24]
 949 0076 0796     		str	r6, [sp, #28]
 950              	.LVL74:
  72:communication/interface_usb.cpp ****         return;
 951              		.loc 1 72 25 view .LVU193
 952 0078 02AB     		add	r3, sp, #8
 953 007a 06AA     		add	r2, sp, #24
 954 007c 92E80300 		ldm	r2, {r0, r1}
 955 0080 83E80300 		stm	r3, {r0, r1}
 956              	.LBB678:
 957              	.LBI678:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 958              		.loc 3 59 10 is_stmt 1 view .LVU194
 959              	.LBB679:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 960              		.loc 3 60 13 is_stmt 0 view .LVU195
 961 0084 2B68     		ldr	r3, [r5]
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 962              		.loc 3 60 9 view .LVU196
 963 0086 002B     		cmp	r3, #0
 964 0088 DDD0     		beq	.L21
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 965              		.loc 3 61 22 view .LVU197
 966 008a 02AA     		add	r2, sp, #8
 967 008c 06CA     		ldm	r2, {r1, r2}
 968 008e 6868     		ldr	r0, [r5, #4]
 969 0090 9847     		blx	r3
 970              	.LVL75:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 971              		.loc 3 61 22 view .LVU198
 972              	.LBE679:
 973              	.LBE678:
  73:communication/interface_usb.cpp ****     }
 974              		.loc 1 73 9 is_stmt 1 view .LVU199
 975 0092 D8E7     		b	.L21
 976              	.L35:
  76:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 977              		.loc 1 76 23 is_stmt 0 discriminator 2 view .LVU200
 978 0094 2169     		ldr	r1, [r4, #16]
  76:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 979              		.loc 1 76 20 discriminator 2 view .LVU201
 980 0096 0029     		cmp	r1, #0
 981 0098 C5D1     		bne	.L28
  81:communication/interface_usb.cpp ****     tx_end_ = buffer.end();
 982              		.loc 1 81 5 is_stmt 1 view .LVU202
  81:communication/interface_usb.cpp ****     tx_end_ = buffer.end();
 983              		.loc 1 81 16 is_stmt 0 view .LVU203
 984 009a 04F1080C 		add	ip, r4, #8
 985 009e 95E80300 		ldm	r5, {r0, r1}
ARM GAS  /tmp/ccrmmslP.s 			page 49


 986 00a2 CCE90001 		strd	r0, r1, [ip]
  82:communication/interface_usb.cpp **** 
 987              		.loc 1 82 5 is_stmt 1 view .LVU204
  82:communication/interface_usb.cpp **** 
 988              		.loc 1 82 13 is_stmt 0 view .LVU205
 989 00a6 2261     		str	r2, [r4, #16]
  84:communication/interface_usb.cpp **** #if HW_VERSION_MAJOR == 3 // TODO: remove preprocessor switch
 990              		.loc 1 84 5 is_stmt 1 view .LVU206
  92:communication/interface_usb.cpp ****         tx_end_ = nullptr;
 991              		.loc 1 92 9 is_stmt 0 view .LVU207
 992 00a8 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 993 00aa 99B2     		uxth	r1, r3
 994 00ac 3046     		mov	r0, r6
 995 00ae FFF7FEFF 		bl	CDC_Transmit_FS
 996              	.LVL76:
  84:communication/interface_usb.cpp **** #if HW_VERSION_MAJOR == 3 // TODO: remove preprocessor switch
 997              		.loc 1 84 5 view .LVU208
 998 00b2 0028     		cmp	r0, #0
 999 00b4 C7D0     		beq	.L21
  93:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
 1000              		.loc 1 93 9 is_stmt 1 view .LVU209
  93:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
 1001              		.loc 1 93 17 is_stmt 0 view .LVU210
 1002 00b6 0023     		movs	r3, #0
 1003 00b8 2361     		str	r3, [r4, #16]
  94:communication/interface_usb.cpp ****     }
 1004              		.loc 1 94 9 is_stmt 1 view .LVU211
  94:communication/interface_usb.cpp ****     }
 1005              		.loc 1 94 36 is_stmt 0 view .LVU212
 1006 00ba 0322     		movs	r2, #3
 1007 00bc 8DF82820 		strb	r2, [sp, #40]
 1008 00c0 0B96     		str	r6, [sp, #44]
 1009              	.LVL77:
  94:communication/interface_usb.cpp ****     }
 1010              		.loc 1 94 36 view .LVU213
 1011 00c2 02AA     		add	r2, sp, #8
 1012 00c4 0CA9     		add	r1, sp, #48
 1013 00c6 11E90300 		ldmdb	r1, {r0, r1}
 1014 00ca 82E80300 		stm	r2, {r0, r1}
 1015              	.LBB680:
 1016              	.LBI680:
  66:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
 1017              		.loc 3 66 10 is_stmt 1 view .LVU214
 1018              	.LBB681:
  67:fibre-cpp/include/fibre/callback.hpp ****         auto cb = cb_;
 1019              		.loc 3 67 15 is_stmt 0 view .LVU215
 1020 00ce E068     		ldr	r0, [r4, #12]
 1021              	.LVL78:
  68:fibre-cpp/include/fibre/callback.hpp ****         ctx_ = nullptr;
 1022              		.loc 3 68 14 view .LVU216
 1023 00d0 A568     		ldr	r5, [r4, #8]
 1024              	.LVL79:
  69:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 1025              		.loc 3 69 14 view .LVU217
 1026 00d2 E360     		str	r3, [r4, #12]
  70:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 1027              		.loc 3 70 13 view .LVU218
ARM GAS  /tmp/ccrmmslP.s 			page 50


 1028 00d4 A360     		str	r3, [r4, #8]
  71:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 1029              		.loc 3 71 9 view .LVU219
 1030 00d6 002D     		cmp	r5, #0
 1031 00d8 B5D0     		beq	.L21
 1032              		.loc 3 72 25 view .LVU220
 1033 00da D2E90012 		ldrd	r1, r2, [r2]
 1034 00de A847     		blx	r5
 1035              	.LVL80:
 1036              		.loc 3 72 37 view .LVU221
 1037 00e0 B1E7     		b	.L21
 1038              	.LBE681:
 1039              	.LBE680:
 1040              		.cfi_endproc
 1041              	.LFE5186:
 1042              		.fnend
 1044              		.section	.text._ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJN
 1045              		.align	1
 1046              		.global	_ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10Rea
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1051              	_ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEE
 1052              		.fnstart
 1053              	.LVL81:
 1054              	.LFB5189:
 108:communication/interface_usb.cpp ****     if (handle) {
 1055              		.loc 1 108 114 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 32
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 108:communication/interface_usb.cpp ****     if (handle) {
 1059              		.loc 1 108 114 is_stmt 0 view .LVU223
 1060 0000 30B5     		push	{r4, r5, lr}
 1061              		.save {r4, r5, lr}
 1062              	.LCFI10:
 1063              		.cfi_def_cfa_offset 12
 1064              		.cfi_offset 4, -12
 1065              		.cfi_offset 5, -8
 1066              		.cfi_offset 14, -4
 1067              		.pad #36
 1068 0002 89B0     		sub	sp, sp, #36
 1069              	.LCFI11:
 1070              		.cfi_def_cfa_offset 48
 1071 0004 0446     		mov	r4, r0
 1072 0006 0D46     		mov	r5, r1
 109:communication/interface_usb.cpp ****         *handle = reinterpret_cast<TransferHandle>(this);
 1073              		.loc 1 109 5 is_stmt 1 view .LVU224
 1074 0008 02B1     		cbz	r2, .L37
 110:communication/interface_usb.cpp ****     }
 1075              		.loc 1 110 9 view .LVU225
 110:communication/interface_usb.cpp ****     }
 1076              		.loc 1 110 17 is_stmt 0 view .LVU226
 1077 000a 1060     		str	r0, [r2]
 1078              	.L37:
 113:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 1079              		.loc 1 113 5 is_stmt 1 view .LVU227
ARM GAS  /tmp/ccrmmslP.s 			page 51


 113:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 1080              		.loc 1 113 10 is_stmt 0 view .LVU228
 1081 000c 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 1082              	.LVL82:
 113:communication/interface_usb.cpp ****         completer.invoke({kStreamClosed, buffer.begin()});
 1083              		.loc 1 113 5 view .LVU229
 1084 000e 92B1     		cbz	r2, .L46
 118:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 1085              		.loc 1 118 5 is_stmt 1 view .LVU230
 1086              	.LVL83:
 1087              	.LBB682:
 1088              	.LBI682:
  55:fibre-cpp/include/fibre/callback.hpp ****         return cb_;
 1089              		.loc 3 55 5 view .LVU231
 1090              	.LBB683:
  56:fibre-cpp/include/fibre/callback.hpp ****     }
 1091              		.loc 3 56 16 is_stmt 0 view .LVU232
 1092 0010 A268     		ldr	r2, [r4, #8]
 1093              	.LVL84:
  56:fibre-cpp/include/fibre/callback.hpp ****     }
 1094              		.loc 3 56 16 view .LVU233
 1095              	.LBE683:
 1096              	.LBE682:
 118:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 1097              		.loc 1 118 20 view .LVU234
 1098 0012 0AB3     		cbz	r2, .L47
 1099              	.L41:
 119:communication/interface_usb.cpp ****         return;
 1100              		.loc 1 119 9 is_stmt 1 view .LVU235
 119:communication/interface_usb.cpp ****         return;
 1101              		.loc 1 119 25 is_stmt 0 view .LVU236
 1102 0014 0322     		movs	r2, #3
 1103 0016 8DF81020 		strb	r2, [sp, #16]
 119:communication/interface_usb.cpp ****         return;
 1104              		.loc 1 119 53 view .LVU237
 1105 001a 2A68     		ldr	r2, [r5]
 119:communication/interface_usb.cpp ****         return;
 1106              		.loc 1 119 25 view .LVU238
 1107 001c 0592     		str	r2, [sp, #20]
 1108              	.LVL85:
 119:communication/interface_usb.cpp ****         return;
 1109              		.loc 1 119 25 view .LVU239
 1110 001e 6A46     		mov	r2, sp
 1111 0020 04A9     		add	r1, sp, #16
 1112              	.LVL86:
 119:communication/interface_usb.cpp ****         return;
 1113              		.loc 1 119 25 view .LVU240
 1114 0022 03C9     		ldm	r1, {r0, r1}
 1115              	.LVL87:
 119:communication/interface_usb.cpp ****         return;
 1116              		.loc 1 119 25 view .LVU241
 1117 0024 82E80300 		stm	r2, {r0, r1}
 1118              	.LBB684:
 1119              	.LBI684:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 1120              		.loc 3 59 10 is_stmt 1 view .LVU242
 1121              	.LBB685:
ARM GAS  /tmp/ccrmmslP.s 			page 52


  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 1122              		.loc 3 60 13 is_stmt 0 view .LVU243
 1123 0028 1C68     		ldr	r4, [r3]
 1124              	.LVL88:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 1125              		.loc 3 60 9 view .LVU244
 1126 002a 14B1     		cbz	r4, .L36
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 1127              		.loc 3 61 22 view .LVU245
 1128 002c 06CA     		ldm	r2, {r1, r2}
 1129 002e 5868     		ldr	r0, [r3, #4]
 1130 0030 A047     		blx	r4
 1131              	.LVL89:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 1132              		.loc 3 61 22 view .LVU246
 1133              	.LBE685:
 1134              	.LBE684:
 120:communication/interface_usb.cpp ****     }
 1135              		.loc 1 120 9 is_stmt 1 view .LVU247
 1136              	.L36:
 131:communication/interface_usb.cpp **** 
 1137              		.loc 1 131 1 is_stmt 0 view .LVU248
 1138 0032 09B0     		add	sp, sp, #36
 1139              	.LCFI12:
 1140              		.cfi_remember_state
 1141              		.cfi_def_cfa_offset 12
 1142              		@ sp needed
 1143 0034 30BD     		pop	{r4, r5, pc}
 1144              	.LVL90:
 1145              	.L46:
 1146              	.LCFI13:
 1147              		.cfi_restore_state
 114:communication/interface_usb.cpp ****         return;
 1148              		.loc 1 114 9 is_stmt 1 view .LVU249
 114:communication/interface_usb.cpp ****         return;
 1149              		.loc 1 114 25 is_stmt 0 view .LVU250
 1150 0036 0222     		movs	r2, #2
 1151 0038 8DF80820 		strb	r2, [sp, #8]
 114:communication/interface_usb.cpp ****         return;
 1152              		.loc 1 114 54 view .LVU251
 1153 003c 2A68     		ldr	r2, [r5]
 114:communication/interface_usb.cpp ****         return;
 1154              		.loc 1 114 25 view .LVU252
 1155 003e 0392     		str	r2, [sp, #12]
 1156              	.LVL91:
 114:communication/interface_usb.cpp ****         return;
 1157              		.loc 1 114 25 view .LVU253
 1158 0040 6A46     		mov	r2, sp
 1159 0042 02A9     		add	r1, sp, #8
 1160              	.LVL92:
 114:communication/interface_usb.cpp ****         return;
 1161              		.loc 1 114 25 view .LVU254
 1162 0044 03C9     		ldm	r1, {r0, r1}
 1163              	.LVL93:
 114:communication/interface_usb.cpp ****         return;
 1164              		.loc 1 114 25 view .LVU255
 1165 0046 82E80300 		stm	r2, {r0, r1}
ARM GAS  /tmp/ccrmmslP.s 			page 53


 1166              	.LBB686:
 1167              	.LBI686:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 1168              		.loc 3 59 10 is_stmt 1 view .LVU256
 1169              	.LBB687:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 1170              		.loc 3 60 13 is_stmt 0 view .LVU257
 1171 004a 1C68     		ldr	r4, [r3]
 1172              	.LVL94:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 1173              		.loc 3 60 9 view .LVU258
 1174 004c 002C     		cmp	r4, #0
 1175 004e F0D0     		beq	.L36
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 1176              		.loc 3 61 22 view .LVU259
 1177 0050 06CA     		ldm	r2, {r1, r2}
 1178 0052 5868     		ldr	r0, [r3, #4]
 1179 0054 A047     		blx	r4
 1180              	.LVL95:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 1181              		.loc 3 61 22 view .LVU260
 1182              	.LBE687:
 1183              	.LBE686:
 115:communication/interface_usb.cpp ****     }
 1184              		.loc 1 115 9 is_stmt 1 view .LVU261
 1185 0056 ECE7     		b	.L36
 1186              	.LVL96:
 1187              	.L47:
 118:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 1188              		.loc 1 118 23 is_stmt 0 discriminator 2 view .LVU262
 1189 0058 2269     		ldr	r2, [r4, #16]
 118:communication/interface_usb.cpp ****         completer.invoke({kStreamError, buffer.begin()});
 1190              		.loc 1 118 20 discriminator 2 view .LVU263
 1191 005a 002A     		cmp	r2, #0
 1192 005c DAD1     		bne	.L41
 123:communication/interface_usb.cpp ****     rx_end_ = buffer.begin(); // the pointer is updated at the end of the transfer
 1193              		.loc 1 123 5 is_stmt 1 view .LVU264
 123:communication/interface_usb.cpp ****     rx_end_ = buffer.begin(); // the pointer is updated at the end of the transfer
 1194              		.loc 1 123 16 is_stmt 0 view .LVU265
 1195 005e 04F10802 		add	r2, r4, #8
 1196 0062 93E80300 		ldm	r3, {r0, r1}
 1197              	.LVL97:
 123:communication/interface_usb.cpp ****     rx_end_ = buffer.begin(); // the pointer is updated at the end of the transfer
 1198              		.loc 1 123 16 view .LVU266
 1199 0066 C2E90001 		strd	r0, r1, [r2]
 124:communication/interface_usb.cpp **** 
 1200              		.loc 1 124 5 is_stmt 1 view .LVU267
 124:communication/interface_usb.cpp **** 
 1201              		.loc 1 124 27 is_stmt 0 view .LVU268
 1202 006a 2968     		ldr	r1, [r5]
 124:communication/interface_usb.cpp **** 
 1203              		.loc 1 124 13 view .LVU269
 1204 006c 2161     		str	r1, [r4, #16]
 126:communication/interface_usb.cpp ****         rx_end_ = nullptr;
 1205              		.loc 1 126 5 is_stmt 1 view .LVU270
 1206              	.LVL98:
 1207              	.LBB688:
ARM GAS  /tmp/ccrmmslP.s 			page 54


 1208              	.LBI688:
  74:fibre-cpp/include/fibre/bufptr.hpp ****         return end_ - begin_;
 1209              		.loc 5 74 12 view .LVU271
 1210              	.LBB689:
 1211              		.loc 5 75 16 is_stmt 0 view .LVU272
 1212 006e 6A68     		ldr	r2, [r5, #4]
 1213              		.loc 5 75 21 view .LVU273
 1214 0070 521A     		subs	r2, r2, r1
 1215              	.LVL99:
 1216              		.loc 5 75 21 view .LVU274
 1217              	.LBE689:
 1218              	.LBE688:
 126:communication/interface_usb.cpp ****         rx_end_ = nullptr;
 1219              		.loc 1 126 31 view .LVU275
 1220 0072 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1221              	.LVL100:
 126:communication/interface_usb.cpp ****         rx_end_ = nullptr;
 1222              		.loc 1 126 31 view .LVU276
 1223 0074 92B2     		uxth	r2, r2
 1224 0076 0E48     		ldr	r0, .L48
 1225 0078 0068     		ldr	r0, [r0]
 1226 007a FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 1227              	.LVL101:
 126:communication/interface_usb.cpp ****         rx_end_ = nullptr;
 1228              		.loc 1 126 5 view .LVU277
 1229 007e 0028     		cmp	r0, #0
 1230 0080 D7D0     		beq	.L36
 127:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
 1231              		.loc 1 127 9 is_stmt 1 view .LVU278
 127:communication/interface_usb.cpp ****         completer_.invoke_and_clear({kStreamError, buffer.begin()});
 1232              		.loc 1 127 17 is_stmt 0 view .LVU279
 1233 0082 0023     		movs	r3, #0
 1234 0084 2361     		str	r3, [r4, #16]
 128:communication/interface_usb.cpp ****         return;
 1235              		.loc 1 128 9 is_stmt 1 view .LVU280
 128:communication/interface_usb.cpp ****         return;
 1236              		.loc 1 128 36 is_stmt 0 view .LVU281
 1237 0086 0322     		movs	r2, #3
 1238 0088 8DF81820 		strb	r2, [sp, #24]
 128:communication/interface_usb.cpp ****         return;
 1239              		.loc 1 128 64 view .LVU282
 1240 008c 2A68     		ldr	r2, [r5]
 128:communication/interface_usb.cpp ****         return;
 1241              		.loc 1 128 36 view .LVU283
 1242 008e 0792     		str	r2, [sp, #28]
 1243              	.LVL102:
 128:communication/interface_usb.cpp ****         return;
 1244              		.loc 1 128 36 view .LVU284
 1245 0090 6A46     		mov	r2, sp
 1246 0092 08A9     		add	r1, sp, #32
 1247 0094 11E90300 		ldmdb	r1, {r0, r1}
 1248 0098 82E80300 		stm	r2, {r0, r1}
 1249              	.LBB690:
 1250              	.LBI690:
  66:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
 1251              		.loc 3 66 10 is_stmt 1 view .LVU285
 1252              	.LBB691:
ARM GAS  /tmp/ccrmmslP.s 			page 55


  67:fibre-cpp/include/fibre/callback.hpp ****         auto cb = cb_;
 1253              		.loc 3 67 15 is_stmt 0 view .LVU286
 1254 009c E068     		ldr	r0, [r4, #12]
 1255              	.LVL103:
  68:fibre-cpp/include/fibre/callback.hpp ****         ctx_ = nullptr;
 1256              		.loc 3 68 14 view .LVU287
 1257 009e A568     		ldr	r5, [r4, #8]
 1258              	.LVL104:
  69:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 1259              		.loc 3 69 14 view .LVU288
 1260 00a0 E360     		str	r3, [r4, #12]
  70:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 1261              		.loc 3 70 13 view .LVU289
 1262 00a2 A360     		str	r3, [r4, #8]
  71:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 1263              		.loc 3 71 9 view .LVU290
 1264 00a4 002D     		cmp	r5, #0
 1265 00a6 C4D0     		beq	.L36
 1266              		.loc 3 72 25 view .LVU291
 1267 00a8 D2E90012 		ldrd	r1, r2, [r2]
 1268 00ac A847     		blx	r5
 1269              	.LVL105:
 1270              		.loc 3 72 25 view .LVU292
 1271              	.LBE691:
 1272              	.LBE690:
 129:communication/interface_usb.cpp ****     }
 1273              		.loc 1 129 9 is_stmt 1 view .LVU293
 1274 00ae C0E7     		b	.L36
 1275              	.L49:
 1276              		.align	2
 1277              	.L48:
 1278 00b0 00000000 		.word	usb_dev_handle
 1279              		.cfi_endproc
 1280              	.LFE5189:
 1281              		.fnend
 1283              		.section	.text._ZN5fibre16Stm32UsbTxStream10did_finishEv,"ax",%progbits
 1284              		.align	1
 1285              		.global	_ZN5fibre16Stm32UsbTxStream10did_finishEv
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1290              	_ZN5fibre16Stm32UsbTxStream10did_finishEv:
 1291              		.fnstart
 1292              	.LVL106:
 1293              	.LFB5188:
 102:communication/interface_usb.cpp ****     const uint8_t* tx_end = tx_end_;
 1294              		.loc 1 102 37 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 102:communication/interface_usb.cpp ****     const uint8_t* tx_end = tx_end_;
 1298              		.loc 1 102 37 is_stmt 0 view .LVU295
 1299 0000 10B5     		push	{r4, lr}
 1300              		.save {r4, lr}
 1301              	.LCFI14:
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 4, -8
ARM GAS  /tmp/ccrmmslP.s 			page 56


 1304              		.cfi_offset 14, -4
 1305              		.pad #16
 1306 0002 84B0     		sub	sp, sp, #16
 1307              	.LCFI15:
 1308              		.cfi_def_cfa_offset 24
 1309 0004 0346     		mov	r3, r0
 103:communication/interface_usb.cpp ****     tx_end_ = nullptr;
 1310              		.loc 1 103 5 is_stmt 1 view .LVU296
 103:communication/interface_usb.cpp ****     tx_end_ = nullptr;
 1311              		.loc 1 103 20 is_stmt 0 view .LVU297
 1312 0006 0269     		ldr	r2, [r0, #16]
 1313              	.LVL107:
 104:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, tx_end});
 1314              		.loc 1 104 5 is_stmt 1 view .LVU298
 104:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, tx_end});
 1315              		.loc 1 104 13 is_stmt 0 view .LVU299
 1316 0008 0021     		movs	r1, #0
 1317 000a 0161     		str	r1, [r0, #16]
 105:communication/interface_usb.cpp **** }
 1318              		.loc 1 105 5 is_stmt 1 view .LVU300
 105:communication/interface_usb.cpp **** }
 1319              		.loc 1 105 34 is_stmt 0 view .LVU301
 1320 000c 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
 105:communication/interface_usb.cpp **** }
 1321              		.loc 1 105 45 view .LVU302
 1322 000e A9B1     		cbz	r1, .L53
 1323 0010 0021     		movs	r1, #0
 1324              	.L51:
 105:communication/interface_usb.cpp **** }
 1325              		.loc 1 105 32 discriminator 4 view .LVU303
 1326 0012 8DF80810 		strb	r1, [sp, #8]
 1327 0016 0392     		str	r2, [sp, #12]
 1328              	.LVL108:
 105:communication/interface_usb.cpp **** }
 1329              		.loc 1 105 32 discriminator 4 view .LVU304
 1330 0018 6A46     		mov	r2, sp
 1331              	.LVL109:
 105:communication/interface_usb.cpp **** }
 1332              		.loc 1 105 32 discriminator 4 view .LVU305
 1333 001a 04A9     		add	r1, sp, #16
 1334 001c 11E90300 		ldmdb	r1, {r0, r1}
 1335              	.LVL110:
 105:communication/interface_usb.cpp **** }
 1336              		.loc 1 105 32 discriminator 4 view .LVU306
 1337 0020 82E80300 		stm	r2, {r0, r1}
 1338              	.LBB692:
 1339              	.LBI692:
  66:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
 1340              		.loc 3 66 10 is_stmt 1 discriminator 4 view .LVU307
 1341              	.LBB693:
  67:fibre-cpp/include/fibre/callback.hpp ****         auto cb = cb_;
 1342              		.loc 3 67 15 is_stmt 0 discriminator 4 view .LVU308
 1343 0024 D868     		ldr	r0, [r3, #12]
 1344              	.LVL111:
  68:fibre-cpp/include/fibre/callback.hpp ****         ctx_ = nullptr;
 1345              		.loc 3 68 14 discriminator 4 view .LVU309
 1346 0026 9C68     		ldr	r4, [r3, #8]
ARM GAS  /tmp/ccrmmslP.s 			page 57


 1347              	.LVL112:
  69:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 1348              		.loc 3 69 14 discriminator 4 view .LVU310
 1349 0028 0022     		movs	r2, #0
 1350 002a DA60     		str	r2, [r3, #12]
  70:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 1351              		.loc 3 70 13 discriminator 4 view .LVU311
 1352 002c 9A60     		str	r2, [r3, #8]
  71:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 1353              		.loc 3 71 9 discriminator 4 view .LVU312
 1354 002e 1CB1     		cbz	r4, .L50
 1355              		.loc 3 72 25 view .LVU313
 1356 0030 6B46     		mov	r3, sp
 1357              	.LVL113:
 1358              		.loc 3 72 25 view .LVU314
 1359 0032 93E80600 		ldm	r3, {r1, r2}
 1360 0036 A047     		blx	r4
 1361              	.LVL114:
 1362              	.L50:
 1363              		.loc 3 72 25 view .LVU315
 1364              	.LBE693:
 1365              	.LBE692:
 106:communication/interface_usb.cpp **** 
 1366              		.loc 1 106 1 view .LVU316
 1367 0038 04B0     		add	sp, sp, #16
 1368              	.LCFI16:
 1369              		.cfi_remember_state
 1370              		.cfi_def_cfa_offset 8
 1371              		@ sp needed
 1372 003a 10BD     		pop	{r4, pc}
 1373              	.LVL115:
 1374              	.L53:
 1375              	.LCFI17:
 1376              		.cfi_restore_state
 105:communication/interface_usb.cpp **** }
 1377              		.loc 1 105 45 view .LVU317
 1378 003c 0221     		movs	r1, #2
 1379 003e E8E7     		b	.L51
 1380              		.cfi_endproc
 1381              	.LFE5188:
 1382              		.fnend
 1384              		.section	.text._ZN5fibre16Stm32UsbRxStream10did_finishEv,"ax",%progbits
 1385              		.align	1
 1386              		.global	_ZN5fibre16Stm32UsbRxStream10did_finishEv
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1391              	_ZN5fibre16Stm32UsbRxStream10did_finishEv:
 1392              		.fnstart
 1393              	.LVL116:
 1394              	.LFB5191:
 137:communication/interface_usb.cpp ****     uint8_t* rx_end = rx_end_;
 1395              		.loc 1 137 37 is_stmt 1 view -0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 16
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 137:communication/interface_usb.cpp ****     uint8_t* rx_end = rx_end_;
ARM GAS  /tmp/ccrmmslP.s 			page 58


 1399              		.loc 1 137 37 is_stmt 0 view .LVU319
 1400 0000 10B5     		push	{r4, lr}
 1401              		.save {r4, lr}
 1402              	.LCFI18:
 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 4, -8
 1405              		.cfi_offset 14, -4
 1406              		.pad #16
 1407 0002 84B0     		sub	sp, sp, #16
 1408              	.LCFI19:
 1409              		.cfi_def_cfa_offset 24
 1410 0004 0346     		mov	r3, r0
 138:communication/interface_usb.cpp ****     rx_end_ = nullptr;
 1411              		.loc 1 138 5 is_stmt 1 view .LVU320
 138:communication/interface_usb.cpp ****     rx_end_ = nullptr;
 1412              		.loc 1 138 14 is_stmt 0 view .LVU321
 1413 0006 0269     		ldr	r2, [r0, #16]
 1414              	.LVL117:
 139:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, rx_end});
 1415              		.loc 1 139 5 is_stmt 1 view .LVU322
 139:communication/interface_usb.cpp ****     completer_.invoke_and_clear({connected_ ? kStreamOk : kStreamClosed, rx_end});
 1416              		.loc 1 139 13 is_stmt 0 view .LVU323
 1417 0008 0021     		movs	r1, #0
 1418 000a 0161     		str	r1, [r0, #16]
 140:communication/interface_usb.cpp **** }
 1419              		.loc 1 140 5 is_stmt 1 view .LVU324
 140:communication/interface_usb.cpp **** }
 1420              		.loc 1 140 34 is_stmt 0 view .LVU325
 1421 000c 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
 140:communication/interface_usb.cpp **** }
 1422              		.loc 1 140 45 view .LVU326
 1423 000e A9B1     		cbz	r1, .L58
 1424 0010 0021     		movs	r1, #0
 1425              	.L56:
 140:communication/interface_usb.cpp **** }
 1426              		.loc 1 140 32 discriminator 4 view .LVU327
 1427 0012 8DF80810 		strb	r1, [sp, #8]
 1428 0016 0392     		str	r2, [sp, #12]
 1429              	.LVL118:
 140:communication/interface_usb.cpp **** }
 1430              		.loc 1 140 32 discriminator 4 view .LVU328
 1431 0018 6A46     		mov	r2, sp
 1432              	.LVL119:
 140:communication/interface_usb.cpp **** }
 1433              		.loc 1 140 32 discriminator 4 view .LVU329
 1434 001a 04A9     		add	r1, sp, #16
 1435 001c 11E90300 		ldmdb	r1, {r0, r1}
 1436              	.LVL120:
 140:communication/interface_usb.cpp **** }
 1437              		.loc 1 140 32 discriminator 4 view .LVU330
 1438 0020 82E80300 		stm	r2, {r0, r1}
 1439              	.LBB694:
 1440              	.LBI694:
  66:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
 1441              		.loc 3 66 10 is_stmt 1 discriminator 4 view .LVU331
 1442              	.LBB695:
  67:fibre-cpp/include/fibre/callback.hpp ****         auto cb = cb_;
ARM GAS  /tmp/ccrmmslP.s 			page 59


 1443              		.loc 3 67 15 is_stmt 0 discriminator 4 view .LVU332
 1444 0024 D868     		ldr	r0, [r3, #12]
 1445              	.LVL121:
  68:fibre-cpp/include/fibre/callback.hpp ****         ctx_ = nullptr;
 1446              		.loc 3 68 14 discriminator 4 view .LVU333
 1447 0026 9C68     		ldr	r4, [r3, #8]
 1448              	.LVL122:
  69:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 1449              		.loc 3 69 14 discriminator 4 view .LVU334
 1450 0028 0022     		movs	r2, #0
 1451 002a DA60     		str	r2, [r3, #12]
  70:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 1452              		.loc 3 70 13 discriminator 4 view .LVU335
 1453 002c 9A60     		str	r2, [r3, #8]
  71:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 1454              		.loc 3 71 9 discriminator 4 view .LVU336
 1455 002e 1CB1     		cbz	r4, .L55
 1456              		.loc 3 72 25 view .LVU337
 1457 0030 6B46     		mov	r3, sp
 1458              	.LVL123:
 1459              		.loc 3 72 25 view .LVU338
 1460 0032 93E80600 		ldm	r3, {r1, r2}
 1461 0036 A047     		blx	r4
 1462              	.LVL124:
 1463              	.L55:
 1464              		.loc 3 72 25 view .LVU339
 1465              	.LBE695:
 1466              	.LBE694:
 141:communication/interface_usb.cpp **** 
 1467              		.loc 1 141 1 view .LVU340
 1468 0038 04B0     		add	sp, sp, #16
 1469              	.LCFI20:
 1470              		.cfi_remember_state
 1471              		.cfi_def_cfa_offset 8
 1472              		@ sp needed
 1473 003a 10BD     		pop	{r4, pc}
 1474              	.LVL125:
 1475              	.L58:
 1476              	.LCFI21:
 1477              		.cfi_restore_state
 140:communication/interface_usb.cpp **** }
 1478              		.loc 1 140 45 view .LVU341
 1479 003c 0221     		movs	r1, #2
 1480 003e E8E7     		b	.L56
 1481              		.cfi_endproc
 1482              	.LFE5191:
 1483              		.fnend
 1485              		.section	.text.usb_rx_process_packet,"ax",%progbits
 1486              		.align	1
 1487              		.global	usb_rx_process_packet
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1492              	usb_rx_process_packet:
 1493              		.fnstart
 1494              	.LVL126:
 1495              	.LFB5210:
ARM GAS  /tmp/ccrmmslP.s 			page 60


 223:communication/interface_usb.cpp ****     if (endpoint_pair == CDC_OUT_EP && usb_cdc_rx_stream.rx_end_) {
 1496              		.loc 1 223 79 is_stmt 1 view -0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 223:communication/interface_usb.cpp ****     if (endpoint_pair == CDC_OUT_EP && usb_cdc_rx_stream.rx_end_) {
 1500              		.loc 1 223 79 is_stmt 0 view .LVU343
 1501 0000 08B5     		push	{r3, lr}
 1502              		.save {r3, lr}
 1503              	.LCFI22:
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 3, -8
 1506              		.cfi_offset 14, -4
 224:communication/interface_usb.cpp ****         usb_cdc_rx_stream.rx_end_ += len;
 1507              		.loc 1 224 5 is_stmt 1 view .LVU344
 1508 0002 012A     		cmp	r2, #1
 1509 0004 02D0     		beq	.L64
 1510              	.L61:
 227:communication/interface_usb.cpp ****         usb_native_rx_stream.rx_end_ += len;
 1511              		.loc 1 227 12 view .LVU345
 1512 0006 032A     		cmp	r2, #3
 1513 0008 0ED0     		beq	.L65
 1514              	.LVL127:
 1515              	.L60:
 231:communication/interface_usb.cpp **** 
 1516              		.loc 1 231 1 is_stmt 0 view .LVU346
 1517 000a 08BD     		pop	{r3, pc}
 1518              	.LVL128:
 1519              	.L64:
 224:communication/interface_usb.cpp ****         usb_cdc_rx_stream.rx_end_ += len;
 1520              		.loc 1 224 58 discriminator 1 view .LVU347
 1521 000c 0D4B     		ldr	r3, .L66
 1522 000e 1B69     		ldr	r3, [r3, #16]
 224:communication/interface_usb.cpp ****         usb_cdc_rx_stream.rx_end_ += len;
 1523              		.loc 1 224 37 discriminator 1 view .LVU348
 1524 0010 002B     		cmp	r3, #0
 1525 0012 F8D0     		beq	.L61
 225:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 5, 0);
 1526              		.loc 1 225 9 is_stmt 1 view .LVU349
 225:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 5, 0);
 1527              		.loc 1 225 35 is_stmt 0 view .LVU350
 1528 0014 1944     		add	r1, r1, r3
 1529              	.LVL129:
 225:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 5, 0);
 1530              		.loc 1 225 35 view .LVU351
 1531 0016 0B4B     		ldr	r3, .L66
 1532 0018 1961     		str	r1, [r3, #16]
 226:communication/interface_usb.cpp ****     } else if (endpoint_pair == ODRIVE_OUT_EP && usb_native_rx_stream.rx_end_) {
 1533              		.loc 1 226 9 is_stmt 1 view .LVU352
 226:communication/interface_usb.cpp ****     } else if (endpoint_pair == ODRIVE_OUT_EP && usb_native_rx_stream.rx_end_) {
 1534              		.loc 1 226 21 is_stmt 0 view .LVU353
 1535 001a 0022     		movs	r2, #0
 1536              	.LVL130:
 226:communication/interface_usb.cpp ****     } else if (endpoint_pair == ODRIVE_OUT_EP && usb_native_rx_stream.rx_end_) {
 1537              		.loc 1 226 21 view .LVU354
 1538 001c 0521     		movs	r1, #5
 1539 001e 0A4B     		ldr	r3, .L66+4
ARM GAS  /tmp/ccrmmslP.s 			page 61


 1540 0020 1868     		ldr	r0, [r3]
 1541              	.LVL131:
 226:communication/interface_usb.cpp ****     } else if (endpoint_pair == ODRIVE_OUT_EP && usb_native_rx_stream.rx_end_) {
 1542              		.loc 1 226 21 view .LVU355
 1543 0022 FFF7FEFF 		bl	osMessagePut
 1544              	.LVL132:
 1545 0026 F0E7     		b	.L60
 1546              	.LVL133:
 1547              	.L65:
 227:communication/interface_usb.cpp ****         usb_native_rx_stream.rx_end_ += len;
 1548              		.loc 1 227 71 discriminator 1 view .LVU356
 1549 0028 084B     		ldr	r3, .L66+8
 1550 002a 1B69     		ldr	r3, [r3, #16]
 227:communication/interface_usb.cpp ****         usb_native_rx_stream.rx_end_ += len;
 1551              		.loc 1 227 47 discriminator 1 view .LVU357
 1552 002c 002B     		cmp	r3, #0
 1553 002e ECD0     		beq	.L60
 228:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 6, 0);
 1554              		.loc 1 228 9 is_stmt 1 view .LVU358
 228:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 6, 0);
 1555              		.loc 1 228 38 is_stmt 0 view .LVU359
 1556 0030 1944     		add	r1, r1, r3
 1557              	.LVL134:
 228:communication/interface_usb.cpp ****         osMessagePut(usb_event_queue, 6, 0);
 1558              		.loc 1 228 38 view .LVU360
 1559 0032 064B     		ldr	r3, .L66+8
 1560 0034 1961     		str	r1, [r3, #16]
 229:communication/interface_usb.cpp ****     }
 1561              		.loc 1 229 9 is_stmt 1 view .LVU361
 229:communication/interface_usb.cpp ****     }
 1562              		.loc 1 229 21 is_stmt 0 view .LVU362
 1563 0036 0022     		movs	r2, #0
 1564              	.LVL135:
 229:communication/interface_usb.cpp ****     }
 1565              		.loc 1 229 21 view .LVU363
 1566 0038 0621     		movs	r1, #6
 1567 003a 034B     		ldr	r3, .L66+4
 1568 003c 1868     		ldr	r0, [r3]
 1569              	.LVL136:
 229:communication/interface_usb.cpp ****     }
 1570              		.loc 1 229 21 view .LVU364
 1571 003e FFF7FEFF 		bl	osMessagePut
 1572              	.LVL137:
 231:communication/interface_usb.cpp **** 
 1573              		.loc 1 231 1 view .LVU365
 1574 0042 E2E7     		b	.L60
 1575              	.L67:
 1576              		.align	2
 1577              	.L66:
 1578 0044 00000000 		.word	.LANCHOR4
 1579 0048 00000000 		.word	usb_event_queue
 1580 004c 00000000 		.word	.LANCHOR6
 1581              		.cfi_endproc
 1582              	.LFE5210:
 1583              		.fnend
 1585              		.section	.text.start_usb_server,"ax",%progbits
 1586              		.align	1
ARM GAS  /tmp/ccrmmslP.s 			page 62


 1587              		.global	start_usb_server
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1592              	start_usb_server:
 1593              		.fnstart
 1594              	.LFB5211:
 233:communication/interface_usb.cpp ****     // Start USB communication thread
 1595              		.loc 1 233 25 is_stmt 1 view -0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 24
 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599 0000 10B5     		push	{r4, lr}
 1600              		.save {r4, lr}
 1601              	.LCFI23:
 1602              		.cfi_def_cfa_offset 8
 1603              		.cfi_offset 4, -8
 1604              		.cfi_offset 14, -4
 1605              		.pad #24
 1606 0002 86B0     		sub	sp, sp, #24
 1607              	.LCFI24:
 1608              		.cfi_def_cfa_offset 32
 235:communication/interface_usb.cpp ****     usb_thread = osThreadCreate(osThread(usb_server_thread_def), NULL);
 1609              		.loc 1 235 5 view .LVU367
 1610 0004 0DF1040C 		add	ip, sp, #4
 1611 0008 074C     		ldr	r4, .L70
 1612 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1613 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1614 0010 2368     		ldr	r3, [r4]
 1615 0012 CCF80030 		str	r3, [ip]
 236:communication/interface_usb.cpp **** }
 1616              		.loc 1 236 5 view .LVU368
 236:communication/interface_usb.cpp **** }
 1617              		.loc 1 236 32 is_stmt 0 view .LVU369
 1618 0016 0021     		movs	r1, #0
 1619 0018 01A8     		add	r0, sp, #4
 1620 001a FFF7FEFF 		bl	osThreadCreate
 1621              	.LVL138:
 236:communication/interface_usb.cpp **** }
 1622              		.loc 1 236 16 view .LVU370
 1623 001e 034B     		ldr	r3, .L70+4
 1624 0020 1860     		str	r0, [r3]
 1625              		.loc 1 237 1 view .LVU371
 1626 0022 06B0     		add	sp, sp, #24
 1627              	.LCFI25:
 1628              		.cfi_def_cfa_offset 8
 1629              		@ sp needed
 1630 0024 10BD     		pop	{r4, pc}
 1631              	.L71:
 1632 0026 00BF     		.align	2
 1633              	.L70:
 1634 0028 00000000 		.word	.LANCHOR11
 1635 002c 00000000 		.word	.LANCHOR12
 1636              		.cfi_endproc
 1637              	.LFE5211:
 1638              		.fnend
 1640              		.section	.text._ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_Z
ARM GAS  /tmp/ccrmmslP.s 			page 63


 1641              		.align	1
 1642              		.weak	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_c
 1648              		.fnstart
 1649              	.LVL139:
 1650              	.LFB5951:
  73:fibre-cpp/include/fibre/callback.hpp ****         }
  74:fibre-cpp/include/fibre/callback.hpp ****         return detail::get_default<TRet>::val();
  75:fibre-cpp/include/fibre/callback.hpp ****     }
  76:fibre-cpp/include/fibre/callback.hpp **** 
  77:fibre-cpp/include/fibre/callback.hpp ****     typedef TRet(*cb_t)(void*, TArgs...);
  78:fibre-cpp/include/fibre/callback.hpp ****     cb_t get_ptr() { return cb_; }
  79:fibre-cpp/include/fibre/callback.hpp ****     void* get_ctx() { return ctx_; }
  80:fibre-cpp/include/fibre/callback.hpp **** 
  81:fibre-cpp/include/fibre/callback.hpp **** private:
  82:fibre-cpp/include/fibre/callback.hpp ****     TRet(*cb_)(void*, TArgs...);
  83:fibre-cpp/include/fibre/callback.hpp ****     void* ctx_;
  84:fibre-cpp/include/fibre/callback.hpp **** };
  85:fibre-cpp/include/fibre/callback.hpp **** 
  86:fibre-cpp/include/fibre/callback.hpp **** template<typename _TRet, typename _TObj, typename ... _TArgs>
  87:fibre-cpp/include/fibre/callback.hpp **** struct function_traits {
  88:fibre-cpp/include/fibre/callback.hpp ****     using TRet = _TRet;
  89:fibre-cpp/include/fibre/callback.hpp ****     using TArgs = std::tuple<_TArgs...>;
  90:fibre-cpp/include/fibre/callback.hpp ****     using TObj = _TObj;
  91:fibre-cpp/include/fibre/callback.hpp **** };
  92:fibre-cpp/include/fibre/callback.hpp **** 
  93:fibre-cpp/include/fibre/callback.hpp **** template<typename _TRet, typename _TObj, typename ... _TArgs>
  94:fibre-cpp/include/fibre/callback.hpp **** function_traits<_TRet, _TObj, _TArgs...> make_function_traits(_TRet (_TObj::*)(_TArgs...)) {
  95:fibre-cpp/include/fibre/callback.hpp ****     return {};
  96:fibre-cpp/include/fibre/callback.hpp **** }
  97:fibre-cpp/include/fibre/callback.hpp **** 
  98:fibre-cpp/include/fibre/callback.hpp **** template<typename T1, T1 T2, typename T3, typename T4, typename T5>
  99:fibre-cpp/include/fibre/callback.hpp **** struct MemberCallback;
 100:fibre-cpp/include/fibre/callback.hpp **** 
 101:fibre-cpp/include/fibre/callback.hpp **** template<typename T, T func, typename TObj, typename TRes, typename ... TArgs>
 102:fibre-cpp/include/fibre/callback.hpp **** struct MemberCallback<T, func, TObj, TRes, std::tuple<TArgs...>> {
 103:fibre-cpp/include/fibre/callback.hpp ****     using cb_t = Callback<TRes, TArgs...>;
 104:fibre-cpp/include/fibre/callback.hpp ****     static cb_t with(TObj* obj) {
 105:fibre-cpp/include/fibre/callback.hpp ****         return cb_t{[](void* obj, TArgs... arg) {
 106:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 107:fibre-cpp/include/fibre/callback.hpp ****         }, obj};
 108:fibre-cpp/include/fibre/callback.hpp ****     }
 109:fibre-cpp/include/fibre/callback.hpp **** };
 110:fibre-cpp/include/fibre/callback.hpp **** 
 111:fibre-cpp/include/fibre/callback.hpp **** template<typename T, T func,
 112:fibre-cpp/include/fibre/callback.hpp ****          typename TTraits = decltype(make_function_traits(func)),
 113:fibre-cpp/include/fibre/callback.hpp ****          typename MemCb = MemberCallback<T, func, typename TTraits::TObj, typename TTraits::TRet, t
 114:fibre-cpp/include/fibre/callback.hpp **** typename MemCb::cb_t make_callback(typename TTraits::TObj* obj) {
 1651              		.loc 3 114 22 is_stmt 1 view -0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
 1656              	.LBB696:
ARM GAS  /tmp/ccrmmslP.s 			page 64


 1657              	.LBI696:
 104:fibre-cpp/include/fibre/callback.hpp ****         return cb_t{[](void* obj, TArgs... arg) {
 1658              		.loc 3 104 17 view .LVU373
 1659              	.LBB697:
 1660              	.LBB698:
 1661              	.LBI698:
  22:fibre-cpp/include/fibre/callback.hpp ****         cb_(callback), ctx_(ctx) {}
 1662              		.loc 3 22 5 view .LVU374
 1663              	.LBB699:
  23:fibre-cpp/include/fibre/callback.hpp **** 
 1664              		.loc 3 23 32 is_stmt 0 view .LVU375
 1665 0000 014A     		ldr	r2, .L73
 1666 0002 0260     		str	r2, [r0]
 1667 0004 4160     		str	r1, [r0, #4]
 1668              	.LVL140:
  23:fibre-cpp/include/fibre/callback.hpp **** 
 1669              		.loc 3 23 32 view .LVU376
 1670              	.LBE699:
 1671              	.LBE698:
 1672              	.LBE697:
 1673              	.LBE696:
 115:fibre-cpp/include/fibre/callback.hpp ****     return MemCb::with(obj);
 116:fibre-cpp/include/fibre/callback.hpp **** }
 1674              		.loc 3 116 1 view .LVU377
 1675 0006 7047     		bx	lr
 1676              	.L74:
 1677              		.align	2
 1678              	.L73:
 1679 0008 00000000 		.word	_ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17o
 1680              		.cfi_endproc
 1681              	.LFE5951:
 1682              		.cantunwind
 1683              		.fnend
 1685              		.section	.text._ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL
 1686              		.align	1
 1687              		.weak	_ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17o
 1688              		.syntax unified
 1689              		.thumb
 1690              		.thumb_func
 1692              	_ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write
 1693              		.fnstart
 1694              	.LFB6085:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1695              		.loc 3 105 21 is_stmt 1 view -0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 56
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1700              		.save {r4, r5, r6, r7, lr}
 1701              	.LCFI26:
 1702              		.cfi_def_cfa_offset 20
 1703              		.cfi_offset 4, -20
 1704              		.cfi_offset 5, -16
 1705              		.cfi_offset 6, -12
 1706              		.cfi_offset 7, -8
 1707              		.cfi_offset 14, -4
 1708              		.pad #68
ARM GAS  /tmp/ccrmmslP.s 			page 65


 1709 0002 91B0     		sub	sp, sp, #68
 1710              	.LCFI27:
 1711              		.cfi_def_cfa_offset 88
 1712 0004 0446     		mov	r4, r0
 1713 0006 02A8     		add	r0, sp, #8
 1714 0008 80E80600 		stm	r0, {r1, r2}
 1715              	.LVL141:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1716              		.loc 3 105 21 is_stmt 0 view .LVU379
 1717 000c 04AB     		add	r3, sp, #16
 1718 000e 03C8     		ldm	r0, {r0, r1}
 1719 0010 83E80500 		stm	r3, {r0, r2}
 1720              	.LBB712:
 1721              	.LBI712:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1722              		.loc 3 105 21 is_stmt 1 view .LVU380
 1723              	.LVL142:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1724              		.loc 3 105 21 is_stmt 0 view .LVU381
 1725 0014 0DF1180C 		add	ip, sp, #24
 1726 0018 8CE80500 		stm	ip, {r0, r2}
 1727              	.LBB713:
 1728              	.LBB714:
 1729              	.LBI714:
  69:fibre-cpp/include/fibre/../../stream_utils.hpp ****         is_active_ = false;
 1730              		.loc 7 69 10 is_stmt 1 view .LVU382
 1731              	.LBB715:
  70:fibre-cpp/include/fibre/../../stream_utils.hpp ****         transfer_handle_ = 0;
 1732              		.loc 7 70 20 is_stmt 0 view .LVU383
 1733 001c 0023     		movs	r3, #0
 1734 001e 84F84830 		strb	r3, [r4, #72]
  71:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 1735              		.loc 7 71 26 view .LVU384
 1736 0022 E364     		str	r3, [r4, #76]
  73:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (result.end < buffer_ || result.end > (buffer_ + I)) {
 1737              		.loc 7 73 20 view .LVU385
 1738 0024 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
  73:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (result.end < buffer_ || result.end > (buffer_ + I)) {
 1739              		.loc 7 73 9 view .LVU386
 1740 0028 ABB9     		cbnz	r3, .L75
  74:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 for (;;)
 1741              		.loc 7 74 13 view .LVU387
 1742 002a A142     		cmp	r1, r4
 1743 002c 03D3     		bcc	.L79
  74:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 for (;;)
 1744              		.loc 7 74 63 view .LVU388
 1745 002e 04F14002 		add	r2, r4, #64
  74:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 for (;;)
 1746              		.loc 7 74 38 view .LVU389
 1747 0032 9142     		cmp	r1, r2
 1748 0034 02D9     		bls	.L78
 1749              	.L79:
  76:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
 1750              		.loc 7 76 38 view .LVU390
 1751 0036 0023     		movs	r3, #0
 1752 0038 E364     		str	r3, [r4, #76]
  75:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     transfer_handle_ = 0;
ARM GAS  /tmp/ccrmmslP.s 			page 66


 1753              		.loc 7 75 17 is_stmt 1 view .LVU391
 1754 003a FCE7     		b	.L79
 1755              	.L78:
  78:fibre-cpp/include/fibre/../../stream_utils.hpp ****             maybe_start_async_write();
 1756              		.loc 7 78 37 is_stmt 0 view .LVU392
 1757 003c 0B1B     		subs	r3, r1, r4
  78:fibre-cpp/include/fibre/../../stream_utils.hpp ****             maybe_start_async_write();
 1758              		.loc 7 78 48 view .LVU393
 1759 003e 03F03F03 		and	r3, r3, #63
  78:fibre-cpp/include/fibre/../../stream_utils.hpp ****             maybe_start_async_write();
 1760              		.loc 7 78 23 view .LVU394
 1761 0042 6364     		str	r3, [r4, #68]
 1762              	.LVL143:
 1763              	.LBB716:
 1764              	.LBI716:
  54:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (is_active_) {
 1765              		.loc 7 54 10 is_stmt 1 view .LVU395
 1766              	.LBB717:
  55:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
 1767              		.loc 7 55 13 is_stmt 0 view .LVU396
 1768 0044 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
  55:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
 1769              		.loc 7 55 9 view .LVU397
 1770 0048 2BB9     		cbnz	r3, .L75
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 1771              		.loc 7 57 20 view .LVU398
 1772 004a 636C     		ldr	r3, [r4, #68]
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 1773              		.loc 7 57 32 view .LVU399
 1774 004c 226C     		ldr	r2, [r4, #64]
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 1775              		.loc 7 57 16 view .LVU400
 1776 004e 9342     		cmp	r3, r2
 1777 0050 03D3     		bcc	.L83
  60:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 1778              		.loc 7 60 16 view .LVU401
 1779 0052 9342     		cmp	r3, r2
 1780 0054 19D8     		bhi	.L84
 1781              	.LVL144:
 1782              	.L75:
  60:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 1783              		.loc 7 60 16 view .LVU402
 1784              	.LBE717:
 1785              	.LBE716:
 1786              	.LBE715:
 1787              	.LBE714:
 1788              	.LBE713:
 1789              	.LBE712:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1790              		.loc 3 105 21 view .LVU403
 1791 0056 11B0     		add	sp, sp, #68
 1792              	.LCFI28:
 1793              		.cfi_remember_state
 1794              		.cfi_def_cfa_offset 20
 1795              		@ sp needed
 1796 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 1797              	.LVL145:
ARM GAS  /tmp/ccrmmslP.s 			page 67


 1798              	.L83:
 1799              	.LCFI29:
 1800              		.cfi_restore_state
 1801              	.LBB729:
 1802              	.LBB728:
 1803              	.LBB727:
 1804              	.LBB726:
 1805              	.LBB725:
 1806              	.LBB724:
  58:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + write_idx_}, &transfer_handle_, MEMBE
 1807              		.loc 7 58 24 view .LVU404
 1808 005a 0121     		movs	r1, #1
 1809 005c 84F84810 		strb	r1, [r4, #72]
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 1810              		.loc 7 59 13 view .LVU405
 1811 0060 256D     		ldr	r5, [r4, #80]
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 1812              		.loc 7 59 30 view .LVU406
 1813 0062 2968     		ldr	r1, [r5]
 1814 0064 0F68     		ldr	r7, [r1]
 1815 0066 2344     		add	r3, r3, r4
 1816 0068 2244     		add	r2, r2, r4
 1817              	.LVL146:
 1818              	.LBB718:
 1819              	.LBI718:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1820              		.loc 5 23 5 is_stmt 1 view .LVU407
 1821              	.LBB719:
 1822              	.LBB720:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1823              		.loc 5 23 65 is_stmt 0 view .LVU408
 1824 006a 0E93     		str	r3, [sp, #56]
 1825 006c 0F92     		str	r2, [sp, #60]
 1826              	.LVL147:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1827              		.loc 5 23 65 view .LVU409
 1828              	.LBE720:
 1829              	.LBE719:
 1830              	.LBE718:
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 1831              		.loc 7 59 30 view .LVU410
 1832 006e 0CAE     		add	r6, sp, #48
 1833 0070 2146     		mov	r1, r4
 1834 0072 3046     		mov	r0, r6
 1835 0074 FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_wri
 1836              	.LVL148:
 1837 0078 0096     		str	r6, [sp]
 1838 007a 04F14C03 		add	r3, r4, #76
 1839 007e 10AA     		add	r2, sp, #64
 1840 0080 12E90600 		ldmdb	r2, {r1, r2}
 1841 0084 2846     		mov	r0, r5
 1842 0086 B847     		blx	r7
 1843              	.LVL149:
 1844 0088 E5E7     		b	.L75
 1845              	.L84:
  61:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + I}, &transfer_handle_, MEMBER_CB(this
 1846              		.loc 7 61 24 view .LVU411
ARM GAS  /tmp/ccrmmslP.s 			page 68


 1847 008a 0122     		movs	r2, #1
 1848 008c 84F84820 		strb	r2, [r4, #72]
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 1849              		.loc 7 62 13 view .LVU412
 1850 0090 256D     		ldr	r5, [r4, #80]
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 1851              		.loc 7 62 30 view .LVU413
 1852 0092 2A68     		ldr	r2, [r5]
 1853 0094 1768     		ldr	r7, [r2]
 1854 0096 2344     		add	r3, r3, r4
 1855 0098 04F14002 		add	r2, r4, #64
 1856              	.LVL150:
 1857              	.LBB721:
 1858              	.LBI721:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1859              		.loc 5 23 5 is_stmt 1 view .LVU414
 1860              	.LBB722:
 1861              	.LBB723:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1862              		.loc 5 23 65 is_stmt 0 view .LVU415
 1863 009c 0A93     		str	r3, [sp, #40]
 1864 009e 0B92     		str	r2, [sp, #44]
 1865              	.LVL151:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 1866              		.loc 5 23 65 view .LVU416
 1867              	.LBE723:
 1868              	.LBE722:
 1869              	.LBE721:
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 1870              		.loc 7 62 30 view .LVU417
 1871 00a0 08AE     		add	r6, sp, #32
 1872 00a2 2146     		mov	r1, r4
 1873 00a4 3046     		mov	r0, r6
 1874 00a6 FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_wri
 1875              	.LVL152:
 1876 00aa 0096     		str	r6, [sp]
 1877 00ac 04F14C03 		add	r3, r4, #76
 1878 00b0 0AAA     		add	r2, sp, #40
 1879 00b2 06CA     		ldm	r2, {r1, r2}
 1880 00b4 2846     		mov	r0, r5
 1881 00b6 B847     		blx	r7
 1882              	.LVL153:
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 1883              		.loc 7 62 30 view .LVU418
 1884              	.LBE724:
 1885              	.LBE725:
 1886              	.LBE726:
 1887              	.LBE727:
 1888              	.LBE728:
 1889              	.LBE729:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 1890              		.loc 3 105 21 view .LVU419
 1891 00b8 CDE7     		b	.L75
 1892              		.cfi_endproc
 1893              	.LFE6085:
 1894              		.fnend
 1896              		.section	.text._ZL17usb_server_threadPv,"ax",%progbits
ARM GAS  /tmp/ccrmmslP.s 			page 69


 1897              		.align	1
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1902              	_ZL17usb_server_threadPv:
 1903              		.fnstart
 1904              	.LFB5209:
 157:communication/interface_usb.cpp ****     (void) ctx;
 1905              		.loc 1 157 43 is_stmt 1 view -0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 72
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              	.LVL154:
 157:communication/interface_usb.cpp ****     (void) ctx;
 1910              		.loc 1 157 43 is_stmt 0 view .LVU421
 1911 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1912              		.save {r4, r5, r6, r7, lr}
 1913              	.LCFI30:
 1914              		.cfi_def_cfa_offset 20
 1915              		.cfi_offset 4, -20
 1916              		.cfi_offset 5, -16
 1917              		.cfi_offset 6, -12
 1918              		.cfi_offset 7, -8
 1919              		.cfi_offset 14, -4
 1920              		.pad #84
 1921 0002 95B0     		sub	sp, sp, #84
 1922              	.LCFI31:
 1923              		.cfi_def_cfa_offset 104
 1924 0004 38E0     		b	.L86
 1925              	.LVL155:
 1926              	.L97:
 1927              	.LBB750:
 170:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = true;
 1928              		.loc 1 170 13 is_stmt 1 view .LVU422
 170:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = true;
 1929              		.loc 1 170 21 view .LVU423
 171:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = true;
 1930              		.loc 1 171 17 view .LVU424
 171:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = true;
 1931              		.loc 1 171 46 is_stmt 0 view .LVU425
 1932 0006 0123     		movs	r3, #1
 1933 0008 564A     		ldr	r2, .L105
 1934 000a 5371     		strb	r3, [r2, #5]
 172:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = true;
 1935              		.loc 1 172 17 is_stmt 1 view .LVU426
 172:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = true;
 1936              		.loc 1 172 49 is_stmt 0 view .LVU427
 1937 000c 564A     		ldr	r2, .L105+4
 1938 000e 5371     		strb	r3, [r2, #5]
 173:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = true;
 1939              		.loc 1 173 17 is_stmt 1 view .LVU428
 173:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = true;
 1940              		.loc 1 173 46 is_stmt 0 view .LVU429
 1941 0010 564A     		ldr	r2, .L105+8
 1942 0012 5371     		strb	r3, [r2, #5]
 174:communication/interface_usb.cpp **** 
 1943              		.loc 1 174 17 is_stmt 1 view .LVU430
ARM GAS  /tmp/ccrmmslP.s 			page 70


 174:communication/interface_usb.cpp **** 
 1944              		.loc 1 174 49 is_stmt 0 view .LVU431
 1945 0014 564A     		ldr	r2, .L105+12
 1946 0016 5371     		strb	r3, [r2, #5]
 176:communication/interface_usb.cpp **** 
 1947              		.loc 1 176 17 is_stmt 1 view .LVU432
 1948              	.LVL156:
 1949              	.LBB751:
 1950              	.LBI751:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1951              		.loc 3 20 5 view .LVU433
 1952              	.LBB752:
 1953              	.LBB753:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1954              		.loc 3 20 44 is_stmt 0 view .LVU434
 1955 0018 0023     		movs	r3, #0
 1956 001a 0693     		str	r3, [sp, #24]
 1957 001c 0793     		str	r3, [sp, #28]
 1958              	.LVL157:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1959              		.loc 3 20 44 view .LVU435
 1960              	.LBE753:
 1961              	.LBE752:
 1962              	.LBE751:
 176:communication/interface_usb.cpp **** 
 1963              		.loc 1 176 37 view .LVU436
 1964 001e 06A9     		add	r1, sp, #24
 1965 0020 5448     		ldr	r0, .L105+16
 1966 0022 FFF7FEFF 		bl	_ZN5fibre25LegacyProtocolPacketBased5startENS_8CallbackIvJPS0_NS_12StreamStatusEEEE
 1967              	.LVL158:
 178:communication/interface_usb.cpp ****                     fibre_over_cdc.start({});
 1968              		.loc 1 178 17 is_stmt 1 view .LVU437
 178:communication/interface_usb.cpp ****                     fibre_over_cdc.start({});
 1969              		.loc 1 178 34 is_stmt 0 view .LVU438
 1970 0026 544B     		ldr	r3, .L105+20
 1971 0028 93F89D31 		ldrb	r3, [r3, #413]	@ zero_extendqisi2
 178:communication/interface_usb.cpp ****                     fibre_over_cdc.start({});
 1972              		.loc 1 178 17 view .LVU439
 1973 002c 3BB1     		cbz	r3, .L103
 180:communication/interface_usb.cpp ****                         || odrv.config_.usb_cdc_protocol == ODrive::STREAM_PROTOCOL_TYPE_ASCII_AND_
 1974              		.loc 1 180 24 is_stmt 1 view .LVU440
 1975 002e 012B     		cmp	r3, #1
 1976 0030 01D0     		beq	.L99
 181:communication/interface_usb.cpp ****                     ascii_over_cdc.start();
 1977              		.loc 1 181 25 is_stmt 0 view .LVU441
 1978 0032 032B     		cmp	r3, #3
 1979 0034 20D1     		bne	.L86
 1980              	.L99:
 182:communication/interface_usb.cpp ****                 }
 1981              		.loc 1 182 21 is_stmt 1 view .LVU442
 182:communication/interface_usb.cpp ****                 }
 1982              		.loc 1 182 41 is_stmt 0 view .LVU443
 1983 0036 5148     		ldr	r0, .L105+24
 1984 0038 FFF7FEFF 		bl	_ZN13AsciiProtocol5startEv
 1985              	.LVL159:
 1986 003c 1CE0     		b	.L86
 1987              	.L103:
ARM GAS  /tmp/ccrmmslP.s 			page 71


 179:communication/interface_usb.cpp ****                 } else if (odrv.config_.usb_cdc_protocol == ODrive::STREAM_PROTOCOL_TYPE_ASCII
 1988              		.loc 1 179 21 is_stmt 1 view .LVU444
 1989              	.LVL160:
 1990              	.LBB754:
 1991              	.LBI754:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1992              		.loc 3 20 5 view .LVU445
 1993              	.LBB755:
 1994              	.LBB756:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1995              		.loc 3 20 44 is_stmt 0 view .LVU446
 1996 003e 0893     		str	r3, [sp, #32]
 1997 0040 0993     		str	r3, [sp, #36]
 1998              	.LVL161:
  20:fibre-cpp/include/fibre/callback.hpp ****     Callback(std::nullptr_t) : cb_(nullptr), ctx_(nullptr) {}
 1999              		.loc 3 20 44 view .LVU447
 2000              	.LBE756:
 2001              	.LBE755:
 2002              	.LBE754:
 2003              	.LBB757:
 2004              	.LBI757:
 154:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         : unwrapper_(rx_channel), wrapper_(tx_channel) {}
 155:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 156:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** 
 157:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #if FIBRE_ENABLE_CLIENT
 158:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start(Callback<void, LegacyObjectClient*, std::shared_ptr<LegacyObject>> on_found_root_obj
 159:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****         inner_protocol_.start(on_found_root_object, on_lost_root_object, on_stopped);
 160:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     }
 161:fibre-cpp/include/fibre/../../legacy_protocol.hpp **** #else
 162:fibre-cpp/include/fibre/../../legacy_protocol.hpp ****     void start(Callback<void, LegacyProtocolPacketBased*, StreamStatus> on_stopped) { inner_protoco
 2005              		.loc 4 162 10 is_stmt 1 view .LVU448
 2006              	.LBB758:
 2007              		.loc 4 162 87 view .LVU449
 2008              	.LBB759:
 2009              	.LBI759:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2010              		.loc 3 37 5 view .LVU450
 2011              	.LBB760:
 2012              	.LBB761:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2013              		.loc 3 37 70 is_stmt 0 view .LVU451
 2014 0042 0A93     		str	r3, [sp, #40]
 2015 0044 0B93     		str	r3, [sp, #44]
 2016              	.LVL162:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2017              		.loc 3 37 70 view .LVU452
 2018              	.LBE761:
 2019              	.LBE760:
 2020              	.LBE759:
 2021              		.loc 4 162 108 view .LVU453
 2022 0046 0AA9     		add	r1, sp, #40
 2023 0048 4D48     		ldr	r0, .L105+28
 2024 004a FFF7FEFF 		bl	_ZN5fibre25LegacyProtocolPacketBased5startENS_8CallbackIvJPS0_NS_12StreamStatusEEEE
 2025              	.LVL163:
 2026              		.loc 4 162 108 view .LVU454
 2027              	.LBE758:
 2028              	.LBE757:
ARM GAS  /tmp/ccrmmslP.s 			page 72


 2029 004e 13E0     		b	.L86
 2030              	.L96:
 186:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = false;
 2031              		.loc 1 186 13 is_stmt 1 view .LVU455
 186:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.connected_ = false;
 2032              		.loc 1 186 21 view .LVU456
 187:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = false;
 2033              		.loc 1 187 17 view .LVU457
 187:communication/interface_usb.cpp ****                 usb_native_tx_stream.connected_ = false;
 2034              		.loc 1 187 46 is_stmt 0 view .LVU458
 2035 0050 4448     		ldr	r0, .L105
 2036 0052 0023     		movs	r3, #0
 2037 0054 4371     		strb	r3, [r0, #5]
 188:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = false;
 2038              		.loc 1 188 17 is_stmt 1 view .LVU459
 188:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.connected_ = false;
 2039              		.loc 1 188 49 is_stmt 0 view .LVU460
 2040 0056 444E     		ldr	r6, .L105+4
 2041 0058 7371     		strb	r3, [r6, #5]
 189:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = false;
 2042              		.loc 1 189 17 is_stmt 1 view .LVU461
 189:communication/interface_usb.cpp ****                 usb_native_rx_stream.connected_ = false;
 2043              		.loc 1 189 46 is_stmt 0 view .LVU462
 2044 005a 444D     		ldr	r5, .L105+8
 2045 005c 6B71     		strb	r3, [r5, #5]
 190:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 2046              		.loc 1 190 17 is_stmt 1 view .LVU463
 190:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 2047              		.loc 1 190 49 is_stmt 0 view .LVU464
 2048 005e 444C     		ldr	r4, .L105+12
 2049 0060 6371     		strb	r3, [r4, #5]
 191:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 2050              		.loc 1 191 17 is_stmt 1 view .LVU465
 191:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 2051              		.loc 1 191 45 is_stmt 0 view .LVU466
 2052 0062 FFF7FEFF 		bl	_ZN5fibre16Stm32UsbTxStream10did_finishEv
 2053              	.LVL164:
 192:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 2054              		.loc 1 192 17 is_stmt 1 view .LVU467
 192:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 2055              		.loc 1 192 48 is_stmt 0 view .LVU468
 2056 0066 3046     		mov	r0, r6
 2057 0068 FFF7FEFF 		bl	_ZN5fibre16Stm32UsbTxStream10did_finishEv
 2058              	.LVL165:
 193:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 2059              		.loc 1 193 17 is_stmt 1 view .LVU469
 193:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 2060              		.loc 1 193 45 is_stmt 0 view .LVU470
 2061 006c 2846     		mov	r0, r5
 2062 006e FFF7FEFF 		bl	_ZN5fibre16Stm32UsbRxStream10did_finishEv
 2063              	.LVL166:
 194:communication/interface_usb.cpp ****             } break;
 2064              		.loc 1 194 17 is_stmt 1 view .LVU471
 194:communication/interface_usb.cpp ****             } break;
 2065              		.loc 1 194 48 is_stmt 0 view .LVU472
 2066 0072 2046     		mov	r0, r4
 2067 0074 FFF7FEFF 		bl	_ZN5fibre16Stm32UsbRxStream10did_finishEv
ARM GAS  /tmp/ccrmmslP.s 			page 73


 2068              	.LVL167:
 2069              	.L86:
 2070              	.LBE750:
 158:communication/interface_usb.cpp ****  
 2071              		.loc 1 158 5 is_stmt 1 view .LVU473
 160:communication/interface_usb.cpp ****         osEvent event = osMessageGet(usb_event_queue, osWaitForever);
 2072              		.loc 1 160 5 view .LVU474
 2073              	.LBB770:
 161:communication/interface_usb.cpp **** 
 2074              		.loc 1 161 9 view .LVU475
 161:communication/interface_usb.cpp **** 
 2075              		.loc 1 161 68 is_stmt 0 view .LVU476
 2076 0078 4FF0FF32 		mov	r2, #-1
 2077 007c 414B     		ldr	r3, .L105+32
 2078 007e 1968     		ldr	r1, [r3]
 2079 0080 03A8     		add	r0, sp, #12
 2080 0082 FFF7FEFF 		bl	osMessageGet
 2081              	.LVL168:
 163:communication/interface_usb.cpp ****             continue;
 2082              		.loc 1 163 9 is_stmt 1 view .LVU477
 163:communication/interface_usb.cpp ****             continue;
 2083              		.loc 1 163 19 is_stmt 0 view .LVU478
 2084 0086 039B     		ldr	r3, [sp, #12]
 163:communication/interface_usb.cpp ****             continue;
 2085              		.loc 1 163 9 view .LVU479
 2086 0088 102B     		cmp	r3, #16
 2087 008a F5D1     		bne	.L86
 167:communication/interface_usb.cpp **** 
 2088              		.loc 1 167 9 is_stmt 1 view .LVU480
 167:communication/interface_usb.cpp **** 
 2089              		.loc 1 167 20 is_stmt 0 view .LVU481
 2090 008c 3E4A     		ldr	r2, .L105+36
 2091 008e 1368     		ldr	r3, [r2]
 167:communication/interface_usb.cpp **** 
 2092              		.loc 1 167 26 view .LVU482
 2093 0090 0133     		adds	r3, r3, #1
 2094 0092 1360     		str	r3, [r2]
 169:communication/interface_usb.cpp ****             case 1: { // USB connected event
 2095              		.loc 1 169 9 is_stmt 1 view .LVU483
 169:communication/interface_usb.cpp ****             case 1: { // USB connected event
 2096              		.loc 1 169 29 is_stmt 0 view .LVU484
 2097 0094 049B     		ldr	r3, [sp, #16]
 169:communication/interface_usb.cpp ****             case 1: { // USB connected event
 2098              		.loc 1 169 9 view .LVU485
 2099 0096 013B     		subs	r3, r3, #1
 2100 0098 062B     		cmp	r3, #6
 2101 009a EDD8     		bhi	.L86
 2102 009c 01A2     		adr	r2, .L91
 2103 009e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2104 00a2 00BF     		.p2align 2
 2105              	.L91:
 2106 00a4 07000000 		.word	.L97+1
 2107 00a8 51000000 		.word	.L96+1
 2108 00ac C1000000 		.word	.L95+1
 2109 00b0 C9000000 		.word	.L94+1
 2110 00b4 D1000000 		.word	.L93+1
 2111 00b8 D9000000 		.word	.L92+1
ARM GAS  /tmp/ccrmmslP.s 			page 74


 2112 00bc E1000000 		.word	.L90+1
 2113              		.p2align 1
 2114              	.L95:
 197:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 2115              		.loc 1 197 13 is_stmt 1 view .LVU486
 197:communication/interface_usb.cpp ****                 usb_cdc_tx_stream.did_finish();
 2116              		.loc 1 197 21 view .LVU487
 198:communication/interface_usb.cpp ****             } break;
 2117              		.loc 1 198 17 view .LVU488
 198:communication/interface_usb.cpp ****             } break;
 2118              		.loc 1 198 45 is_stmt 0 view .LVU489
 2119 00c0 2848     		ldr	r0, .L105
 2120 00c2 FFF7FEFF 		bl	_ZN5fibre16Stm32UsbTxStream10did_finishEv
 2121              	.LVL169:
 2122 00c6 D7E7     		b	.L86
 2123              	.L94:
 201:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 2124              		.loc 1 201 13 is_stmt 1 view .LVU490
 201:communication/interface_usb.cpp ****                 usb_native_tx_stream.did_finish();
 2125              		.loc 1 201 21 view .LVU491
 202:communication/interface_usb.cpp ****             } break;
 2126              		.loc 1 202 17 view .LVU492
 202:communication/interface_usb.cpp ****             } break;
 2127              		.loc 1 202 48 is_stmt 0 view .LVU493
 2128 00c8 2748     		ldr	r0, .L105+4
 2129 00ca FFF7FEFF 		bl	_ZN5fibre16Stm32UsbTxStream10did_finishEv
 2130              	.LVL170:
 2131 00ce D3E7     		b	.L86
 2132              	.L93:
 205:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 2133              		.loc 1 205 13 is_stmt 1 view .LVU494
 205:communication/interface_usb.cpp ****                 usb_cdc_rx_stream.did_finish();
 2134              		.loc 1 205 21 view .LVU495
 206:communication/interface_usb.cpp ****             } break;
 2135              		.loc 1 206 17 view .LVU496
 206:communication/interface_usb.cpp ****             } break;
 2136              		.loc 1 206 45 is_stmt 0 view .LVU497
 2137 00d0 2648     		ldr	r0, .L105+8
 2138 00d2 FFF7FEFF 		bl	_ZN5fibre16Stm32UsbRxStream10did_finishEv
 2139              	.LVL171:
 2140 00d6 CFE7     		b	.L86
 2141              	.L92:
 209:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 2142              		.loc 1 209 13 is_stmt 1 view .LVU498
 209:communication/interface_usb.cpp ****                 usb_native_rx_stream.did_finish();
 2143              		.loc 1 209 21 view .LVU499
 210:communication/interface_usb.cpp ****             } break;
 2144              		.loc 1 210 17 view .LVU500
 210:communication/interface_usb.cpp ****             } break;
 2145              		.loc 1 210 48 is_stmt 0 view .LVU501
 2146 00d8 2548     		ldr	r0, .L105+12
 2147 00da FFF7FEFF 		bl	_ZN5fibre16Stm32UsbRxStream10did_finishEv
 2148              	.LVL172:
 2149 00de CBE7     		b	.L86
 2150              	.L90:
 213:communication/interface_usb.cpp ****                 usb_cdc_stdout_pending = false;
 2151              		.loc 1 213 13 is_stmt 1 view .LVU502
ARM GAS  /tmp/ccrmmslP.s 			page 75


 213:communication/interface_usb.cpp ****                 usb_cdc_stdout_pending = false;
 2152              		.loc 1 213 21 view .LVU503
 214:communication/interface_usb.cpp ****                 usb_cdc_stdout_sink.maybe_start_async_write();
 2153              		.loc 1 214 17 view .LVU504
 214:communication/interface_usb.cpp ****                 usb_cdc_stdout_sink.maybe_start_async_write();
 2154              		.loc 1 214 40 is_stmt 0 view .LVU505
 2155 00e0 2A4B     		ldr	r3, .L105+40
 2156 00e2 0022     		movs	r2, #0
 2157 00e4 1A70     		strb	r2, [r3]
 215:communication/interface_usb.cpp ****             } break;
 2158              		.loc 1 215 17 is_stmt 1 view .LVU506
 2159              	.LVL173:
 2160              	.LBB762:
 2161              	.LBI762:
  54:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (is_active_) {
 2162              		.loc 7 54 10 view .LVU507
 2163              	.LBB763:
  55:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
 2164              		.loc 7 55 13 is_stmt 0 view .LVU508
 2165 00e6 2A4B     		ldr	r3, .L105+44
 2166 00e8 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
  55:fibre-cpp/include/fibre/../../stream_utils.hpp ****             // nothing to do
 2167              		.loc 7 55 9 view .LVU509
 2168 00ec 002B     		cmp	r3, #0
 2169 00ee C3D1     		bne	.L86
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 2170              		.loc 7 57 20 view .LVU510
 2171 00f0 274A     		ldr	r2, .L105+44
 2172 00f2 536C     		ldr	r3, [r2, #68]
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 2173              		.loc 7 57 32 view .LVU511
 2174 00f4 126C     		ldr	r2, [r2, #64]
  57:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 2175              		.loc 7 57 16 view .LVU512
 2176 00f6 9342     		cmp	r3, r2
 2177 00f8 1AD3     		bcc	.L104
  60:fibre-cpp/include/fibre/../../stream_utils.hpp ****             is_active_ = true;
 2178              		.loc 7 60 16 view .LVU513
 2179 00fa 9342     		cmp	r3, r2
 2180 00fc BCD9     		bls	.L86
  61:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + I}, &transfer_handle_, MEMBER_CB(this
 2181              		.loc 7 61 24 view .LVU514
 2182 00fe 244C     		ldr	r4, .L105+44
 2183 0100 0122     		movs	r2, #1
 2184 0102 84F84820 		strb	r2, [r4, #72]
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 2185              		.loc 7 62 13 view .LVU515
 2186 0106 256D     		ldr	r5, [r4, #80]
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 2187              		.loc 7 62 30 view .LVU516
 2188 0108 2A68     		ldr	r2, [r5]
 2189 010a 1768     		ldr	r7, [r2]
 2190 010c 2344     		add	r3, r3, r4
 2191              	.LVL174:
 2192              	.LBB764:
 2193              	.LBI764:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
ARM GAS  /tmp/ccrmmslP.s 			page 76


 2194              		.loc 5 23 5 is_stmt 1 view .LVU517
 2195              	.LBB765:
 2196              	.LBB766:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2197              		.loc 5 23 65 is_stmt 0 view .LVU518
 2198 010e 0E93     		str	r3, [sp, #56]
 2199 0110 04F14003 		add	r3, r4, #64
 2200              	.LVL175:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2201              		.loc 5 23 65 view .LVU519
 2202 0114 0F93     		str	r3, [sp, #60]
 2203              	.LVL176:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2204              		.loc 5 23 65 view .LVU520
 2205              	.LBE766:
 2206              	.LBE765:
 2207              	.LBE764:
  62:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else {
 2208              		.loc 7 62 30 view .LVU521
 2209 0116 0CAE     		add	r6, sp, #48
 2210 0118 2146     		mov	r1, r4
 2211 011a 3046     		mov	r0, r6
 2212 011c FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_wri
 2213              	.LVL177:
 2214 0120 0096     		str	r6, [sp]
 2215 0122 04F14C03 		add	r3, r4, #76
 2216 0126 0F9A     		ldr	r2, [sp, #60]
 2217 0128 0E99     		ldr	r1, [sp, #56]
 2218 012a 2846     		mov	r0, r5
 2219 012c B847     		blx	r7
 2220              	.LVL178:
  66:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 2221              		.loc 7 66 5 view .LVU522
 2222 012e A3E7     		b	.L86
 2223              	.LVL179:
 2224              	.L104:
  58:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write({buffer_ + read_idx_, buffer_ + write_idx_}, &transfer_handle_, MEMBE
 2225              		.loc 7 58 24 view .LVU523
 2226 0130 174C     		ldr	r4, .L105+44
 2227 0132 0121     		movs	r1, #1
 2228 0134 84F84810 		strb	r1, [r4, #72]
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 2229              		.loc 7 59 13 view .LVU524
 2230 0138 256D     		ldr	r5, [r4, #80]
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 2231              		.loc 7 59 30 view .LVU525
 2232 013a 2968     		ldr	r1, [r5]
 2233 013c 0F68     		ldr	r7, [r1]
 2234 013e 2344     		add	r3, r3, r4
 2235 0140 2244     		add	r2, r2, r4
 2236              	.LVL180:
 2237              	.LBB767:
 2238              	.LBI767:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2239              		.loc 5 23 5 is_stmt 1 view .LVU526
 2240              	.LBB768:
 2241              	.LBB769:
ARM GAS  /tmp/ccrmmslP.s 			page 77


  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2242              		.loc 5 23 65 is_stmt 0 view .LVU527
 2243 0142 1293     		str	r3, [sp, #72]
 2244 0144 1392     		str	r2, [sp, #76]
 2245              	.LVL181:
  23:fibre-cpp/include/fibre/bufptr.hpp **** 
 2246              		.loc 5 23 65 view .LVU528
 2247              	.LBE769:
 2248              	.LBE768:
 2249              	.LBE767:
  59:fibre-cpp/include/fibre/../../stream_utils.hpp ****         } else if (read_idx_ > write_idx_) {
 2250              		.loc 7 59 30 view .LVU529
 2251 0146 10AE     		add	r6, sp, #64
 2252 0148 2146     		mov	r1, r4
 2253 014a 3046     		mov	r0, r6
 2254 014c FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_wri
 2255              	.LVL182:
 2256 0150 0096     		str	r6, [sp]
 2257 0152 04F14C03 		add	r3, r4, #76
 2258 0156 14AA     		add	r2, sp, #80
 2259 0158 12E90600 		ldmdb	r2, {r1, r2}
 2260 015c 2846     		mov	r0, r5
 2261 015e B847     		blx	r7
 2262              	.LVL183:
 2263 0160 8AE7     		b	.L86
 2264              	.L106:
 2265 0162 00BF     		.align	2
 2266              	.L105:
 2267 0164 00000000 		.word	.LANCHOR1
 2268 0168 00000000 		.word	.LANCHOR3
 2269 016c 00000000 		.word	.LANCHOR4
 2270 0170 00000000 		.word	.LANCHOR6
 2271 0174 00000000 		.word	.LANCHOR8
 2272 0178 00400000 		.word	odrv+16384
 2273 017c 00000000 		.word	.LANCHOR10
 2274 0180 58000000 		.word	.LANCHOR7+88
 2275 0184 00000000 		.word	usb_event_queue
 2276 0188 00000000 		.word	.LANCHOR13
 2277 018c 00000000 		.word	.LANCHOR14
 2278 0190 00000000 		.word	.LANCHOR9
 2279              	.LBE763:
 2280              	.LBE762:
 2281              	.LBE770:
 2282              		.cfi_endproc
 2283              	.LFE5209:
 2284              		.fnend
 2286              		.section	.text._ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultE
 2287              		.align	1
 2288              		.weak	_ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2293              	_ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_
 2294              		.fnstart
 2295              	.LVL184:
 2296              	.LFB6293:
 114:fibre-cpp/include/fibre/callback.hpp ****     return MemCb::with(obj);
ARM GAS  /tmp/ccrmmslP.s 			page 78


 2297              		.loc 3 114 22 is_stmt 1 view -0
 2298              		.cfi_startproc
 2299              		@ args = 0, pretend = 0, frame = 0
 2300              		@ frame_needed = 0, uses_anonymous_args = 0
 2301              		@ link register save eliminated.
 2302              	.LBB771:
 2303              	.LBI771:
 104:fibre-cpp/include/fibre/callback.hpp ****         return cb_t{[](void* obj, TArgs... arg) {
 2304              		.loc 3 104 17 view .LVU531
 2305              	.LBB772:
 2306              	.LBB773:
 2307              	.LBI773:
  22:fibre-cpp/include/fibre/callback.hpp ****         cb_(callback), ctx_(ctx) {}
 2308              		.loc 3 22 5 view .LVU532
 2309              	.LBB774:
  23:fibre-cpp/include/fibre/callback.hpp **** 
 2310              		.loc 3 23 32 is_stmt 0 view .LVU533
 2311 0000 014A     		ldr	r2, .L108
 2312 0002 0260     		str	r2, [r0]
 2313 0004 4160     		str	r1, [r0, #4]
 2314              	.LVL185:
  23:fibre-cpp/include/fibre/callback.hpp **** 
 2315              		.loc 3 23 32 view .LVU534
 2316              	.LBE774:
 2317              	.LBE773:
 2318              	.LBE772:
 2319              	.LBE771:
 2320              		.loc 3 116 1 view .LVU535
 2321 0006 7047     		bx	lr
 2322              	.L109:
 2323              		.align	2
 2324              	.L108:
 2325 0008 00000000 		.word	_ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_Z
 2326              		.cfi_endproc
 2327              	.LFE6293:
 2328              		.cantunwind
 2329              		.fnend
 2331              		.section	.text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEE
 2332              		.align	1
 2333              		.weak	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8Cal
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2338              	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIv
 2339              		.fnstart
 2340              	.LVL186:
 2341              	.LFB6278:
 106:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 2342              		.loc 7 106 10 is_stmt 1 view -0
 2343              		.cfi_startproc
 2344              		@ args = 4, pretend = 0, frame = 32
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 106:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 2346              		.loc 7 106 10 is_stmt 0 view .LVU537
 2347 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2348              		.save {r4, r5, r6, r7, r8, lr}
 2349              	.LCFI32:
ARM GAS  /tmp/ccrmmslP.s 			page 79


 2350              		.cfi_def_cfa_offset 24
 2351              		.cfi_offset 4, -24
 2352              		.cfi_offset 5, -20
 2353              		.cfi_offset 6, -16
 2354              		.cfi_offset 7, -12
 2355              		.cfi_offset 8, -8
 2356              		.cfi_offset 14, -4
 2357              		.pad #40
 2358 0004 8AB0     		sub	sp, sp, #40
 2359              	.LCFI33:
 2360              		.cfi_def_cfa_offset 64
 2361 0006 0446     		mov	r4, r0
 2362 0008 02A8     		add	r0, sp, #8
 2363              	.LVL187:
 106:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 2364              		.loc 7 106 10 view .LVU538
 2365 000a 80E80600 		stm	r0, {r1, r2}
 2366 000e 109E     		ldr	r6, [sp, #64]
 2367              	.LVL188:
 2368              	.LBB775:
 107:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2369              		.loc 7 107 21 view .LVU539
 2370 0010 4FF0000C 		mov	ip, #0
 2371              	.LVL189:
 2372              	.L116:
 107:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2373              		.loc 7 107 30 is_stmt 1 discriminator 1 view .LVU540
 2374 0014 BCF1010F 		cmp	ip, #1
 2375 0018 3CD8     		bhi	.L111
 2376              	.LBB776:
 108:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (!__atomic_exchange_n(&slot_in_use, true, __ATOMIC_SEQ_CST)) {
 2377              		.loc 7 108 19 is_stmt 0 view .LVU541
 2378 001a 0CEB8C02 		add	r2, ip, ip, lsl #2
 2379 001e 9200     		lsls	r2, r2, #2
 2380 0020 0832     		adds	r2, r2, #8
 2381 0022 2244     		add	r2, r2, r4
 2382              	.LVL190:
 2383              	.LBB777:
 2384              	.LBI777:
 625:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 626:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited() { }
 627:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 628:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Dummy = void,
 629:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitDefaultCtor<is_void<_Dummy>::value> = false>
 630:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 631:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple()
 632:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 633:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited() { }
 634:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 635:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
 636:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 637:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 638:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const _Elements&... __elements)
 639:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 640:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__elements...) { }
 641:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 642:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
ARM GAS  /tmp/ccrmmslP.s 			page 80


 643:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 644:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 645:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const _Elements&... __elements)
 646:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 647:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__elements...) { }
 648:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 649:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 650:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 651:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 652:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 653:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(_UElements&&... __elements)
 654:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 655:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) { }
 656:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 657:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 658:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 659:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 660:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 661:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(_UElements&&... __elements)
 662:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 663:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) {	}
 664:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 665:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr tuple(const tuple&) = default;
 666:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 667:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr tuple(tuple&&) = default;
 668:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 669:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 670:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 671:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 672:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 673:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 674:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const tuple<_UElements...>& __in)
 675:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 676:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 677:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 678:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 679:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 680:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 681:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 682:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 683:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 684:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const tuple<_UElements...>& __in)
 685:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 686:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 687:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 688:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 689:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 690:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 691:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 692:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 693:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 694:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(tuple<_UElements...>&& __in)
 695:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 696:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 697:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 698:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements,
 699:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
ARM GAS  /tmp/ccrmmslP.s 			page 81


 700:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 701:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 702:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 703:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(tuple<_UElements...>&& __in)
 704:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 705:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 706:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 707:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Allocator-extended constructors.
 708:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 709:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc,
 710:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitDefaultCtor<is_object<_Alloc>::value> = true>
 711:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 712:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
 713:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a) { }
 714:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 715:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 716:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 717:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 718:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 719:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const _Elements&... __elements)
 720:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 721:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 722:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 723:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 724:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 725:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
 726:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 727:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const _Elements&... __elements)
 728:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 729:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 730:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 731:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 732:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 733:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 734:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 735:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      _UElements&&... __elements)
 736:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 737:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 738:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 739:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 740:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		 bool _Valid = __valid_args<_UElements...>(),
 741:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 742:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 743:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
 744:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 745:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      _UElements&&... __elements)
 746:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 747:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 748:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 749:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 750:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 751:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
 752:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
 753:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 754:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 755:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 756:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
ARM GAS  /tmp/ccrmmslP.s 			page 82


 757:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
 758:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 759:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 760:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 761:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 762:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 763:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 764:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 765:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const tuple<_UElements...>& __in)
 766:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
 767:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 768:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 769:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 770:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 771:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 772:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 773:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 774:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 775:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
 776:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 777:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const tuple<_UElements...>& __in)
 778:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
 779:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 780:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 781:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 782:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 783:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 784:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 785:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 786:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 787:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 788:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      tuple<_UElements...>&& __in)
 789:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
 790:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 791:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 792:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 793:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename... _UElements,
 794:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 795:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 796:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 797:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 798:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
 799:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 800:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      tuple<_UElements...>&& __in)
 801:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
 802:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 803:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
 804:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 805:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // tuple assignment
 806:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 807:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 808:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       tuple&
 809:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       operator=(typename conditional<__assignable<const _Elements&...>(),
 810:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     const tuple&,
 811:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     const __nonesuch&>::type __in)
 812:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__nothrow_assignable<const _Elements&...>())
 813:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
ARM GAS  /tmp/ccrmmslP.s 			page 83


 814:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	this->_M_assign(__in);
 815:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return *this;
 816:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 817:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 818:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 819:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       tuple&
 820:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       operator=(typename conditional<__assignable<_Elements...>(),
 821:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     tuple&&,
 822:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     __nonesuch&&>::type __in)
 823:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__nothrow_assignable<_Elements...>())
 824:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 825:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	this->_M_assign(std::move(__in));
 826:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return *this;
 827:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 828:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 829:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 830:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 831:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<const _UElements&...>(), tuple&>
 832:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(const tuple<_UElements...>& __in)
 833:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<const _UElements&...>())
 834:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 835:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_assign(__in);
 836:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
 837:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 838:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 839:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename... _UElements>
 840:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 841:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<_UElements...>(), tuple&>
 842:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(tuple<_UElements...>&& __in)
 843:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<_UElements...>())
 844:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 845:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_assign(std::move(__in));
 846:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
 847:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 848:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 849:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // tuple swap
 850:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
 851:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       void
 852:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       swap(tuple& __in)
 853:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__and_<__is_nothrow_swappable<_Elements>...>::value)
 854:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       { _Inherited::_M_swap(__in); }
 855:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 856:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 857:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #if __cpp_deduction_guides >= 201606
 858:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename... _UTypes>
 859:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     tuple(_UTypes...) -> tuple<_UTypes...>;
 860:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _T1, typename _T2>
 861:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     tuple(pair<_T1, _T2>) -> tuple<_T1, _T2>;
 862:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Alloc, typename... _UTypes>
 863:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     tuple(allocator_arg_t, _Alloc, _UTypes...) -> tuple<_UTypes...>;
 864:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Alloc, typename _T1, typename _T2>
 865:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     tuple(allocator_arg_t, _Alloc, pair<_T1, _T2>) -> tuple<_T1, _T2>;
 866:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Alloc, typename... _UTypes>
 867:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     tuple(allocator_arg_t, _Alloc, tuple<_UTypes...>) -> tuple<_UTypes...>;
 868:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #endif
 869:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 870:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   // Explicit specialization, zero-element tuple.
ARM GAS  /tmp/ccrmmslP.s 			page 84


 871:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<>
 872:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     class tuple<>
 873:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 874:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     public:
 875:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       void swap(tuple&) noexcept { /* no-op */ }
 876:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // We need the default since we're going to define no-op
 877:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // allocator constructors.
 878:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       tuple() = default;
 879:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // No-op allocator constructors.
 880:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 881:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 882:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t, const _Alloc&) noexcept { }
 883:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
 884:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
 885:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t, const _Alloc&, const tuple&) noexcept { }
 886:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
 887:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 888:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /// Partial specialization, 2-element tuple.
 889:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /// Includes construction and assignment from a pair.
 890:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _T1, typename _T2>
 891:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>
 892:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
 893:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Tuple_impl<0, _T1, _T2> _Inherited;
 894:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 895:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit default constructor
 896:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 897:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 898:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 899:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    __is_implicitly_default_constructible(),
 900:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 901:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 902:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for explicit default constructor
 903:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 904:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 905:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 906:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	    __is_explicitly_default_constructible(),
 907:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 908:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 909:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy>
 910:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _TCC = _TupleConstraints<_Dummy, _T1, _T2>;
 911:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 912:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit constructors
 913:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Cond, typename _U1, typename _U2>
 914:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ImplicitCtor = __enable_if_t<
 915:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_U1, _U2>(),
 916:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 917:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 918:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Constraint for non-explicit constructors
 919:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Cond, typename _U1, typename _U2>
 920:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	using _ExplicitCtor = __enable_if_t<
 921:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_U1, _U2>(),
 922:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  bool>;
 923:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 924:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
 925:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __assignable()
 926:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 927:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return __and_<is_assignable<_T1&, _U1>,
ARM GAS  /tmp/ccrmmslP.s 			page 85


 928:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			is_assignable<_T2&, _U2>>::value;
 929:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 930:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 931:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
 932:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __nothrow_assignable()
 933:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 934:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return __and_<is_nothrow_assignable<_T1&, _U1>,
 935:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			is_nothrow_assignable<_T2&, _U2>>::value;
 936:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 937:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 938:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
 939:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __nothrow_constructible()
 940:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
 941:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return __and_<is_nothrow_constructible<_T1, _U1>,
 942:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 			    is_nothrow_constructible<_T2, _U2>>::value;
 943:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
 944:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 945:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static constexpr bool __nothrow_default_constructible()
 946:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
 947:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return __and_<is_nothrow_default_constructible<_T1>,
 948:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		      is_nothrow_default_constructible<_T2>>::value;
 949:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
 950:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 951:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1>
 952:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	static constexpr bool __is_alloc_arg()
 953:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ return is_same<__remove_cvref_t<_U1>, allocator_arg_t>::value; }
 954:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 955:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     public:
 956:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy = true,
 957:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
 958:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 959:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple()
 960:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_default_constructible())
 961:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited() { }
 962:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 963:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy = true,
 964:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitDefaultCtor<_Dummy, _T1, _T2> = false>
 965:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 966:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple()
 967:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_default_constructible())
 968:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited() { }
 969:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 970:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy = true,
 971:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Dummy, const _T1&, const _T2&> = true>
 972:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 973:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
 974:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
 975:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__a1, __a2) { }
 976:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 977:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<bool _Dummy = true,
 978:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Dummy, const _T1&, const _T2&> = false>
 979:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 980:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
 981:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
 982:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__a1, __a2) { }
 983:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 984:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
ARM GAS  /tmp/ccrmmslP.s 			page 86


 985:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = true>
 986:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
 987:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
 988:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
 989:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 990:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 991:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
 992:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = false>
 993:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
 994:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
 995:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
 996:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 997:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 998:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr tuple(const tuple&) = default;
 999:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1000:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       constexpr tuple(tuple&&) = default;
1001:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1002:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1003:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1004:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
1005:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const tuple<_U1, _U2>& __in)
1006:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1007:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
1008:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1009:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1010:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1011:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
1012:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const tuple<_U1, _U2>& __in)
1013:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1014:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
1015:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1016:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1017:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1018:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
1019:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(tuple<_U1, _U2>&& __in)
1020:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1021:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
1022:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1023:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1024:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1025:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
1026:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(tuple<_U1, _U2>&& __in)
1027:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1028:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
1029:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1030:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1031:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1032:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
1033:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const pair<_U1, _U2>& __in)
1034:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1035:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__in.first, __in.second) { }
1036:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1037:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1038:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1039:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
1040:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(const pair<_U1, _U2>& __in)
1041:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
ARM GAS  /tmp/ccrmmslP.s 			page 87


1042:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__in.first, __in.second) { }
1043:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1044:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1045:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1046:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	constexpr
1047:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(pair<_U1, _U2>&& __in)
1048:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1049:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1050:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     std::forward<_U2>(__in.second)) { }
1051:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1052:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2,
1053:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1054:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit constexpr
1055:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(pair<_U1, _U2>&& __in)
1056:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1057:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1058:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     std::forward<_U2>(__in.second)) { }
1059:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1060:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Allocator-extended constructors.
1061:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1062:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc,
1063:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitDefaultCtor<is_object<_Alloc>::value, _T1, _T2> = true>
1064:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1065:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
1066:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a) { }
1067:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1068:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, bool _Dummy = true,
1069:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<_Dummy, const _T1&, const _T2&> = true>
1070:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1071:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1072:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const _T1& __a1, const _T2& __a2)
1073:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1074:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1075:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, bool _Dummy = true,
1076:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<_Dummy, const _T1&, const _T2&> = false>
1077:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1078:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1079:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1080:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const _T1& __a1, const _T2& __a2)
1081:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1082:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1083:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1084:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1085:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1086:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
1087:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1088:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             std::forward<_U2>(__a2)) { }
1089:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1090:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1091:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1092:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1093:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1094:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1095:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      _U1&& __a1, _U2&& __a2)
1096:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1097:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             std::forward<_U2>(__a2)) { }
1098:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
ARM GAS  /tmp/ccrmmslP.s 			page 88


1099:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
1100:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1101:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
1102:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
1103:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1104:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc>
1105:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1106:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
1107:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
1108:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1109:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1110:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1111:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1112:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1113:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const tuple<_U1, _U2>& __in)
1114:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
1115:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1116:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
1117:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1118:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1119:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1120:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1121:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1122:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1123:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const tuple<_U1, _U2>& __in)
1124:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a,
1125:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1126:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
1127:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1128:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1129:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1130:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1131:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1132:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1133:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
1134:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1135:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1136:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1137:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1138:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1139:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1140:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1141:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{ }
1142:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1143:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1144:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1145:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1146:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1147:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const pair<_U1, _U2>& __in)
1148:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1149:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1150:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1151:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1152:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1153:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1154:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1155:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	      const pair<_U1, _U2>& __in)
ARM GAS  /tmp/ccrmmslP.s 			page 89


1156:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1157:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1158:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1159:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1160:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1161:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1162:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1163:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     std::forward<_U2>(__in.second)) { }
1164:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1165:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1167:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	explicit
1168:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1169:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1170:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1171:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		     std::forward<_U2>(__in.second)) { }
1172:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1173:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       // Tuple assignment.
1174:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1175:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
1176:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       tuple&
1177:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),
1178:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     const tuple&,
1179:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     const __nonesuch&>::type __in)
1180:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__nothrow_assignable<const _T1&, const _T2&>())
1181:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
1182:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	this->_M_assign(__in);
1183:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return *this;
1184:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
1185:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1186:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
1187:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       tuple&
1188:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       operator=(typename conditional<__assignable<_T1, _T2>(),
1189:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     tuple&&,
1190:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 				     __nonesuch&&>::type __in)
1191:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__nothrow_assignable<_T1, _T2>())
1192:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       {
1193:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	this->_M_assign(std::move(__in));
1194:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	return *this;
1195:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       }
1196:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1197:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
1198:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1199:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
1200:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(const tuple<_U1, _U2>& __in)
1201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
1202:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
1203:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_assign(__in);
1204:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
1205:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
1206:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1207:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
1208:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1209:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
1210:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(tuple<_U1, _U2>&& __in)
1211:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<_U1, _U2>())
1212:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
ARM GAS  /tmp/ccrmmslP.s 			page 90


1213:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_assign(std::move(__in));
1214:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
1215:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
1216:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1217:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
1218:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1219:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
1220:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(const pair<_U1, _U2>& __in)
1221:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
1222:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
1223:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_head(*this) = __in.first;
1224:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_tail(*this)._M_head(*this) = __in.second;
1225:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
1226:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
1227:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1228:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       template<typename _U1, typename _U2>
1229:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	_GLIBCXX20_CONSTEXPR
1230:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
1231:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	operator=(pair<_U1, _U2>&& __in)
1232:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	noexcept(__nothrow_assignable<_U1, _U2>())
1233:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	{
1234:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_head(*this) = std::forward<_U1>(__in.first);
1235:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
1236:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  return *this;
1237:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	}
1238:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1239:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       _GLIBCXX20_CONSTEXPR
1240:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       void
1241:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       swap(tuple& __in)
1242:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       noexcept(__and_<__is_nothrow_swappable<_T1>,
1243:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 		      __is_nothrow_swappable<_T2>>::value)
1244:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       { _Inherited::_M_swap(__in); }
1245:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
1246:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1247:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1248:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /// class tuple_size
1249:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename... _Elements>
1250:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct tuple_size<tuple<_Elements...>>
1251:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
1252:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1253:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #if __cplusplus > 201402L
1254:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template <typename _Tp>
1255:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     inline constexpr size_t tuple_size_v = tuple_size<_Tp>::value;
1256:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** #endif
1257:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1258:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
1259:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * Recursive case for tuple_element: strip off the first element in
1260:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * the tuple and retrieve the (i-1)th element of the remaining tuple.
1261:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
1262:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1263:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct tuple_element<__i, tuple<_Head, _Tail...> >
1264:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     : tuple_element<__i - 1, tuple<_Tail...> > { };
1265:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1266:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
1267:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * Basis case for tuple_element: The first element is the one we're seeking.
1268:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
1269:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<typename _Head, typename... _Tail>
ARM GAS  /tmp/ccrmmslP.s 			page 91


1270:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct tuple_element<0, tuple<_Head, _Tail...> >
1271:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
1272:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       typedef _Head type;
1273:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
1274:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1275:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /**
1276:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    * Error case for tuple_element: invalid index.
1277:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****    */
1278:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<size_t __i>
1279:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     struct tuple_element<__i, tuple<>>
1280:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     {
1281:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****       static_assert(__i < tuple_size<tuple<>>::value,
1282:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 	  "tuple index is in range");
1283:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     };
1284:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1285:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1286:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     constexpr _Head&
1287:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1288:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1289:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1290:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1291:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     constexpr const _Head&
1292:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1293:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1294:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
1295:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   /// Return a reference to the ith element of a tuple.
1296:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****   template<std::size_t __i, typename... _Elements>
1297:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&
1298:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     get(tuple<_Elements...>& __t) noexcept
 2385              		.loc 8 1298 5 is_stmt 1 view .LVU542
 2386              	.LBB778:
 2387              	.LBI778:
1287:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 2388              		.loc 8 1287 5 view .LVU543
 2389              	.LBB779:
 2390              	.LBI779:
 201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2391              		.loc 8 201 7 view .LVU544
 2392              	.LBB780:
 2393              	.LBI780:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2394              		.loc 8 166 7 view .LVU545
 2395              	.LBB781:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2396              		.loc 8 166 54 is_stmt 0 view .LVU546
 2397 0024 02F11000 		add	r0, r2, #16
 2398              	.LVL191:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2399              		.loc 8 166 54 view .LVU547
 2400              	.LBE781:
 2401              	.LBE780:
 2402              	.LBE779:
 2403              	.LBE778:
 2404              	.LBE777:
 2405              	.LBB782:
 2406              	.LBI782:
 2407              		.loc 8 1298 5 is_stmt 1 view .LVU548
ARM GAS  /tmp/ccrmmslP.s 			page 92


 2408              	.LBB783:
 2409              	.LBI783:
1287:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 2410              		.loc 8 1287 5 view .LVU549
 2411              	.LBB784:
 2412              	.LBI784:
 201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2413              		.loc 8 201 7 view .LVU550
 2414              	.LBB785:
 2415              	.LBI785:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2416              		.loc 8 166 7 view .LVU551
 2417              	.LBB786:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2418              		.loc 8 166 54 is_stmt 0 view .LVU552
 2419 0028 02F10805 		add	r5, r2, #8
 2420              	.LVL192:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2421              		.loc 8 166 54 view .LVU553
 2422              	.LBE786:
 2423              	.LBE785:
 2424              	.LBE784:
 2425              	.LBE783:
 2426              	.LBE782:
 109:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_buf = buffer;
 2427              		.loc 7 109 37 view .LVU554
 2428 002c 4FF0010E 		mov	lr, #1
 2429 0030 BFF35B8F 		dmb	ish
 2430              	.L119:
 2431 0034 D0E84F1F 		ldrexb	r1, [r0]
 2432 0038 C0E847EF 		strexb	r7, lr, [r0]
 2433 003c 002F     		cmp	r7, #0
 2434 003e F9D1     		bne	.L119
 2435 0040 BFF35B8F 		dmb	ish
 2436 0044 C9B2     		uxtb	r1, r1
 109:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_buf = buffer;
 2437              		.loc 7 109 13 view .LVU555
 2438 0046 11B1     		cbz	r1, .L121
 2439              	.LBE776:
 107:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2440              		.loc 7 107 9 is_stmt 1 discriminator 2 view .LVU556
 2441 0048 0CF1010C 		add	ip, ip, #1
 2442              	.LVL193:
 107:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2443              		.loc 7 107 9 is_stmt 0 discriminator 2 view .LVU557
 2444 004c E2E7     		b	.L116
 2445              	.L121:
 2446              	.LBB787:
 110:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_completer = completer;
 2447              		.loc 7 110 17 view .LVU558
 2448 004e AE46     		mov	lr, r5
 2449 0050 02A9     		add	r1, sp, #8
 2450 0052 03C9     		ldm	r1, {r0, r1}
 2451              	.LVL194:
 110:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 slot_completer = completer;
 2452              		.loc 7 110 17 view .LVU559
 2453 0054 C5E90001 		strd	r0, r1, [r5]
ARM GAS  /tmp/ccrmmslP.s 			page 93


 111:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 2454              		.loc 7 111 17 view .LVU560
 2455 0058 96E80300 		ldm	r6, {r0, r1}
 2456 005c 82E80300 		stm	r2, {r0, r1}
 113:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     *handle = i + 1; // returning a valid handle of 0 is not a good idea
 2457              		.loc 7 113 17 view .LVU561
 2458 0060 13B1     		cbz	r3, .L113
 114:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 2459              		.loc 7 114 33 view .LVU562
 2460 0062 0CF10102 		add	r2, ip, #1
 2461              	.LVL195:
 114:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 2462              		.loc 7 114 29 view .LVU563
 2463 0066 1A60     		str	r2, [r3]
 2464              	.L113:
 118:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     active_slot_ = i + 1;
 2465              		.loc 7 118 21 view .LVU564
 2466 0068 236B     		ldr	r3, [r4, #48]
 2467              	.LVL196:
 118:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     active_slot_ = i + 1;
 2468              		.loc 7 118 17 view .LVU565
 2469 006a 3BBB     		cbnz	r3, .L110
 119:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     sink_.start_write(slot_buf, &transfer_handle_, MEMBER_CB(this, on_write_complet
 2470              		.loc 7 119 38 view .LVU566
 2471 006c 0CF10103 		add	r3, ip, #1
 119:fibre-cpp/include/fibre/../../stream_utils.hpp ****                     sink_.start_write(slot_buf, &transfer_handle_, MEMBER_CB(this, on_write_complet
 2472              		.loc 7 119 34 view .LVU567
 2473 0070 2363     		str	r3, [r4, #48]
 120:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 2474              		.loc 7 120 21 view .LVU568
 2475 0072 6668     		ldr	r6, [r4, #4]
 120:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 2476              		.loc 7 120 38 view .LVU569
 2477 0074 3368     		ldr	r3, [r6]
 2478 0076 D3F80080 		ldr	r8, [r3]
 2479 007a 06AF     		add	r7, sp, #24
 2480 007c 2146     		mov	r1, r4
 2481 007e 3846     		mov	r0, r7
 2482 0080 FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_1
 2483              	.LVL197:
 120:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 }
 2484              		.loc 7 120 38 view .LVU570
 2485 0084 0097     		str	r7, [sp]
 2486 0086 04F13403 		add	r3, r4, #52
 2487 008a 95E80600 		ldm	r5, {r1, r2}
 2488 008e 3046     		mov	r0, r6
 2489 0090 C047     		blx	r8
 2490              	.LVL198:
 123:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
 2491              		.loc 7 123 17 view .LVU571
 2492 0092 13E0     		b	.L110
 2493              	.LVL199:
 2494              	.L111:
 123:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
 2495              		.loc 7 123 17 view .LVU572
 2496              	.LBE787:
 2497              	.LBE775:
ARM GAS  /tmp/ccrmmslP.s 			page 94


 127:fibre-cpp/include/fibre/../../stream_utils.hpp ****             *handle = 0;
 2498              		.loc 7 127 9 view .LVU573
 2499 0094 0BB1     		cbz	r3, .L117
 128:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
 2500              		.loc 7 128 21 view .LVU574
 2501 0096 0022     		movs	r2, #0
 2502 0098 1A60     		str	r2, [r3]
 2503              	.L117:
 130:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
 2504              		.loc 7 130 25 view .LVU575
 2505 009a 0323     		movs	r3, #3
 2506              	.LVL200:
 130:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
 2507              		.loc 7 130 25 view .LVU576
 2508 009c 8DF82030 		strb	r3, [sp, #32]
 2509 00a0 029B     		ldr	r3, [sp, #8]
 2510 00a2 0993     		str	r3, [sp, #36]
 2511              	.LVL201:
 130:fibre-cpp/include/fibre/../../stream_utils.hpp ****     }
 2512              		.loc 7 130 25 view .LVU577
 2513 00a4 04AB     		add	r3, sp, #16
 2514 00a6 0AAA     		add	r2, sp, #40
 2515 00a8 12E90300 		ldmdb	r2, {r0, r1}
 2516 00ac 83E80300 		stm	r3, {r0, r1}
 2517              	.LBB788:
 2518              	.LBI788:
  59:fibre-cpp/include/fibre/callback.hpp ****         if (cb_) {
 2519              		.loc 3 59 10 is_stmt 1 view .LVU578
 2520              	.LBB789:
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 2521              		.loc 3 60 13 is_stmt 0 view .LVU579
 2522 00b0 3368     		ldr	r3, [r6]
  60:fibre-cpp/include/fibre/callback.hpp ****             return (*cb_)(ctx_, arg...);
 2523              		.loc 3 60 9 view .LVU580
 2524 00b2 1BB1     		cbz	r3, .L110
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 2525              		.loc 3 61 22 view .LVU581
 2526 00b4 04AA     		add	r2, sp, #16
 2527 00b6 06CA     		ldm	r2, {r1, r2}
 2528 00b8 7068     		ldr	r0, [r6, #4]
 2529 00ba 9847     		blx	r3
 2530              	.LVL202:
 2531              	.L110:
  61:fibre-cpp/include/fibre/callback.hpp ****         }
 2532              		.loc 3 61 22 view .LVU582
 2533              	.LBE789:
 2534              	.LBE788:
 131:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 2535              		.loc 7 131 5 view .LVU583
 2536 00bc 0AB0     		add	sp, sp, #40
 2537              	.LCFI34:
 2538              		.cfi_def_cfa_offset 24
 2539              		@ sp needed
 2540 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 131:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 2541              		.loc 7 131 5 view .LVU584
 2542              		.cfi_endproc
ARM GAS  /tmp/ccrmmslP.s 			page 95


 2543              	.LFE6278:
 2544              		.fnend
 2546              		.section	.text._ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResul
 2547              		.align	1
 2548              		.weak	_ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_Z
 2549              		.syntax unified
 2550              		.thumb
 2551              		.thumb_func
 2553              	_ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17o
 2554              		.fnstart
 2555              	.LFB6299:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2556              		.loc 3 105 21 is_stmt 1 view -0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 48
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2561              		.save {r4, r5, r6, r7, r8, lr}
 2562              	.LCFI35:
 2563              		.cfi_def_cfa_offset 24
 2564              		.cfi_offset 4, -24
 2565              		.cfi_offset 5, -20
 2566              		.cfi_offset 6, -16
 2567              		.cfi_offset 7, -12
 2568              		.cfi_offset 8, -8
 2569              		.cfi_offset 14, -4
 2570              		.pad #56
 2571 0004 8EB0     		sub	sp, sp, #56
 2572              	.LCFI36:
 2573              		.cfi_def_cfa_offset 80
 2574 0006 0546     		mov	r5, r0
 2575 0008 02A8     		add	r0, sp, #8
 2576 000a 80E80600 		stm	r0, {r1, r2}
 2577              	.LVL203:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2578              		.loc 3 105 21 is_stmt 0 view .LVU586
 2579 000e 04AB     		add	r3, sp, #16
 2580 0010 03C8     		ldm	r0, {r0, r1}
 2581 0012 83E80500 		stm	r3, {r0, r2}
 2582              	.LBB808:
 2583              	.LBI808:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2584              		.loc 3 105 21 is_stmt 1 view .LVU587
 2585              	.LVL204:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2586              		.loc 3 105 21 is_stmt 0 view .LVU588
 2587 0016 0DF1180C 		add	ip, sp, #24
 2588 001a 8CE80500 		stm	ip, {r0, r2}
 2589              	.LBB809:
 2590              	.LBB810:
 2591              	.LBI810:
 146:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 147:fibre-cpp/include/fibre/../../stream_utils.hpp **** private:
 148:fibre-cpp/include/fibre/../../stream_utils.hpp ****     void on_write_complete(fibre::WriteResult result) {
 2592              		.loc 7 148 10 is_stmt 1 view .LVU589
 2593              	.LBB811:
 149:fibre-cpp/include/fibre/../../stream_utils.hpp ****         transfer_handle_ = 0;
ARM GAS  /tmp/ccrmmslP.s 			page 96


 2594              		.loc 7 149 26 is_stmt 0 view .LVU590
 2595 001e 0024     		movs	r4, #0
 2596 0020 6C63     		str	r4, [r5, #52]
 150:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 151:fibre-cpp/include/fibre/../../stream_utils.hpp ****         auto& [slot_in_use, slot_buf, slot_completer] =  slots_[active_slot_ - 1];
 2597              		.loc 7 151 65 view .LVU591
 2598 0022 2B6B     		ldr	r3, [r5, #48]
 2599              		.loc 7 151 78 view .LVU592
 2600 0024 013B     		subs	r3, r3, #1
 2601              		.loc 7 151 15 view .LVU593
 2602 0026 03EB8303 		add	r3, r3, r3, lsl #2
 2603 002a 9B00     		lsls	r3, r3, #2
 2604 002c 0833     		adds	r3, r3, #8
 2605 002e E918     		adds	r1, r5, r3
 2606              	.LVL205:
 2607              	.LBB812:
 2608              	.LBI812:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2609              		.loc 3 37 5 is_stmt 1 view .LVU594
 2610              	.LBB813:
 2611              	.LBB814:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2612              		.loc 3 37 49 is_stmt 0 view .LVU595
 2613 0030 EB58     		ldr	r3, [r5, r3]
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2614              		.loc 3 37 70 view .LVU596
 2615 0032 0893     		str	r3, [sp, #32]
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2616              		.loc 3 37 66 view .LVU597
 2617 0034 4E68     		ldr	r6, [r1, #4]
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2618              		.loc 3 37 70 view .LVU598
 2619 0036 0996     		str	r6, [sp, #36]
 2620              	.LVL206:
  37:fibre-cpp/include/fibre/callback.hpp **** 
 2621              		.loc 3 37 70 view .LVU599
 2622              	.LBE814:
 2623              	.LBE813:
 2624              	.LBE812:
 152:fibre-cpp/include/fibre/../../stream_utils.hpp ****         (void) slot_buf;
 153:fibre-cpp/include/fibre/../../stream_utils.hpp ****         auto completer = slot_completer;
 154:fibre-cpp/include/fibre/../../stream_utils.hpp ****         slot_in_use = false;
 2625              		.loc 7 154 21 view .LVU600
 2626 0038 0C74     		strb	r4, [r1, #16]
 2627              	.LVL207:
 2628              		.loc 7 154 21 view .LVU601
 2629 003a 0DF1280E 		add	lr, sp, #40
 2630 003e 9CE80300 		ldm	ip, {r0, r1}
 2631              	.LVL208:
 2632              		.loc 7 154 21 view .LVU602
 2633 0042 8EE80500 		stm	lr, {r0, r2}
 2634              	.LBB815:
 2635              	.LBI815:
  66:fibre-cpp/include/fibre/callback.hpp ****         void* ctx = ctx_;
 2636              		.loc 3 66 10 is_stmt 1 view .LVU603
 2637              	.LVL209:
 2638              	.LBB816:
ARM GAS  /tmp/ccrmmslP.s 			page 97


  69:fibre-cpp/include/fibre/callback.hpp ****         cb_ = nullptr;
 2639              		.loc 3 69 14 is_stmt 0 view .LVU604
 2640 0046 0994     		str	r4, [sp, #36]
  70:fibre-cpp/include/fibre/callback.hpp ****         if (cb) {
 2641              		.loc 3 70 13 view .LVU605
 2642 0048 0894     		str	r4, [sp, #32]
  71:fibre-cpp/include/fibre/callback.hpp ****             return (*cb)(ctx, arg...);
 2643              		.loc 3 71 9 view .LVU606
 2644 004a 1BB1     		cbz	r3, .L123
  72:fibre-cpp/include/fibre/callback.hpp ****         }
 2645              		.loc 3 72 25 view .LVU607
 2646 004c DEE90012 		ldrd	r1, r2, [lr]
 2647 0050 3046     		mov	r0, r6
 2648 0052 9847     		blx	r3
 2649              	.LVL210:
 2650              	.L123:
  72:fibre-cpp/include/fibre/callback.hpp ****         }
 2651              		.loc 3 72 25 view .LVU608
 2652              	.LBE816:
 2653              	.LBE815:
 2654              	.LBB817:
 155:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 156:fibre-cpp/include/fibre/../../stream_utils.hpp ****         completer.invoke_and_clear(result);
 157:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 158:fibre-cpp/include/fibre/../../stream_utils.hpp ****         // Select new slot before announcing completion of the old
 159:fibre-cpp/include/fibre/../../stream_utils.hpp ****         size_t active_slot = 0;
 160:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 2655              		.loc 7 160 21 view .LVU609
 2656 0054 0023     		movs	r3, #0
 2657              	.LVL211:
 2658              	.L126:
 2659              		.loc 7 160 30 is_stmt 1 view .LVU610
 2660 0056 012B     		cmp	r3, #1
 2661 0058 0AD8     		bhi	.L128
 2662              	.LBB818:
 161:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2663              		.loc 7 161 19 is_stmt 0 view .LVU611
 2664 005a 03EB8302 		add	r2, r3, r3, lsl #2
 2665 005e 9200     		lsls	r2, r2, #2
 2666 0060 0832     		adds	r2, r2, #8
 2667 0062 2A44     		add	r2, r2, r5
 2668              	.LVL212:
 162:fibre-cpp/include/fibre/../../stream_utils.hpp ****             (void) slot_buf;
 163:fibre-cpp/include/fibre/../../stream_utils.hpp ****             (void) slot_completer;
 164:fibre-cpp/include/fibre/../../stream_utils.hpp ****             if (slot_in_use) {
 2669              		.loc 7 164 13 view .LVU612
 2670 0064 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 2671              	.LVL213:
 2672              		.loc 7 164 13 view .LVU613
 2673 0066 0AB9     		cbnz	r2, .L130
 2674              	.LBE818:
 160:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2675              		.loc 7 160 9 is_stmt 1 view .LVU614
 2676 0068 0133     		adds	r3, r3, #1
 2677              	.LVL214:
 160:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[i];
 2678              		.loc 7 160 9 is_stmt 0 view .LVU615
ARM GAS  /tmp/ccrmmslP.s 			page 98


 2679 006a F4E7     		b	.L126
 2680              	.LVL215:
 2681              	.L130:
 2682              	.LBB819:
 165:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 active_slot = i + 1;
 2683              		.loc 7 165 29 view .LVU616
 2684 006c 0133     		adds	r3, r3, #1
 2685              	.LVL216:
 166:fibre-cpp/include/fibre/../../stream_utils.hpp ****                 break;
 2686              		.loc 7 166 17 view .LVU617
 2687 006e 00E0     		b	.L124
 2688              	.LVL217:
 2689              	.L128:
 2690              		.loc 7 166 17 view .LVU618
 2691              	.LBE819:
 2692              	.LBE817:
 159:fibre-cpp/include/fibre/../../stream_utils.hpp ****         for (size_t i = 0; i < NSlots; ++i) {
 2693              		.loc 7 159 16 view .LVU619
 2694 0070 0023     		movs	r3, #0
 2695              	.LVL218:
 2696              	.L124:
 167:fibre-cpp/include/fibre/../../stream_utils.hpp ****             }
 168:fibre-cpp/include/fibre/../../stream_utils.hpp ****         }
 169:fibre-cpp/include/fibre/../../stream_utils.hpp **** 
 170:fibre-cpp/include/fibre/../../stream_utils.hpp ****         // Start next slot
 171:fibre-cpp/include/fibre/../../stream_utils.hpp ****         active_slot_ = active_slot;
 2697              		.loc 7 171 22 view .LVU620
 2698 0072 2B63     		str	r3, [r5, #48]
 2699              	.LBB820:
 172:fibre-cpp/include/fibre/../../stream_utils.hpp ****         if (active_slot) {
 2700              		.loc 7 172 9 view .LVU621
 2701 0074 13B9     		cbnz	r3, .L131
 2702              	.LVL219:
 2703              	.L122:
 2704              		.loc 7 172 9 view .LVU622
 2705              	.LBE820:
 2706              	.LBE811:
 2707              	.LBE810:
 2708              	.LBE809:
 2709              	.LBE808:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2710              		.loc 3 105 21 view .LVU623
 2711 0076 0EB0     		add	sp, sp, #56
 2712              	.LCFI37:
 2713              		.cfi_remember_state
 2714              		.cfi_def_cfa_offset 24
 2715              		@ sp needed
 2716 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2717              	.LVL220:
 2718              	.L131:
 2719              	.LCFI38:
 2720              		.cfi_restore_state
 2721              	.LBB831:
 2722              	.LBB830:
 2723              	.LBB829:
 2724              	.LBB828:
 2725              	.LBB827:
ARM GAS  /tmp/ccrmmslP.s 			page 99


 2726              	.LBB821:
 173:fibre-cpp/include/fibre/../../stream_utils.hpp ****             auto& [slot_in_use, slot_buf, slot_completer] = slots_[active_slot - 1];
 2727              		.loc 7 173 80 view .LVU624
 2728 007c 013B     		subs	r3, r3, #1
 2729              	.LVL221:
 2730              		.loc 7 173 19 view .LVU625
 2731 007e 03EB8303 		add	r3, r3, r3, lsl #2
 2732 0082 9C00     		lsls	r4, r3, #2
 2733 0084 0834     		adds	r4, r4, #8
 2734 0086 2C44     		add	r4, r4, r5
 2735              	.LVL222:
 2736              	.LBB822:
 2737              	.LBI822:
 2738              		.loc 8 1298 5 is_stmt 1 view .LVU626
 2739              	.LBB823:
 2740              	.LBI823:
1287:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 2741              		.loc 8 1287 5 view .LVU627
 2742              	.LBB824:
 2743              	.LBI824:
 201:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2744              		.loc 8 201 7 view .LVU628
 2745              	.LBB825:
 2746              	.LBI825:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2747              		.loc 8 166 7 view .LVU629
 2748              	.LBB826:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2749              		.loc 8 166 54 is_stmt 0 view .LVU630
 2750 0088 0834     		adds	r4, r4, #8
 2751              	.LVL223:
 166:/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/tuple **** 
 2752              		.loc 8 166 54 view .LVU631
 2753              	.LBE826:
 2754              	.LBE825:
 2755              	.LBE824:
 2756              	.LBE823:
 2757              	.LBE822:
 174:fibre-cpp/include/fibre/../../stream_utils.hpp ****             (void) slot_in_use;
 175:fibre-cpp/include/fibre/../../stream_utils.hpp ****             (void) slot_completer;
 176:fibre-cpp/include/fibre/../../stream_utils.hpp ****             sink_.start_write(slot_buf, &transfer_handle_, MEMBER_CB(this, on_write_complete));
 2758              		.loc 7 176 13 view .LVU632
 2759 008a 6E68     		ldr	r6, [r5, #4]
 2760              		.loc 7 176 30 view .LVU633
 2761 008c 3368     		ldr	r3, [r6]
 2762 008e D3F80080 		ldr	r8, [r3]
 2763 0092 0CAF     		add	r7, sp, #48
 2764 0094 2946     		mov	r1, r5
 2765 0096 3846     		mov	r0, r7
 2766 0098 FFF7FEFF 		bl	_ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_1
 2767              	.LVL224:
 2768              		.loc 7 176 30 view .LVU634
 2769 009c 0097     		str	r7, [sp]
 2770 009e 05F13403 		add	r3, r5, #52
 2771 00a2 94E80600 		ldm	r4, {r1, r2}
 2772 00a6 3046     		mov	r0, r6
 2773 00a8 C047     		blx	r8
ARM GAS  /tmp/ccrmmslP.s 			page 100


 2774              	.LVL225:
 2775              		.loc 7 176 30 view .LVU635
 2776              	.LBE821:
 2777              	.LBE827:
 2778              	.LBE828:
 2779              	.LBE829:
 2780              	.LBE830:
 2781              	.LBE831:
 105:fibre-cpp/include/fibre/callback.hpp ****             return (((TObj*)obj)->*func)(arg...);
 2782              		.loc 3 105 21 view .LVU636
 2783 00aa E4E7     		b	.L122
 2784              		.cfi_endproc
 2785              	.LFE6299:
 2786              		.fnend
 2788              		.section	.text._GLOBAL__sub_I_usb_thread,"ax",%progbits
 2789              		.align	1
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2794              	_GLOBAL__sub_I_usb_thread:
 2795              		.fnstart
 2796              	.LFB6301:
 2797              		.loc 1 237 1 is_stmt 1 view -0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801 0000 08B5     		push	{r3, lr}
 2802              	.LCFI39:
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 3, -8
 2805              		.cfi_offset 14, -4
 2806              		.loc 1 237 1 is_stmt 0 view .LVU638
 2807 0002 4FF6FF71 		movw	r1, #65535
 2808 0006 0120     		movs	r0, #1
 2809 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 2810              	.LVL226:
 2811 000c 08BD     		pop	{r3, pc}
 2812              		.cfi_endproc
 2813              	.LFE6301:
 2814              		.cantunwind
 2815              		.fnend
 2817              		.section	.init_array,"aw",%init_array
 2818              		.align	2
 2819 0000 00000000 		.word	_GLOBAL__sub_I_usb_thread(target1)
 2820              		.weak	_ZTSN5fibre17AsyncStreamSourceE
 2821              		.section	.rodata._ZTSN5fibre17AsyncStreamSourceE,"aG",%progbits,_ZTSN5fibre17AsyncStreamSourceE,co
 2822              		.align	2
 2825              	_ZTSN5fibre17AsyncStreamSourceE:
 2826 0000 4E356669 		.ascii	"N5fibre17AsyncStreamSourceE\000"
 2826      62726531 
 2826      37417379 
 2826      6E635374 
 2826      7265616D 
 2827              		.weak	_ZTIN5fibre17AsyncStreamSourceE
 2828              		.section	.rodata._ZTIN5fibre17AsyncStreamSourceE,"aG",%progbits,_ZTIN5fibre17AsyncStreamSourceE,co
 2829              		.align	2
 2832              	_ZTIN5fibre17AsyncStreamSourceE:
ARM GAS  /tmp/ccrmmslP.s 			page 101


 2833 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 2834 0004 00000000 		.word	_ZTSN5fibre17AsyncStreamSourceE
 2835              		.weak	_ZTSN5fibre15AsyncStreamSinkE
 2836              		.section	.rodata._ZTSN5fibre15AsyncStreamSinkE,"aG",%progbits,_ZTSN5fibre15AsyncStreamSinkE,comdat
 2837              		.align	2
 2840              	_ZTSN5fibre15AsyncStreamSinkE:
 2841 0000 4E356669 		.ascii	"N5fibre15AsyncStreamSinkE\000"
 2841      62726531 
 2841      35417379 
 2841      6E635374 
 2841      7265616D 
 2842              		.weak	_ZTIN5fibre15AsyncStreamSinkE
 2843              		.section	.rodata._ZTIN5fibre15AsyncStreamSinkE,"aG",%progbits,_ZTIN5fibre15AsyncStreamSinkE,comdat
 2844              		.align	2
 2847              	_ZTIN5fibre15AsyncStreamSinkE:
 2848 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 2849 0004 00000000 		.word	_ZTSN5fibre15AsyncStreamSinkE
 2850              		.global	_ZTSN5fibre16Stm32UsbTxStreamE
 2851              		.global	_ZTIN5fibre16Stm32UsbTxStreamE
 2852              		.global	_ZTSN5fibre16Stm32UsbRxStreamE
 2853              		.global	_ZTIN5fibre16Stm32UsbRxStreamE
 2854              		.weak	_ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE
 2855              		.section	.rodata._ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE,"aG",%progbits,_ZTSN5fibre26AsyncS
 2856              		.align	2
 2859              	_ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE:
 2860 0000 4E356669 		.ascii	"N5fibre26AsyncStreamSinkMultiplexerILj2EEE\000"
 2860      62726532 
 2860      36417379 
 2860      6E635374 
 2860      7265616D 
 2861              		.weak	_ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE
 2862              		.section	.rodata._ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE,"aG",%progbits,_ZTIN5fibre26AsyncS
 2863              		.align	2
 2866              	_ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE:
 2867 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 2868 0004 00000000 		.word	_ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE
 2869 0008 00000000 		.word	_ZTIN5fibre15AsyncStreamSinkE
 2870              		.weak	_ZTVN5fibre17AsyncStreamSourceE
 2871              		.section	.rodata._ZTVN5fibre17AsyncStreamSourceE,"aG",%progbits,_ZTVN5fibre17AsyncStreamSourceE,co
 2872              		.align	2
 2875              	_ZTVN5fibre17AsyncStreamSourceE:
 2876 0000 00000000 		.word	0
 2877 0004 00000000 		.word	_ZTIN5fibre17AsyncStreamSourceE
 2878 0008 00000000 		.word	__cxa_pure_virtual
 2879 000c 00000000 		.word	__cxa_pure_virtual
 2880              		.weak	_ZTVN5fibre15AsyncStreamSinkE
 2881              		.section	.rodata._ZTVN5fibre15AsyncStreamSinkE,"aG",%progbits,_ZTVN5fibre15AsyncStreamSinkE,comdat
 2882              		.align	2
 2885              	_ZTVN5fibre15AsyncStreamSinkE:
 2886 0000 00000000 		.word	0
 2887 0004 00000000 		.word	_ZTIN5fibre15AsyncStreamSinkE
 2888 0008 00000000 		.word	__cxa_pure_virtual
 2889 000c 00000000 		.word	__cxa_pure_virtual
 2890              		.global	_ZTVN5fibre16Stm32UsbTxStreamE
 2891              		.global	_ZTVN5fibre16Stm32UsbRxStreamE
 2892              		.weak	_ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE
 2893              		.section	.rodata._ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE,"aG",%progbits,_ZTVN5fibre26AsyncS
ARM GAS  /tmp/ccrmmslP.s 			page 102


 2894              		.align	2
 2897              	_ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE:
 2898 0000 00000000 		.word	0
 2899 0004 00000000 		.word	_ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE
 2900 0008 00000000 		.word	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8Cal
 2901 000c 00000000 		.word	_ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj
 2902              		.global	usb_cdc_stdout_pending
 2903              		.global	ascii_over_cdc
 2904              		.global	usb_cdc_stdout_sink
 2905              		.global	usb_cdc_tx_multiplexer
 2906              		.global	fibre_over_usb
 2907              		.global	fibre_over_cdc
 2908              		.global	usb_native_rx_stream
 2909              		.global	usb_cdc_rx_stream
 2910              		.global	usb_native_tx_stream
 2911              		.global	usb_cdc_tx_stream
 2912              		.global	usb_stats_
 2913              		.global	stack_size_usb_thread
 2914              		.global	usb_thread
 2915              		.section	.rodata
 2916              		.align	2
 2917              		.set	.LANCHOR11,. + 0
 2918              	.LC2:
 2919 0000 00000000 		.word	.LC0
 2920 0004 00000000 		.word	_ZL17usb_server_threadPv
 2921 0008 0000     		.short	0
 2922 000a 0000     		.space	2
 2923 000c 00000000 		.word	0
 2924 0010 00040000 		.word	1024
 2925              		.section	.bss.ascii_over_cdc,"aw",%nobits
 2926              		.align	2
 2927              		.set	.LANCHOR10,. + 0
 2930              	ascii_over_cdc:
 2931 0000 00000000 		.space	800
 2931      00000000 
 2931      00000000 
 2931      00000000 
 2931      00000000 
 2932              		.section	.bss.fibre_over_cdc,"aw",%nobits
 2933              		.align	2
 2934              		.set	.LANCHOR7,. + 0
 2937              	fibre_over_cdc:
 2938 0000 00000000 		.space	376
 2938      00000000 
 2938      00000000 
 2938      00000000 
 2938      00000000 
 2939              		.section	.bss.fibre_over_usb,"aw",%nobits
 2940              		.align	2
 2941              		.set	.LANCHOR8,. + 0
 2944              	fibre_over_usb:
 2945 0000 00000000 		.space	288
 2945      00000000 
 2945      00000000 
 2945      00000000 
 2945      00000000 
 2946              		.section	.bss.usb_cdc_rx_stream,"aw",%nobits
ARM GAS  /tmp/ccrmmslP.s 			page 103


 2947              		.align	2
 2948              		.set	.LANCHOR4,. + 0
 2951              	usb_cdc_rx_stream:
 2952 0000 00000000 		.space	20
 2952      00000000 
 2952      00000000 
 2952      00000000 
 2952      00000000 
 2953              		.section	.bss.usb_cdc_stdout_pending,"aw",%nobits
 2954              		.set	.LANCHOR14,. + 0
 2957              	usb_cdc_stdout_pending:
 2958 0000 00       		.space	1
 2959              		.section	.bss.usb_cdc_stdout_sink,"aw",%nobits
 2960              		.align	2
 2961              		.set	.LANCHOR9,. + 0
 2964              	usb_cdc_stdout_sink:
 2965 0000 00000000 		.space	84
 2965      00000000 
 2965      00000000 
 2965      00000000 
 2965      00000000 
 2966              		.section	.bss.usb_cdc_tx_multiplexer,"aw",%nobits
 2967              		.align	2
 2968              		.set	.LANCHOR0,. + 0
 2971              	usb_cdc_tx_multiplexer:
 2972 0000 00000000 		.space	56
 2972      00000000 
 2972      00000000 
 2972      00000000 
 2972      00000000 
 2973              		.section	.bss.usb_cdc_tx_stream,"aw",%nobits
 2974              		.align	2
 2975              		.set	.LANCHOR1,. + 0
 2978              	usb_cdc_tx_stream:
 2979 0000 00000000 		.space	20
 2979      00000000 
 2979      00000000 
 2979      00000000 
 2979      00000000 
 2980              		.section	.bss.usb_native_rx_stream,"aw",%nobits
 2981              		.align	2
 2982              		.set	.LANCHOR6,. + 0
 2985              	usb_native_rx_stream:
 2986 0000 00000000 		.space	20
 2986      00000000 
 2986      00000000 
 2986      00000000 
 2986      00000000 
 2987              		.section	.bss.usb_native_tx_stream,"aw",%nobits
 2988              		.align	2
 2989              		.set	.LANCHOR3,. + 0
 2992              	usb_native_tx_stream:
 2993 0000 00000000 		.space	20
 2993      00000000 
 2993      00000000 
 2993      00000000 
 2993      00000000 
ARM GAS  /tmp/ccrmmslP.s 			page 104


 2994              		.section	.bss.usb_stats_,"aw",%nobits
 2995              		.align	2
 2996              		.set	.LANCHOR13,. + 0
 2999              	usb_stats_:
 3000 0000 00000000 		.space	12
 3000      00000000 
 3000      00000000 
 3001              		.section	.bss.usb_thread,"aw",%nobits
 3002              		.align	2
 3003              		.set	.LANCHOR12,. + 0
 3006              	usb_thread:
 3007 0000 00000000 		.space	4
 3008              		.section	.rodata._ZTIN5fibre16Stm32UsbRxStreamE,"a"
 3009              		.align	2
 3012              	_ZTIN5fibre16Stm32UsbRxStreamE:
 3013 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 3014 0004 00000000 		.word	_ZTSN5fibre16Stm32UsbRxStreamE
 3015 0008 00000000 		.word	_ZTIN5fibre17AsyncStreamSourceE
 3016              		.section	.rodata._ZTIN5fibre16Stm32UsbTxStreamE,"a"
 3017              		.align	2
 3020              	_ZTIN5fibre16Stm32UsbTxStreamE:
 3021 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 3022 0004 00000000 		.word	_ZTSN5fibre16Stm32UsbTxStreamE
 3023 0008 00000000 		.word	_ZTIN5fibre15AsyncStreamSinkE
 3024              		.section	.rodata._ZTSN5fibre16Stm32UsbRxStreamE,"a"
 3025              		.align	2
 3028              	_ZTSN5fibre16Stm32UsbRxStreamE:
 3029 0000 4E356669 		.ascii	"N5fibre16Stm32UsbRxStreamE\000"
 3029      62726531 
 3029      3653746D 
 3029      33325573 
 3029      62527853 
 3030              		.section	.rodata._ZTSN5fibre16Stm32UsbTxStreamE,"a"
 3031              		.align	2
 3034              	_ZTSN5fibre16Stm32UsbTxStreamE:
 3035 0000 4E356669 		.ascii	"N5fibre16Stm32UsbTxStreamE\000"
 3035      62726531 
 3035      3653746D 
 3035      33325573 
 3035      62547853 
 3036              		.section	.rodata._ZTVN5fibre16Stm32UsbRxStreamE,"a"
 3037              		.align	2
 3038              		.set	.LANCHOR5,. + 0
 3041              	_ZTVN5fibre16Stm32UsbRxStreamE:
 3042 0000 00000000 		.word	0
 3043 0004 00000000 		.word	_ZTIN5fibre16Stm32UsbRxStreamE
 3044 0008 00000000 		.word	_ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadR
 3045 000c 00000000 		.word	_ZN5fibre16Stm32UsbRxStream11cancel_readEj
 3046              		.section	.rodata._ZTVN5fibre16Stm32UsbTxStreamE,"a"
 3047              		.align	2
 3048              		.set	.LANCHOR2,. + 0
 3051              	_ZTVN5fibre16Stm32UsbTxStreamE:
 3052 0000 00000000 		.word	0
 3053 0004 00000000 		.word	_ZTIN5fibre16Stm32UsbTxStreamE
 3054 0008 00000000 		.word	_ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11Wri
 3055 000c 00000000 		.word	_ZN5fibre16Stm32UsbTxStream12cancel_writeEj
 3056              		.section	.rodata.stack_size_usb_thread,"a"
ARM GAS  /tmp/ccrmmslP.s 			page 105


 3057              		.align	2
 3060              	stack_size_usb_thread:
 3061 0000 00100000 		.word	4096
 3062              		.text
 3063              	.Letext0:
 3064              		.file 10 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 3065              		.file 11 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 3066              		.file 12 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 3067              		.file 13 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/stdint.h"
 3068              		.file 14 "ThirdParty/FreeRTOS/Source/include/task.h"
 3069              		.file 15 "ThirdParty/FreeRTOS/Source/include/queue.h"
 3070              		.file 16 "ThirdParty/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 3071              		.file 17 "communication/interface_usb.h"
 3072              		.file 18 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cstdlib"
 3073              		.file 19 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 3074              		.file 20 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/cpp_type_traits.h"
 3075              		.file 21 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/type_traits"
 3076              		.file 22 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+fp/har
 3077              		.file 23 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 3078              		.file 24 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 3079              		.file 25 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/uses_allocator.h"
 3080              		.file 26 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 3081              		.file 27 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/stl_vector.h"
 3082              		.file 28 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 3083              		.file 29 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/functional"
 3084              		.file 30 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/vector.tcc"
 3085              		.file 31 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cmath"
 3086              		.file 32 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cstring"
 3087              		.file 33 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/parse_numbers.h"
 3088              		.file 34 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cwchar"
 3089              		.file 35 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/clocale"
 3090              		.file 36 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cstdint"
 3091              		.file 37 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/string_view"
 3092              		.file 38 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 3093              		.file 39 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/cstdio"
 3094              		.file 40 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/allocator.h"
 3095              		.file 41 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h"
 3096              		.file 42 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/utility"
 3097              		.file 43 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h"
 3098              		.file 44 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h"
 3099              		.file 45 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/ext/alloc_traits.h"
 3100              		.file 46 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 3101              		.file 47 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 3102              		.file 48 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 3103              		.file 49 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/stdlib.h"
 3104              		.file 50 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 3105              		.file 51 "<built-in>"
 3106              		.file 52 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/pstl/execution_defs.h"
 3107              		.file 53 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/math.h"
 3108              		.file 54 "./MotorControl/utils.hpp"
 3109              		.file 55 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 3110              		.file 56 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 3111              		.file 57 "ThirdParty/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 3112              		.file 58 "./freertos_vars.h"
 3113              		.file 59 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/c++/10.3.1/math.h"
 3114              		.file 60 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 3115              		.file 61 "./autogen/interfaces.hpp"
ARM GAS  /tmp/ccrmmslP.s 			page 106


 3116              		.file 62 "Board/v3/Inc/board.h"
 3117              		.file 63 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/wchar.h"
 3118              		.file 64 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/locale.h"
 3119              		.file 65 "MotorControl/odrive_main.h"
 3120              		.file 66 "ThirdParty/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 3121              		.file 67 "Board/v3/Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccrmmslP.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interface_usb.cpp
     /tmp/ccrmmslP.s:17     .rodata.str1.4:0000000000000000 $d
     /tmp/ccrmmslP.s:24     .text._ZN5fibre16Stm32UsbTxStream12cancel_writeEj:0000000000000000 $t
     /tmp/ccrmmslP.s:30     .text._ZN5fibre16Stm32UsbTxStream12cancel_writeEj:0000000000000000 _ZN5fibre16Stm32UsbTxStream12cancel_writeEj
.ARM.exidx.text._ZN5fibre16Stm32UsbTxStream12cancel_writeEj:0000000000000000 $d
     /tmp/ccrmmslP.s:48     .text._ZN5fibre16Stm32UsbRxStream11cancel_readEj:0000000000000000 $t
     /tmp/ccrmmslP.s:54     .text._ZN5fibre16Stm32UsbRxStream11cancel_readEj:0000000000000000 _ZN5fibre16Stm32UsbRxStream11cancel_readEj
.ARM.exidx.text._ZN5fibre16Stm32UsbRxStream11cancel_readEj:0000000000000000 $d
     /tmp/ccrmmslP.s:71     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
     /tmp/ccrmmslP.s:76     .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccrmmslP.s:629    .text._Z41__static_initialization_and_destruction_0ii:0000000000000138 $d
     /tmp/ccrmmslP.s:2885   .rodata._ZTVN5fibre15AsyncStreamSinkE:0000000000000000 _ZTVN5fibre15AsyncStreamSinkE
     /tmp/ccrmmslP.s:2897   .rodata._ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 _ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE
     /tmp/ccrmmslP.s:2875   .rodata._ZTVN5fibre17AsyncStreamSourceE:0000000000000000 _ZTVN5fibre17AsyncStreamSourceE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
     /tmp/ccrmmslP.s:651    .text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj:0000000000000000 $t
     /tmp/ccrmmslP.s:657    .text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj:0000000000000000 _ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj
.ARM.exidx.text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE12cancel_writeEj:0000000000000000 $d
     /tmp/ccrmmslP.s:789    .text._ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 $t
     /tmp/ccrmmslP.s:795    .text._ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 _ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE
.ARM.exidx.text._ZN5fibre16Stm32UsbTxStream11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 $d
     /tmp/ccrmmslP.s:1045   .text._ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEEEE:0000000000000000 $t
     /tmp/ccrmmslP.s:1051   .text._ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEEEE:0000000000000000 _ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEEEE
     /tmp/ccrmmslP.s:1278   .text._ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEEEE:00000000000000b0 $d
.ARM.exidx.text._ZN5fibre16Stm32UsbRxStream10start_readENS_16generic_bufptr_tIhEEPjNS_8CallbackIvJNS_10ReadResultEEEE:0000000000000000 $d
     /tmp/ccrmmslP.s:1284   .text._ZN5fibre16Stm32UsbTxStream10did_finishEv:0000000000000000 $t
     /tmp/ccrmmslP.s:1290   .text._ZN5fibre16Stm32UsbTxStream10did_finishEv:0000000000000000 _ZN5fibre16Stm32UsbTxStream10did_finishEv
.ARM.exidx.text._ZN5fibre16Stm32UsbTxStream10did_finishEv:0000000000000000 $d
     /tmp/ccrmmslP.s:1385   .text._ZN5fibre16Stm32UsbRxStream10did_finishEv:0000000000000000 $t
     /tmp/ccrmmslP.s:1391   .text._ZN5fibre16Stm32UsbRxStream10did_finishEv:0000000000000000 _ZN5fibre16Stm32UsbRxStream10did_finishEv
.ARM.exidx.text._ZN5fibre16Stm32UsbRxStream10did_finishEv:0000000000000000 $d
     /tmp/ccrmmslP.s:1486   .text.usb_rx_process_packet:0000000000000000 $t
     /tmp/ccrmmslP.s:1492   .text.usb_rx_process_packet:0000000000000000 usb_rx_process_packet
     /tmp/ccrmmslP.s:1578   .text.usb_rx_process_packet:0000000000000044 $d
.ARM.extab.text.usb_rx_process_packet:0000000000000000 $d
.ARM.exidx.text.usb_rx_process_packet:0000000000000000 $d
     /tmp/ccrmmslP.s:1586   .text.start_usb_server:0000000000000000 $t
     /tmp/ccrmmslP.s:1592   .text.start_usb_server:0000000000000000 start_usb_server
     /tmp/ccrmmslP.s:1634   .text.start_usb_server:0000000000000028 $d
 .ARM.exidx.text.start_usb_server:0000000000000000 $d
     /tmp/ccrmmslP.s:1641   .text._ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 $t
     /tmp/ccrmmslP.s:1647   .text._ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 _ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE
     /tmp/ccrmmslP.s:1679   .text._ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000008 $d
     /tmp/ccrmmslP.s:1692   .text._ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 _ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_
.ARM.exidx.text._ZN5fibre13make_callbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 $d
     /tmp/ccrmmslP.s:1686   .text._ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 $t
.ARM.exidx.text._ZZN5fibre14MemberCallbackIMNS_18BufferedStreamSinkILj64EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 $d
     /tmp/ccrmmslP.s:1897   .text._ZL17usb_server_threadPv:0000000000000000 $t
     /tmp/ccrmmslP.s:1902   .text._ZL17usb_server_threadPv:0000000000000000 _ZL17usb_server_threadPv
     /tmp/ccrmmslP.s:2106   .text._ZL17usb_server_threadPv:00000000000000a4 $d
     /tmp/ccrmmslP.s:2113   .text._ZL17usb_server_threadPv:00000000000000c0 $t
     /tmp/ccrmmslP.s:2267   .text._ZL17usb_server_threadPv:0000000000000164 $d
.ARM.exidx.text._ZL17usb_server_threadPv:0000000000000000 $d
     /tmp/ccrmmslP.s:2287   .text._ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 $t
     /tmp/ccrmmslP.s:2293   .text._ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 _ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE
     /tmp/ccrmmslP.s:2325   .text._ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000008 $d
ARM GAS  /tmp/ccrmmslP.s 			page 108


     /tmp/ccrmmslP.s:2553   .text._ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 _ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_
.ARM.exidx.text._ZN5fibre13make_callbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EENS_15function_traitsIvS2_JS3_EEENS_14MemberCallbackIS5_XadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEEEEENT2_4cb_tEPNT1_4TObjE:0000000000000000 $d
     /tmp/ccrmmslP.s:2332   .text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 $t
     /tmp/ccrmmslP.s:2338   .text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 _ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE
.ARM.exidx.text._ZN5fibre26AsyncStreamSinkMultiplexerILj2EE11start_writeENS_16generic_bufptr_tIKhEEPjNS_8CallbackIvJNS_11WriteResultEEEE:0000000000000000 $d
     /tmp/ccrmmslP.s:2547   .text._ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 $t
.ARM.exidx.text._ZZN5fibre14MemberCallbackIMNS_26AsyncStreamSinkMultiplexerILj2EEEFvNS_11WriteResultEEXadL_ZNS2_17on_write_completeES3_EES2_vSt5tupleIJS3_EEE4withEPS2_ENUlPvS3_E_4_FUNESA_S3_:0000000000000000 $d
     /tmp/ccrmmslP.s:2789   .text._GLOBAL__sub_I_usb_thread:0000000000000000 $t
     /tmp/ccrmmslP.s:2794   .text._GLOBAL__sub_I_usb_thread:0000000000000000 _GLOBAL__sub_I_usb_thread
.ARM.exidx.text._GLOBAL__sub_I_usb_thread:0000000000000000 $d
     /tmp/ccrmmslP.s:2818   .init_array:0000000000000000 $d
     /tmp/ccrmmslP.s:2825   .rodata._ZTSN5fibre17AsyncStreamSourceE:0000000000000000 _ZTSN5fibre17AsyncStreamSourceE
     /tmp/ccrmmslP.s:2822   .rodata._ZTSN5fibre17AsyncStreamSourceE:0000000000000000 $d
     /tmp/ccrmmslP.s:2832   .rodata._ZTIN5fibre17AsyncStreamSourceE:0000000000000000 _ZTIN5fibre17AsyncStreamSourceE
     /tmp/ccrmmslP.s:2829   .rodata._ZTIN5fibre17AsyncStreamSourceE:0000000000000000 $d
     /tmp/ccrmmslP.s:2840   .rodata._ZTSN5fibre15AsyncStreamSinkE:0000000000000000 _ZTSN5fibre15AsyncStreamSinkE
     /tmp/ccrmmslP.s:2837   .rodata._ZTSN5fibre15AsyncStreamSinkE:0000000000000000 $d
     /tmp/ccrmmslP.s:2847   .rodata._ZTIN5fibre15AsyncStreamSinkE:0000000000000000 _ZTIN5fibre15AsyncStreamSinkE
     /tmp/ccrmmslP.s:2844   .rodata._ZTIN5fibre15AsyncStreamSinkE:0000000000000000 $d
     /tmp/ccrmmslP.s:3034   .rodata._ZTSN5fibre16Stm32UsbTxStreamE:0000000000000000 _ZTSN5fibre16Stm32UsbTxStreamE
     /tmp/ccrmmslP.s:3020   .rodata._ZTIN5fibre16Stm32UsbTxStreamE:0000000000000000 _ZTIN5fibre16Stm32UsbTxStreamE
     /tmp/ccrmmslP.s:3028   .rodata._ZTSN5fibre16Stm32UsbRxStreamE:0000000000000000 _ZTSN5fibre16Stm32UsbRxStreamE
     /tmp/ccrmmslP.s:3012   .rodata._ZTIN5fibre16Stm32UsbRxStreamE:0000000000000000 _ZTIN5fibre16Stm32UsbRxStreamE
     /tmp/ccrmmslP.s:2859   .rodata._ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 _ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE
     /tmp/ccrmmslP.s:2856   .rodata._ZTSN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 $d
     /tmp/ccrmmslP.s:2866   .rodata._ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 _ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE
     /tmp/ccrmmslP.s:2863   .rodata._ZTIN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 $d
     /tmp/ccrmmslP.s:2872   .rodata._ZTVN5fibre17AsyncStreamSourceE:0000000000000000 $d
     /tmp/ccrmmslP.s:2882   .rodata._ZTVN5fibre15AsyncStreamSinkE:0000000000000000 $d
     /tmp/ccrmmslP.s:3051   .rodata._ZTVN5fibre16Stm32UsbTxStreamE:0000000000000000 _ZTVN5fibre16Stm32UsbTxStreamE
     /tmp/ccrmmslP.s:3041   .rodata._ZTVN5fibre16Stm32UsbRxStreamE:0000000000000000 _ZTVN5fibre16Stm32UsbRxStreamE
     /tmp/ccrmmslP.s:2894   .rodata._ZTVN5fibre26AsyncStreamSinkMultiplexerILj2EEE:0000000000000000 $d
     /tmp/ccrmmslP.s:2957   .bss.usb_cdc_stdout_pending:0000000000000000 usb_cdc_stdout_pending
     /tmp/ccrmmslP.s:2930   .bss.ascii_over_cdc:0000000000000000 ascii_over_cdc
     /tmp/ccrmmslP.s:2964   .bss.usb_cdc_stdout_sink:0000000000000000 usb_cdc_stdout_sink
     /tmp/ccrmmslP.s:2971   .bss.usb_cdc_tx_multiplexer:0000000000000000 usb_cdc_tx_multiplexer
     /tmp/ccrmmslP.s:2944   .bss.fibre_over_usb:0000000000000000 fibre_over_usb
     /tmp/ccrmmslP.s:2937   .bss.fibre_over_cdc:0000000000000000 fibre_over_cdc
     /tmp/ccrmmslP.s:2985   .bss.usb_native_rx_stream:0000000000000000 usb_native_rx_stream
     /tmp/ccrmmslP.s:2951   .bss.usb_cdc_rx_stream:0000000000000000 usb_cdc_rx_stream
     /tmp/ccrmmslP.s:2992   .bss.usb_native_tx_stream:0000000000000000 usb_native_tx_stream
     /tmp/ccrmmslP.s:2978   .bss.usb_cdc_tx_stream:0000000000000000 usb_cdc_tx_stream
     /tmp/ccrmmslP.s:2999   .bss.usb_stats_:0000000000000000 usb_stats_
     /tmp/ccrmmslP.s:3060   .rodata.stack_size_usb_thread:0000000000000000 stack_size_usb_thread
     /tmp/ccrmmslP.s:3006   .bss.usb_thread:0000000000000000 usb_thread
     /tmp/ccrmmslP.s:2916   .rodata:0000000000000000 $d
     /tmp/ccrmmslP.s:2926   .bss.ascii_over_cdc:0000000000000000 $d
     /tmp/ccrmmslP.s:2933   .bss.fibre_over_cdc:0000000000000000 $d
     /tmp/ccrmmslP.s:2940   .bss.fibre_over_usb:0000000000000000 $d
     /tmp/ccrmmslP.s:2947   .bss.usb_cdc_rx_stream:0000000000000000 $d
     /tmp/ccrmmslP.s:2958   .bss.usb_cdc_stdout_pending:0000000000000000 $d
     /tmp/ccrmmslP.s:2960   .bss.usb_cdc_stdout_sink:0000000000000000 $d
     /tmp/ccrmmslP.s:2967   .bss.usb_cdc_tx_multiplexer:0000000000000000 $d
     /tmp/ccrmmslP.s:2974   .bss.usb_cdc_tx_stream:0000000000000000 $d
     /tmp/ccrmmslP.s:2981   .bss.usb_native_rx_stream:0000000000000000 $d
     /tmp/ccrmmslP.s:2988   .bss.usb_native_tx_stream:0000000000000000 $d
     /tmp/ccrmmslP.s:2995   .bss.usb_stats_:0000000000000000 $d
ARM GAS  /tmp/ccrmmslP.s 			page 109


     /tmp/ccrmmslP.s:3002   .bss.usb_thread:0000000000000000 $d
     /tmp/ccrmmslP.s:3009   .rodata._ZTIN5fibre16Stm32UsbRxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3017   .rodata._ZTIN5fibre16Stm32UsbTxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3025   .rodata._ZTSN5fibre16Stm32UsbRxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3031   .rodata._ZTSN5fibre16Stm32UsbTxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3037   .rodata._ZTVN5fibre16Stm32UsbRxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3047   .rodata._ZTVN5fibre16Stm32UsbTxStreamE:0000000000000000 $d
     /tmp/ccrmmslP.s:3057   .rodata.stack_size_usb_thread:0000000000000000 $d

UNDEFINED SYMBOLS
_ZTVN5fibre13PacketWrapperE
_ZTVN5fibre15PacketUnwrapperE
__aeabi_unwind_cpp_pr0
CDC_Transmit_FS
USBD_CDC_ReceivePacket
usb_dev_handle
osMessagePut
usb_event_queue
__aeabi_unwind_cpp_pr1
osThreadCreate
_ZN5fibre25LegacyProtocolPacketBased5startENS_8CallbackIvJPS0_NS_12StreamStatusEEEE
_ZN13AsciiProtocol5startEv
osMessageGet
odrv
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
__cxa_pure_virtual
