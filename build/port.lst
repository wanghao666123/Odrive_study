ARM GAS  /tmp/ccluKIGd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"port.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvTaskExitError,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	prvTaskExitError:
  26              	.LFB6:
  27              		.file 1 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c"
   1:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
   2:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS Kernel V10.3.1
   3:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
   5:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software without restriction, including without limitation the rights to
   8:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * subject to the following conditions:
  11:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  12:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * copies or substantial portions of the Software.
  14:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  15:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  22:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * http://www.FreeRTOS.org
  23:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * http://aws.amazon.com/freertos
  24:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *
  25:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * 1 tab == 4 spaces!
  26:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
  27:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  28:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------
  29:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Implementation of functions defined in portable.h for the ARM CM4F port.
  30:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  *----------------------------------------------------------*/
  31:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccluKIGd.s 			page 2


  32:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Scheduler includes. */
  33:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "FreeRTOS.h"
  34:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #include "task.h"
  35:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  36:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef __VFP_FP__
  37:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#error This port can only be used when the project options are configured to enable hardware float
  38:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  39:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  40:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  41:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  42:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  43:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  44:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
  45:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  46:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	as the core. */
  47:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  48:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
  49:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  50:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the core.  Registers first... */
  51:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  52:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  53:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  54:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  55:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* ...then bits in the registers. */
  56:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  57:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  58:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  59:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  60:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  61:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  62:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  63:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** r0p1 port. */
  64:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCPUID							( * ( ( volatile uint32_t * ) 0xE000ed00 ) )
  65:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p1_ID				( 0x410FC271UL )
  66:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p0_ID				( 0x410FC270UL )
  67:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  68:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  69:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  70:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  71:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to check the validity of an interrupt priority. */
  72:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  73:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  74:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  75:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  76:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  77:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  78:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  79:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  80:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  81:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  82:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  83:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  84:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the VFP. */
  85:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portFPCCR							( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating point context control re
  86:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portASPEN_AND_LSPEN_BITS			( 0x3UL << 30UL )
  87:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  88:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Constants required to set up the initial stack. */
ARM GAS  /tmp/ccluKIGd.s 			page 3


  89:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_XPSR					( 0x01000000 )
  90:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_EXC_RETURN				( 0xfffffffd )
  91:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  92:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* The systick is a 24-bit counter. */
  93:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  94:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  95:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
  96:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  97:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portSTART_ADDRESS_MASK		( ( StackType_t ) 0xfffffffeUL )
  98:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
  99:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 100:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** occurred while the SysTick counter is stopped during tickless idle
 101:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** calculations. */
 102:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 103:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 104:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 105:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
 106:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** debugger. */
 107:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #ifdef configTASK_RETURN_ADDRESS
 108:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 109:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #else
 110:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 111:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif
 112:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 113:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 114:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 115:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * file is weak to allow application writers to change the timer used to
 116:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * generate the tick interrupt.
 117:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 118:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSetupTimerInterrupt( void );
 119:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 120:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 121:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Exception handlers.
 122:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 123:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 124:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void );
 125:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 126:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 127:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 128:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 129:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 130:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 131:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 132:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 133:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Function to enable the VFP.
 134:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 135:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void ) __attribute__ (( naked ));
 136:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 137:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 138:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 139:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 140:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void );
 141:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 142:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 143:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 144:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 145:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** variable. */
ARM GAS  /tmp/ccluKIGd.s 			page 4


 146:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 147:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 148:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 149:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The number of SysTick increments that make up one tick period.
 150:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 151:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 152:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 153:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 154:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 155:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 156:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 157:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * 24 bit resolution of the SysTick timer.
 158:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 159:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 160:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 161:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 162:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 163:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 164:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 165:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * power functionality only.
 166:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 167:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 168:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 169:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 170:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 171:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 172:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 173:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 174:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 175:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 176:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 177:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 178:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 179:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 180:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* configASSERT_DEFINED */
 181:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 182:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 183:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 184:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 185:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 186:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 187:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 188:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 189:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 190:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	interrupt. */
 191:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 192:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Offset added to account for the way the MCU uses the stack on entry/exit
 193:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	of interrupts, and to ensure alignment. */
 194:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 196:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 201:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 202:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Save code space by skipping register initialisation. */
ARM GAS  /tmp/ccluKIGd.s 			page 5


 203:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
 204:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 205:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 206:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* A save method is being used that requires each task to maintain its
 207:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	own exec return value. */
 208:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 209:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 210:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 212:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	return pxTopOfStack;
 214:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 216:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 217:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void )
 218:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
  28              		.loc 1 218 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 219:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** volatile uint32_t ulDummy = 0;
  36              		.loc 1 219 1 view .LVU1
  37              		.loc 1 219 19 is_stmt 0 view .LVU2
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
 220:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 221:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 222:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 223:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	should instead call vTaskDelete( NULL ).
 224:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 225:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 226:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	defined, then stop here so application writers can catch the error. */
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
  40              		.loc 1 227 2 is_stmt 1 view .LVU3
  41 0006 0D4B     		ldr	r3, .L6
  42 0008 1B68     		ldr	r3, [r3]
  43 000a B3F1FF3F 		cmp	r3, #-1
  44 000e 08D0     		beq	.L2
  45              		.loc 1 227 2 view .LVU4
  46              	.LBB31:
  47              	.LBI31:
  48              		.file 2 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /tmp/ccluKIGd.s 			page 6


  12:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  /tmp/ccluKIGd.s 			page 7


  69:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
ARM GAS  /tmp/ccluKIGd.s 			page 8


 126:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portDONT_DISCARD
 170:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portDONT_DISCARD __attribute__(( used ))
 171:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 172:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 173:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 174:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 175:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 176:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 177:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 178:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 179:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 180:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 181:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 182:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  /tmp/ccluKIGd.s 			page 9


 183:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 184:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 186:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 187:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 188:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 189:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 190:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 191:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 192:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  49              		.loc 2 195 30 view .LVU5
  50              	.LBB32:
 196:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  51              		.loc 2 197 1 view .LVU6
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  52              		.loc 2 199 2 view .LVU7
  53              		.syntax unified
  54              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  55 0010 4FF05003 			mov r3, #80												
  56 0014 83F31188 		msr basepri, r3											
  57 0018 BFF36F8F 		isb														
  58 001c BFF34F8F 		dsb														
  59              	
  60              	@ 0 "" 2
  61              	.LVL0:
  62              		.thumb
  63              		.syntax unified
  64              	.L3:
  65              		.loc 2 199 2 is_stmt 0 view .LVU8
  66              	.LBE32:
  67              	.LBE31:
  68              		.loc 1 227 2 is_stmt 1 discriminator 1 view .LVU9
  69              		.loc 1 227 2 discriminator 1 view .LVU10
  70              		.loc 1 227 2 discriminator 1 view .LVU11
  71 0020 FEE7     		b	.L3
  72              	.L2:
  73              		.loc 1 227 43 view .LVU12
 228:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
  74              		.loc 1 228 2 view .LVU13
  75              	.LBB33:
  76              	.LBI33:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
  77              		.loc 2 195 30 view .LVU14
  78              	.LBB34:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  79              		.loc 2 197 1 view .LVU15
  80              		.loc 2 199 2 view .LVU16
  81              		.syntax unified
  82              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  83 0022 4FF05003 			mov r3, #80												
  84 0026 83F31188 		msr basepri, r3											
  85 002a BFF36F8F 		isb														
ARM GAS  /tmp/ccluKIGd.s 			page 10


  86 002e BFF34F8F 		dsb														
  87              	
  88              	@ 0 "" 2
  89              	.LVL1:
  90              		.thumb
  91              		.syntax unified
  92              	.L4:
  93              		.loc 2 199 2 is_stmt 0 view .LVU17
  94              	.LBE34:
  95              	.LBE33:
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 230:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 232:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		started to remove a compiler warning about the function being defined
 233:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 234:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		about code appearing after this function is called - making ulDummy
 235:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile makes the compiler think the function could return and
 236:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 237:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		after it. */
 238:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
  96              		.loc 1 238 2 is_stmt 1 discriminator 1 view .LVU18
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
  97              		.loc 1 229 7 discriminator 1 view .LVU19
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
  98              		.loc 1 229 17 is_stmt 0 discriminator 1 view .LVU20
  99 0032 019B     		ldr	r3, [sp, #4]
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	while( ulDummy == 0 )
 100              		.loc 1 229 7 discriminator 1 view .LVU21
 101 0034 002B     		cmp	r3, #0
 102 0036 FCD0     		beq	.L4
 239:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 103              		.loc 1 239 1 view .LVU22
 104 0038 02B0     		add	sp, sp, #8
 105              	.LCFI1:
 106              		.cfi_def_cfa_offset 0
 107              		@ sp needed
 108 003a 7047     		bx	lr
 109              	.L7:
 110              		.align	2
 111              	.L6:
 112 003c 00000000 		.word	.LANCHOR0
 113              		.cfi_endproc
 114              	.LFE6:
 116              		.section	.text.prvPortStartFirstTask,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	prvPortStartFirstTask:
 123              	.LFB8:
 240:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 241:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 242:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void )
 243:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 244:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 245:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 246:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
ARM GAS  /tmp/ccluKIGd.s 			page 11


 247:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 248:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldmia r0!, {r4-r11, r14}		\n" /* Pop the registers that are not automatically saved on excep
 249:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 250:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	isb								\n"
 251:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	mov r0, #0 						\n"
 252:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	msr	basepri, r0					\n"
 253:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	bx r14							\n"
 254:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"									\n"
 255:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	.align 4						\n"
 256:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 257:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				);
 258:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 259:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 260:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 261:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void )
 262:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 124              		.loc 1 262 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ Naked Function: prologue and epilogue provided by programmer.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 263:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task.  This also clears the bit that indicates the FPU is
 264:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	in use in case the FPU was used before the scheduler was started - which
 265:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	would otherwise result in the unnecessary leaving of space in the SVC stack
 266:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	for lazy saving of FPU registers. */
 267:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile(
 129              		.loc 1 267 2 view .LVU24
 130              		.syntax unified
 131              	@ 267 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 132 0000 0848     		 ldr r0, =0xE000ED08 	
 133 0002 0068     	 ldr r0, [r0] 			
 134 0004 0068     	 ldr r0, [r0] 			
 135 0006 80F30888 	 msr msp, r0			
 136 000a 4FF00000 	 mov r0, #0			
 137 000e 80F31488 	 msr control, r0		
 138 0012 62B6     	 cpsie i				
 139 0014 61B6     	 cpsie f				
 140 0016 BFF34F8F 	 dsb					
 141 001a BFF36F8F 	 isb					
 142 001e 00DF     	 svc 0					
 143 0020 00BF     	 nop					
 144 0022 000008ED 	 .ltorg                
 144      00E0
 145              	
 146              	@ 0 "" 2
 268:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 269:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 270:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" ldr r0, [r0] 			\n"
 271:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 272:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" mov r0, #0			\n" /* Clear the bit that indicates the FPU is in use, see comment above. */
 273:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" msr control, r0		\n"
 274:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 275:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" cpsie f				\n"
 276:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" dsb					\n"
 277:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" isb					\n"
 278:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" svc 0					\n" /* System call to start first task. */
 279:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" nop					\n"
ARM GAS  /tmp/ccluKIGd.s 			page 12


 280:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					" .ltorg                \n"
 281:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				);
 282:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 147              		.loc 1 282 1 is_stmt 0 view .LVU25
 148              		.thumb
 149              		.syntax unified
 150              		.cfi_endproc
 151              	.LFE8:
 153              		.section	.text.vPortEnableVFP,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	vPortEnableVFP:
 160              	.LFB16:
 283:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 284:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 285:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 286:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 287:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 288:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** BaseType_t xPortStartScheduler( void )
 289:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 290:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 291:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 292:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 293:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 294:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This port can be used on all revisions of the Cortex-M7 core other than
 295:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	the r0p1 parts.  r0p1 parts should use the port from the
 296:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/source/portable/GCC/ARM_CM7/r0p1 directory. */
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 299:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 300:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#if( configASSERT_DEFINED == 1 )
 301:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 302:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint32_t ulOriginalPriority;
 303:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 304:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 305:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 306:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 307:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		functions can be called.  ISR safe functions are those that end in
 308:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 309:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 310:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 311:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 312:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 313:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 314:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Determine the number of priority bits available.  First write to all
 315:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		possible bits. */
 316:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 317:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 318:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Read the value back to see how many bits stuck. */
 319:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 320:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 321:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Use the same mask on the maximum system call priority. */
 322:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 323:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 324:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
ARM GAS  /tmp/ccluKIGd.s 			page 13


 325:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		of bits read back. */
 326:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 328:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 329:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ulMaxPRIGROUPValue--;
 330:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 331:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 332:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 333:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#ifdef __NVIC_PRIO_BITS
 334:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 335:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Check the CMSIS configuration that defines the number of
 336:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 337:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 338:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 339:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 340:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 341:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 342:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#ifdef configPRIO_BITS
 343:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 344:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 345:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			priority bits matches the number of priority bits actually queried
 346:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from the hardware. */
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 348:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 349:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 350:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 351:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 352:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		register. */
 353:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 354:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 355:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 356:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 357:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		value. */
 358:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 359:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 360:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif /* conifgASSERT_DEFINED */
 361:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 362:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 363:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 364:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 365:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 366:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 367:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	here already. */
 368:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vPortSetupTimerInterrupt();
 369:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 370:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 371:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting = 0;
 372:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 373:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Ensure the VFP is enabled - it should be anyway. */
 374:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vPortEnableVFP();
 375:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 376:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Lazy save always. */
 377:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 378:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 379:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Start the first task. */
 380:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvPortStartFirstTask();
 381:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccluKIGd.s 			page 14


 382:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 383:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	exit error function to prevent compiler warnings about a static function
 384:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	not being called in the case that the application writer overrides this
 385:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 386:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 387:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	symbol. */
 388:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	vTaskSwitchContext();
 389:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 390:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 391:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Should not get here! */
 392:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	return 0;
 393:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 394:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 395:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 396:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEndScheduler( void )
 397:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 398:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 399:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	Artificially force an assert. */
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 401:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 402:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 403:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 404:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortEnterCritical( void )
 405:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 406:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 407:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 408:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 409:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 410:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 411:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 412:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 413:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	assert function also uses a critical section. */
 414:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 1 )
 415:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 417:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 418:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 419:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 420:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 421:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void vPortExitCritical( void )
 422:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 424:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 425:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 426:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 427:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		portENABLE_INTERRUPTS();
 428:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 429:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 430:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 431:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 432:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void )
 433:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 434:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 435:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 436:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
 437:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 438:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mrs r0, psp							\n"
ARM GAS  /tmp/ccluKIGd.s 			page 15


 439:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 440:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 441:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 442:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr	r2, [r3]						\n"
 443:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 444:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, push high vfp registers. *
 445:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
 446:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	vstmdbeq r0!, {s16-s31}				\n"
 447:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 448:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb r0!, {r4-r11, r14}			\n" /* Save the core registers. */
 449:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 450:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 451:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	stmdb sp!, {r0, r3}					\n"
 452:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, %0 							\n"
 453:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 454:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	dsb									\n"
 455:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 456:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	bl vTaskSwitchContext				\n"
 457:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	mov r0, #0							\n"
 458:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr basepri, r0						\n"
 459:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia sp!, {r0, r3}					\n"
 460:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 461:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r1, [r3]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 462:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldr r0, [r1]						\n"
 463:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 464:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	ldmia r0!, {r4-r11, r14}			\n" /* Pop the core registers. */
 465:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 466:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, pop the high vfp registers
 467:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	it eq								\n"
 468:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	vldmiaeq r0!, {s16-s31}				\n"
 469:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 470:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	msr psp, r0							\n"
 471:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	isb									\n"
 472:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 473:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 474:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#if WORKAROUND_PMU_CM001 == 1
 475:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"			push { r14 }				\n"
 476:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"			pop { pc }					\n"
 477:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		#endif
 478:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif
 479:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 480:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	bx r14								\n"
 481:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"										\n"
 482:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"	.align 4							\n"
 483:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 484:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 485:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	);
 486:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 487:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 488:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 489:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void )
 490:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 491:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 492:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 493:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	save and then restore the interrupt mask value as its value is already
 494:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	known. */
 495:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
ARM GAS  /tmp/ccluKIGd.s 			page 16


 496:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 497:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Increment the RTOS tick. */
 498:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 499:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 500:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* A context switch is required.  Context switching is performed in
 501:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 502:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 503:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 504:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 505:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portENABLE_INTERRUPTS();
 506:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 507:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 508:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 509:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 510:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 511:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 512:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 513:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 514:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	TickType_t xModifiableIdleTime;
 515:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 516:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 517:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 518:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 519:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 520:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 521:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 522:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 523:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 524:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 525:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		kernel with respect to calendar time. */
 526:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 527:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 528:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 529:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		tick periods.  -1 is used because this code will execute part way
 530:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		through one of the tick periods. */
 531:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 532:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 533:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 534:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 535:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 536:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 537:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 538:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 539:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 540:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "dsb" );
 541:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "isb" );
 542:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 543:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 544:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		to be unsuspended then abandon the low power entry. */
 545:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 546:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 547:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart from whatever is left in the count register to complete
 548:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			this tick period. */
 549:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 550:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 551:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 552:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
ARM GAS  /tmp/ccluKIGd.s 			page 17


 553:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 554:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Reset the reload register to the value required for normal tick
 555:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			periods. */
 556:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 557:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 558:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 559:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			above. */
 560:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 561:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 562:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		else
 563:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 564:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Set the new reload value. */
 565:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 566:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 567:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 568:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			zero. */
 569:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 570:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 571:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick. */
 572:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 573:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 574:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 575:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 576:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 577:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			should not be executed again.  However, the original expected idle
 578:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 579:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 580:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 581:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			if( xModifiableIdleTime > 0 )
 582:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 583:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 584:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "wfi" );
 585:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				__asm volatile( "isb" );
 586:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 587:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 588:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 589:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 590:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			out of sleep mode to execute immediately.  see comments above
 591:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__disable_interrupt() call above. */
 592:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 593:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 594:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 595:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 596:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 597:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			and interrupts that execute while the clock is stopped will increase
 598:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 599:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time. */
 600:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 601:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "dsb" );
 602:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "isb" );
 603:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 604:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Disable the SysTick clock without reading the
 605:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 606:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 607:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 608:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 609:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			drift of the time maintained by the kernel with respect to calendar
ARM GAS  /tmp/ccluKIGd.s 			page 18


 610:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			time*/
 611:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 612:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 613:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 614:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			been set back to the current reload value (the reload back being
 615:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 616:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 617:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			must have brought the system out of sleep mode). */
 618:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 619:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 620:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				uint32_t ulCalculatedLoadValue;
 621:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 622:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 623:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				reloaded with ulReloadValue.  Reset the
 624:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 625:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				period. */
 626:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 627:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 628:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 629:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				underflowed because the post sleep hook did something
 630:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				that took too long. */
 631:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 632:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				{
 633:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 634:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				}
 635:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 636:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 637:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 638:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* As the pending tick will be processed as soon as this
 639:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				function exits, the tick value maintained by the tick is stepped
 640:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				forward by one less than the time spent waiting. */
 641:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 642:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 643:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			else
 644:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			{
 645:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 646:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 647:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				periods (not the ulReload value which accounted for part
 648:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ticks). */
 649:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 650:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 651:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* How many complete tick periods passed while the processor
 652:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				was waiting? */
 653:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 654:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 655:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 656:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				period remains. */
 657:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 658:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			}
 659:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 660:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 661:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 662:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			value. */
 663:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 664:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 665:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 666:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
ARM GAS  /tmp/ccluKIGd.s 			page 19


 667:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 668:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Exit with interrupts enabled. */
 669:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 670:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 671:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 672:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 673:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 674:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 675:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 676:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*
 677:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 678:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  * frequency.
 679:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c ****  */
 680:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 681:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 682:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 683:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 684:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 685:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 686:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 687:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 688:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 689:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 690:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 691:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Stop and clear the SysTick. */
 692:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 693:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 694:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 695:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 696:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 697:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 698:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 699:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 700:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 701:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /* This is a naked function. */
 702:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void )
 703:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** {
 161              		.loc 1 703 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ Naked Function: prologue and epilogue provided by programmer.
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 704:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile
 166              		.loc 1 704 2 view .LVU27
 167              		.syntax unified
 168              	@ 704 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 169 0000 DFF80C00 			ldr.w r0, =0xE000ED88		
 170 0004 0168     		ldr r1, [r0]				
 171              									
 172 0006 41F47001 		orr r1, r1, #( 0xf << 20 )	
 173 000a 0160     		str r1, [r0]				
 174 000c 7047     		bx r14						
 175 000e 000088ED 	   .ltorg                        
 175      00E0
 176              	@ 0 "" 2
 705:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 706:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	ldr.w r0, =0xE000ED88		\n" /* The FPU enable bits are in the CPACR. */
ARM GAS  /tmp/ccluKIGd.s 			page 20


 707:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	ldr r1, [r0]				\n"
 708:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"								\n"
 709:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
 710:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	str r1, [r0]				\n"
 711:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"	bx r14						\n"
 712:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		"   .ltorg                        "
 713:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	);
 714:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 177              		.loc 1 714 1 is_stmt 0 view .LVU28
 178              		.thumb
 179              		.syntax unified
 180              		.cfi_endproc
 181              	.LFE16:
 183              		.section	.text.pxPortInitialiseStack,"ax",%progbits
 184              		.align	1
 185              		.global	pxPortInitialiseStack
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	pxPortInitialiseStack:
 191              	.LVL2:
 192              	.LFB5:
 188:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 193              		.loc 1 188 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 194:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 198              		.loc 1 194 2 view .LVU30
 196:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 199              		.loc 1 196 2 view .LVU31
 196:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 200              		.loc 1 196 16 is_stmt 0 view .LVU32
 201 0000 4FF08073 		mov	r3, #16777216
 202 0004 40F8043C 		str	r3, [r0, #-4]
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 203              		.loc 1 197 2 is_stmt 1 view .LVU33
 204              	.LVL3:
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 205              		.loc 1 198 2 view .LVU34
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 206              		.loc 1 198 45 is_stmt 0 view .LVU35
 207 0008 21F00101 		bic	r1, r1, #1
 208              	.LVL4:
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	pxTopOfStack--;
 209              		.loc 1 198 16 view .LVU36
 210 000c 40F8081C 		str	r1, [r0, #-8]
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 211              		.loc 1 199 2 is_stmt 1 view .LVU37
 212              	.LVL5:
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 213              		.loc 1 200 2 view .LVU38
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 214              		.loc 1 200 18 is_stmt 0 view .LVU39
 215 0010 054B     		ldr	r3, .L11
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  /tmp/ccluKIGd.s 			page 21


 216              		.loc 1 200 16 view .LVU40
 217 0012 40F80C3C 		str	r3, [r0, #-12]
 203:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 218              		.loc 1 203 2 is_stmt 1 view .LVU41
 219              	.LVL6:
 204:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 220              		.loc 1 204 2 view .LVU42
 204:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 221              		.loc 1 204 16 is_stmt 0 view .LVU43
 222 0016 40F8202C 		str	r2, [r0, #-32]
 208:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 223              		.loc 1 208 2 is_stmt 1 view .LVU44
 224              	.LVL7:
 209:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 225              		.loc 1 209 2 view .LVU45
 209:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 226              		.loc 1 209 16 is_stmt 0 view .LVU46
 227 001a 6FF00203 		mvn	r3, #2
 228 001e 40F8243C 		str	r3, [r0, #-36]
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 229              		.loc 1 211 2 is_stmt 1 view .LVU47
 230              	.LVL8:
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 231              		.loc 1 213 2 view .LVU48
 214:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 232              		.loc 1 214 1 is_stmt 0 view .LVU49
 233 0022 4438     		subs	r0, r0, #68
 234              	.LVL9:
 214:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 235              		.loc 1 214 1 view .LVU50
 236 0024 7047     		bx	lr
 237              	.L12:
 238 0026 00BF     		.align	2
 239              	.L11:
 240 0028 00000000 		.word	prvTaskExitError
 241              		.cfi_endproc
 242              	.LFE5:
 244              		.section	.text.SVC_Handler,"ax",%progbits
 245              		.align	1
 246              		.global	SVC_Handler
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	SVC_Handler:
 252              	.LFB7:
 243:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	__asm volatile (
 253              		.loc 1 243 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ Naked Function: prologue and epilogue provided by programmer.
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 244:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 258              		.loc 1 244 2 view .LVU52
 259              		.syntax unified
 260              	@ 244 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 261 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 262 0002 1968     		ldr r1, [r3]					
ARM GAS  /tmp/ccluKIGd.s 			page 22


 263 0004 0868     		ldr r0, [r1]					
 264 0006 B0E8F04F 		ldmia r0!, {r4-r11, r14}		
 265 000a 80F30988 		msr psp, r0						
 266 000e BFF36F8F 		isb								
 267 0012 4FF00000 		mov r0, #0 						
 268 0016 80F31188 		msr	basepri, r0					
 269 001a 7047     		bx r14							
 270              										
 271 001c AFF30080 		.align 4						
 272 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 273              	
 274              	@ 0 "" 2
 258:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 275              		.loc 1 258 1 is_stmt 0 view .LVU53
 276              		.thumb
 277              		.syntax unified
 278              		.cfi_endproc
 279              	.LFE7:
 281              		.section	.text.vPortEndScheduler,"ax",%progbits
 282              		.align	1
 283              		.global	vPortEndScheduler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	vPortEndScheduler:
 289              	.LFB10:
 397:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 290              		.loc 1 397 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 295              		.loc 1 400 2 view .LVU55
 296 0000 074B     		ldr	r3, .L17
 297 0002 1B68     		ldr	r3, [r3]
 298 0004 B3F57A7F 		cmp	r3, #1000
 299 0008 08D0     		beq	.L14
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 300              		.loc 1 400 2 view .LVU56
 301              	.LBB35:
 302              	.LBI35:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 303              		.loc 2 195 30 view .LVU57
 304              	.LBB36:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 305              		.loc 2 197 1 view .LVU58
 306              		.loc 2 199 2 view .LVU59
 307              		.syntax unified
 308              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 309 000a 4FF05003 			mov r3, #80												
 310 000e 83F31188 		msr basepri, r3											
 311 0012 BFF36F8F 		isb														
 312 0016 BFF34F8F 		dsb														
 313              	
 314              	@ 0 "" 2
 315              	.LVL10:
ARM GAS  /tmp/ccluKIGd.s 			page 23


 316              		.thumb
 317              		.syntax unified
 318              	.L16:
 319              		.loc 2 199 2 is_stmt 0 view .LVU60
 320              	.LBE36:
 321              	.LBE35:
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 322              		.loc 1 400 2 is_stmt 1 discriminator 1 view .LVU61
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 323              		.loc 1 400 2 discriminator 1 view .LVU62
 400:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 324              		.loc 1 400 2 discriminator 1 view .LVU63
 325 001a FEE7     		b	.L16
 326              	.L14:
 401:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 327              		.loc 1 401 1 is_stmt 0 view .LVU64
 328 001c 7047     		bx	lr
 329              	.L18:
 330 001e 00BF     		.align	2
 331              	.L17:
 332 0020 00000000 		.word	.LANCHOR0
 333              		.cfi_endproc
 334              	.LFE10:
 336              		.section	.text.vPortEnterCritical,"ax",%progbits
 337              		.align	1
 338              		.global	vPortEnterCritical
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	vPortEnterCritical:
 344              	.LFB11:
 405:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portDISABLE_INTERRUPTS();
 345              		.loc 1 405 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 406:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting++;
 350              		.loc 1 406 2 view .LVU66
 351              	.LBB37:
 352              	.LBI37:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 353              		.loc 2 195 30 view .LVU67
 354              	.LBB38:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 355              		.loc 2 197 1 view .LVU68
 356              		.loc 2 199 2 view .LVU69
 357              		.syntax unified
 358              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 359 0000 4FF05003 			mov r3, #80												
 360 0004 83F31188 		msr basepri, r3											
 361 0008 BFF36F8F 		isb														
 362 000c BFF34F8F 		dsb														
 363              	
 364              	@ 0 "" 2
 365              		.thumb
 366              		.syntax unified
ARM GAS  /tmp/ccluKIGd.s 			page 24


 367              	.LBE38:
 368              	.LBE37:
 407:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 369              		.loc 1 407 2 view .LVU70
 407:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 370              		.loc 1 407 19 is_stmt 0 view .LVU71
 371 0010 0B4A     		ldr	r2, .L23
 372 0012 1368     		ldr	r3, [r2]
 373 0014 0133     		adds	r3, r3, #1
 374 0016 1360     		str	r3, [r2]
 414:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 375              		.loc 1 414 2 is_stmt 1 view .LVU72
 414:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 376              		.loc 1 414 4 is_stmt 0 view .LVU73
 377 0018 012B     		cmp	r3, #1
 378 001a 00D0     		beq	.L22
 379              	.L19:
 418:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 380              		.loc 1 418 1 view .LVU74
 381 001c 7047     		bx	lr
 382              	.L22:
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 383              		.loc 1 416 3 is_stmt 1 view .LVU75
 384 001e 4FF0E023 		mov	r3, #-536813568
 385 0022 D3F8043D 		ldr	r3, [r3, #3332]
 386 0026 13F0FF0F 		tst	r3, #255
 387 002a F7D0     		beq	.L19
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 388              		.loc 1 416 3 view .LVU76
 389              	.LBB39:
 390              	.LBI39:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 391              		.loc 2 195 30 view .LVU77
 392              	.LBB40:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 393              		.loc 2 197 1 view .LVU78
 394              		.loc 2 199 2 view .LVU79
 395              		.syntax unified
 396              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 397 002c 4FF05003 			mov r3, #80												
 398 0030 83F31188 		msr basepri, r3											
 399 0034 BFF36F8F 		isb														
 400 0038 BFF34F8F 		dsb														
 401              	
 402              	@ 0 "" 2
 403              	.LVL11:
 404              		.thumb
 405              		.syntax unified
 406              	.L21:
 407              		.loc 2 199 2 is_stmt 0 view .LVU80
 408              	.LBE40:
 409              	.LBE39:
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 410              		.loc 1 416 3 is_stmt 1 discriminator 1 view .LVU81
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 411              		.loc 1 416 3 discriminator 1 view .LVU82
 416:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
ARM GAS  /tmp/ccluKIGd.s 			page 25


 412              		.loc 1 416 3 discriminator 1 view .LVU83
 413 003c FEE7     		b	.L21
 414              	.L24:
 415 003e 00BF     		.align	2
 416              	.L23:
 417 0040 00000000 		.word	.LANCHOR0
 418              		.cfi_endproc
 419              	.LFE11:
 421              		.section	.text.vPortExitCritical,"ax",%progbits
 422              		.align	1
 423              		.global	vPortExitCritical
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	vPortExitCritical:
 429              	.LFB12:
 422:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( uxCriticalNesting );
 430              		.loc 1 422 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 435              		.loc 1 423 2 view .LVU85
 436 0000 094B     		ldr	r3, .L29
 437 0002 1B68     		ldr	r3, [r3]
 438 0004 43B9     		cbnz	r3, .L26
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 439              		.loc 1 423 2 view .LVU86
 440              	.LBB41:
 441              	.LBI41:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 442              		.loc 2 195 30 view .LVU87
 443              	.LBB42:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 444              		.loc 2 197 1 view .LVU88
 445              		.loc 2 199 2 view .LVU89
 446              		.syntax unified
 447              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 448 0006 4FF05003 			mov r3, #80												
 449 000a 83F31188 		msr basepri, r3											
 450 000e BFF36F8F 		isb														
 451 0012 BFF34F8F 		dsb														
 452              	
 453              	@ 0 "" 2
 454              	.LVL12:
 455              		.thumb
 456              		.syntax unified
 457              	.L27:
 458              		.loc 2 199 2 is_stmt 0 view .LVU90
 459              	.LBE42:
 460              	.LBE41:
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 461              		.loc 1 423 2 is_stmt 1 discriminator 1 view .LVU91
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 462              		.loc 1 423 2 discriminator 1 view .LVU92
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
ARM GAS  /tmp/ccluKIGd.s 			page 26


 463              		.loc 1 423 2 discriminator 1 view .LVU93
 464 0016 FEE7     		b	.L27
 465              	.L26:
 423:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uxCriticalNesting--;
 466              		.loc 1 423 35 discriminator 2 view .LVU94
 424:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 467              		.loc 1 424 2 discriminator 2 view .LVU95
 424:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	if( uxCriticalNesting == 0 )
 468              		.loc 1 424 19 is_stmt 0 discriminator 2 view .LVU96
 469 0018 013B     		subs	r3, r3, #1
 470 001a 034A     		ldr	r2, .L29
 471 001c 1360     		str	r3, [r2]
 425:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 472              		.loc 1 425 2 is_stmt 1 discriminator 2 view .LVU97
 425:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 473              		.loc 1 425 4 is_stmt 0 discriminator 2 view .LVU98
 474 001e 0BB9     		cbnz	r3, .L25
 427:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 475              		.loc 1 427 3 is_stmt 1 view .LVU99
 476              	.LVL13:
 477              	.LBB43:
 478              	.LBI43:
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 201:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 202:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 203:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 204:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 205:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 207:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 208:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 216:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 217:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 218:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 219:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 220:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 221:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 222:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 223:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 224:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 225:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 226:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 228:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 479              		.loc 2 231 30 view .LVU100
 480              	.LBB44:
 232:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/ccluKIGd.s 			page 27


 233:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 481              		.loc 2 233 2 view .LVU101
 482              		.syntax unified
 483              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 484 0020 83F31188 			msr basepri, r3	
 485              	@ 0 "" 2
 486              	.LVL14:
 487              		.thumb
 488              		.syntax unified
 489              	.L25:
 490              		.loc 2 233 2 is_stmt 0 view .LVU102
 491              	.LBE44:
 492              	.LBE43:
 429:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 493              		.loc 1 429 1 view .LVU103
 494 0024 7047     		bx	lr
 495              	.L30:
 496 0026 00BF     		.align	2
 497              	.L29:
 498 0028 00000000 		.word	.LANCHOR0
 499              		.cfi_endproc
 500              	.LFE12:
 502              		.section	.text.PendSV_Handler,"ax",%progbits
 503              		.align	1
 504              		.global	PendSV_Handler
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 509              	PendSV_Handler:
 510              	.LFB13:
 433:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* This is a naked function. */
 511              		.loc 1 433 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ Naked Function: prologue and epilogue provided by programmer.
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 436:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	(
 516              		.loc 1 436 2 view .LVU105
 517              		.syntax unified
 518              	@ 436 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 519 0000 EFF30980 			mrs r0, psp							
 520 0004 BFF36F8F 		isb									
 521              											
 522 0008 154B     		ldr	r3, pxCurrentTCBConst			
 523 000a 1A68     		ldr	r2, [r3]						
 524              											
 525 000c 1EF0100F 		tst r14, #0x10						
 526 0010 08BF     		it eq								
 527 0012 20ED108A 		vstmdbeq r0!, {s16-s31}				
 528              											
 529 0016 20E9F04F 		stmdb r0!, {r4-r11, r14}			
 530 001a 1060     		str r0, [r2]						
 531              											
 532 001c 2DE90900 		stmdb sp!, {r0, r3}					
 533 0020 4FF05000 		mov r0, #80 							
 534 0024 80F31188 		msr basepri, r0						
 535 0028 BFF34F8F 		dsb									
ARM GAS  /tmp/ccluKIGd.s 			page 28


 536 002c BFF36F8F 		isb									
 537 0030 FFF7FEFF 		bl vTaskSwitchContext				
 538 0034 4FF00000 		mov r0, #0							
 539 0038 80F31188 		msr basepri, r0						
 540 003c 09BC     		ldmia sp!, {r0, r3}					
 541              											
 542 003e 1968     		ldr r1, [r3]						
 543 0040 0868     		ldr r0, [r1]						
 544              											
 545 0042 B0E8F04F 		ldmia r0!, {r4-r11, r14}			
 546              											
 547 0046 1EF0100F 		tst r14, #0x10						
 548 004a 08BF     		it eq								
 549 004c B0EC108A 		vldmiaeq r0!, {s16-s31}				
 550              											
 551 0050 80F30988 		msr psp, r0							
 552 0054 BFF36F8F 		isb									
 553              											
 554              											
 555 0058 7047     		bx r14								
 556              											
 557 005a 00BFAFF3 		.align 4							
 557      0080
 558 0060 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 559              	
 560              	@ 0 "" 2
 486:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 561              		.loc 1 486 1 is_stmt 0 view .LVU106
 562              		.thumb
 563              		.syntax unified
 564              		.cfi_endproc
 565              	.LFE13:
 567              		.section	.text.xPortSysTickHandler,"ax",%progbits
 568              		.align	1
 569              		.global	xPortSysTickHandler
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 574              	xPortSysTickHandler:
 575              	.LFB14:
 490:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 576              		.loc 1 490 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 08B5     		push	{r3, lr}
 581              	.LCFI2:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 495:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 585              		.loc 1 495 2 view .LVU108
 586              	.LBB45:
 587              	.LBI45:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 588              		.loc 2 195 30 view .LVU109
 589              	.LBB46:
ARM GAS  /tmp/ccluKIGd.s 			page 29


 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 590              		.loc 2 197 1 view .LVU110
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 591              		.loc 2 199 2 view .LVU111
 592              		.syntax unified
 593              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 594 0002 4FF05003 			mov r3, #80												
 595 0006 83F31188 		msr basepri, r3											
 596 000a BFF36F8F 		isb														
 597 000e BFF34F8F 		dsb														
 598              	
 599              	@ 0 "" 2
 600              		.thumb
 601              		.syntax unified
 602              	.LBE46:
 603              	.LBE45:
 498:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 604              		.loc 1 498 3 view .LVU112
 498:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 605              		.loc 1 498 7 is_stmt 0 view .LVU113
 606 0012 FFF7FEFF 		bl	xTaskIncrementTick
 607              	.LVL15:
 498:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 608              		.loc 1 498 5 view .LVU114
 609 0016 28B1     		cbz	r0, .L33
 502:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 610              		.loc 1 502 4 is_stmt 1 view .LVU115
 502:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 611              		.loc 1 502 26 is_stmt 0 view .LVU116
 612 0018 4FF0E023 		mov	r3, #-536813568
 613 001c 4FF08052 		mov	r2, #268435456
 614 0020 C3F8042D 		str	r2, [r3, #3332]
 615              	.L33:
 505:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 616              		.loc 1 505 2 is_stmt 1 view .LVU117
 617              	.LVL16:
 618              	.LBB47:
 619              	.LBI47:
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 620              		.loc 2 231 30 view .LVU118
 621              	.LBB48:
 622              		.loc 2 233 2 view .LVU119
 623 0024 0023     		movs	r3, #0
 624              		.syntax unified
 625              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 626 0026 83F31188 			msr basepri, r3	
 627              	@ 0 "" 2
 628              	.LVL17:
 629              		.loc 2 233 2 is_stmt 0 view .LVU120
 630              		.thumb
 631              		.syntax unified
 632              	.LBE48:
 633              	.LBE47:
 506:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 634              		.loc 1 506 1 view .LVU121
 635 002a 08BD     		pop	{r3, pc}
 636              		.cfi_endproc
ARM GAS  /tmp/ccluKIGd.s 			page 30


 637              	.LFE14:
 639              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 640              		.align	1
 641              		.weak	vPortSetupTimerInterrupt
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 646              	vPortSetupTimerInterrupt:
 647              	.LFB15:
 681:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 648              		.loc 1 681 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 692:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 653              		.loc 1 692 2 view .LVU123
 692:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 654              		.loc 1 692 28 is_stmt 0 view .LVU124
 655 0000 4FF0E022 		mov	r2, #-536813568
 656 0004 0023     		movs	r3, #0
 657 0006 1361     		str	r3, [r2, #16]
 693:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 658              		.loc 1 693 2 is_stmt 1 view .LVU125
 693:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 659              		.loc 1 693 37 is_stmt 0 view .LVU126
 660 0008 9361     		str	r3, [r2, #24]
 696:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 661              		.loc 1 696 2 is_stmt 1 view .LVU127
 696:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 662              		.loc 1 696 55 is_stmt 0 view .LVU128
 663 000a 054B     		ldr	r3, .L36
 664 000c 1B68     		ldr	r3, [r3]
 665 000e 0549     		ldr	r1, .L36+4
 666 0010 A1FB0313 		umull	r1, r3, r1, r3
 667 0014 9B09     		lsrs	r3, r3, #6
 696:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 668              		.loc 1 696 78 view .LVU129
 669 0016 013B     		subs	r3, r3, #1
 696:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 670              		.loc 1 696 28 view .LVU130
 671 0018 5361     		str	r3, [r2, #20]
 697:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 672              		.loc 1 697 2 is_stmt 1 view .LVU131
 697:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 673              		.loc 1 697 28 is_stmt 0 view .LVU132
 674 001a 0723     		movs	r3, #7
 675 001c 1361     		str	r3, [r2, #16]
 698:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 676              		.loc 1 698 1 view .LVU133
 677 001e 7047     		bx	lr
 678              	.L37:
 679              		.align	2
 680              	.L36:
 681 0020 00000000 		.word	SystemCoreClock
 682 0024 D34D6210 		.word	274877907
 683              		.cfi_endproc
ARM GAS  /tmp/ccluKIGd.s 			page 31


 684              	.LFE15:
 686              		.section	.text.xPortStartScheduler,"ax",%progbits
 687              		.align	1
 688              		.global	xPortStartScheduler
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	xPortStartScheduler:
 694              	.LFB9:
 289:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 695              		.loc 1 289 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 292:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 699              		.loc 1 292 2 view .LVU135
 292:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 700              		.loc 1 292 54 view .LVU136
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 701              		.loc 1 297 2 view .LVU137
 702 0000 4FF0E023 		mov	r3, #-536813568
 703 0004 D3F8002D 		ldr	r2, [r3, #3328]
 704 0008 3D4B     		ldr	r3, .L51
 705 000a 9A42     		cmp	r2, r3
 706 000c 1CD0     		beq	.L49
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 707              		.loc 1 297 52 discriminator 2 view .LVU138
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 708              		.loc 1 298 2 discriminator 2 view .LVU139
 709 000e 4FF0E023 		mov	r3, #-536813568
 710 0012 D3F8002D 		ldr	r2, [r3, #3328]
 711 0016 3B4B     		ldr	r3, .L51+4
 712 0018 9A42     		cmp	r2, r3
 713 001a 1ED0     		beq	.L50
 289:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 714              		.loc 1 289 1 is_stmt 0 discriminator 2 view .LVU140
 715 001c 30B5     		push	{r4, r5, lr}
 716              	.LCFI3:
 717              		.cfi_def_cfa_offset 12
 718              		.cfi_offset 4, -12
 719              		.cfi_offset 5, -8
 720              		.cfi_offset 14, -4
 721 001e 83B0     		sub	sp, sp, #12
 722              	.LCFI4:
 723              		.cfi_def_cfa_offset 24
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 724              		.loc 1 298 52 is_stmt 1 discriminator 2 view .LVU141
 725              	.LBB49:
 302:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 726              		.loc 1 302 3 discriminator 2 view .LVU142
 303:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 727              		.loc 1 303 3 discriminator 2 view .LVU143
 728              	.LVL18:
 304:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 729              		.loc 1 304 3 discriminator 2 view .LVU144
 312:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 730              		.loc 1 312 3 discriminator 2 view .LVU145
ARM GAS  /tmp/ccluKIGd.s 			page 32


 312:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 731              		.loc 1 312 24 is_stmt 0 discriminator 2 view .LVU146
 732 0020 394B     		ldr	r3, .L51+8
 733 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 734 0024 D2B2     		uxtb	r2, r2
 312:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 735              		.loc 1 312 22 discriminator 2 view .LVU147
 736 0026 0192     		str	r2, [sp, #4]
 316:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 737              		.loc 1 316 3 is_stmt 1 discriminator 2 view .LVU148
 316:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 738              		.loc 1 316 33 is_stmt 0 discriminator 2 view .LVU149
 739 0028 FF22     		movs	r2, #255
 740 002a 1A70     		strb	r2, [r3]
 319:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 741              		.loc 1 319 3 is_stmt 1 discriminator 2 view .LVU150
 319:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 742              		.loc 1 319 24 is_stmt 0 discriminator 2 view .LVU151
 743 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 744 002e DBB2     		uxtb	r3, r3
 319:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 745              		.loc 1 319 22 discriminator 2 view .LVU152
 746 0030 8DF80330 		strb	r3, [sp, #3]
 322:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 747              		.loc 1 322 3 is_stmt 1 discriminator 2 view .LVU153
 322:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 748              		.loc 1 322 63 is_stmt 0 discriminator 2 view .LVU154
 749 0034 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 750 0038 03F05003 		and	r3, r3, #80
 322:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 751              		.loc 1 322 24 discriminator 2 view .LVU155
 752 003c 334A     		ldr	r2, .L51+12
 753 003e 1370     		strb	r3, [r2]
 326:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 754              		.loc 1 326 3 is_stmt 1 discriminator 2 view .LVU156
 326:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 755              		.loc 1 326 22 is_stmt 0 discriminator 2 view .LVU157
 756 0040 334B     		ldr	r3, .L51+16
 757 0042 0722     		movs	r2, #7
 758 0044 1A60     		str	r2, [r3]
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 759              		.loc 1 327 3 is_stmt 1 discriminator 2 view .LVU158
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 760              		.loc 1 327 8 is_stmt 0 discriminator 2 view .LVU159
 761 0046 1BE0     		b	.L43
 762              	.LVL19:
 763              	.L49:
 764              	.LCFI5:
 765              		.cfi_def_cfa_offset 0
 766              		.cfi_restore 4
 767              		.cfi_restore 5
 768              		.cfi_restore 14
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 769              		.loc 1 327 8 discriminator 2 view .LVU160
 770              	.LBE49:
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 771              		.loc 1 297 2 is_stmt 1 view .LVU161
ARM GAS  /tmp/ccluKIGd.s 			page 33


 772              	.LBB52:
 773              	.LBI52:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 774              		.loc 2 195 30 view .LVU162
 775              	.LBB53:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 776              		.loc 2 197 1 view .LVU163
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 777              		.loc 2 199 2 view .LVU164
 778              		.syntax unified
 779              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 780 0048 4FF05003 			mov r3, #80												
 781 004c 83F31188 		msr basepri, r3											
 782 0050 BFF36F8F 		isb														
 783 0054 BFF34F8F 		dsb														
 784              	
 785              	@ 0 "" 2
 786              	.LVL20:
 787              		.thumb
 788              		.syntax unified
 789              	.L40:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 790              		.loc 2 199 2 is_stmt 0 view .LVU165
 791              	.LBE53:
 792              	.LBE52:
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 793              		.loc 1 297 2 is_stmt 1 discriminator 2 view .LVU166
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 794              		.loc 1 297 2 discriminator 2 view .LVU167
 297:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 795              		.loc 1 297 2 discriminator 2 view .LVU168
 796 0058 FEE7     		b	.L40
 797              	.L50:
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 798              		.loc 1 298 2 view .LVU169
 799              	.LBB54:
 800              	.LBI54:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 801              		.loc 2 195 30 view .LVU170
 802              	.LBB55:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 803              		.loc 2 197 1 view .LVU171
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 804              		.loc 2 199 2 view .LVU172
 805              		.syntax unified
 806              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 807 005a 4FF05003 			mov r3, #80												
 808 005e 83F31188 		msr basepri, r3											
 809 0062 BFF36F8F 		isb														
 810 0066 BFF34F8F 		dsb														
 811              	
 812              	@ 0 "" 2
 813              	.LVL21:
 814              		.thumb
 815              		.syntax unified
 816              	.L42:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccluKIGd.s 			page 34


 817              		.loc 2 199 2 is_stmt 0 view .LVU173
 818              	.LBE55:
 819              	.LBE54:
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 820              		.loc 1 298 2 is_stmt 1 discriminator 3 view .LVU174
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 821              		.loc 1 298 2 discriminator 3 view .LVU175
 298:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 822              		.loc 1 298 2 discriminator 3 view .LVU176
 823 006a FEE7     		b	.L42
 824              	.LVL22:
 825              	.L44:
 826              	.LCFI6:
 827              		.cfi_def_cfa_offset 24
 828              		.cfi_offset 4, -12
 829              		.cfi_offset 5, -8
 830              		.cfi_offset 14, -4
 831              	.LBB56:
 329:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 832              		.loc 1 329 4 view .LVU177
 329:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 833              		.loc 1 329 22 is_stmt 0 view .LVU178
 834 006c 284A     		ldr	r2, .L51+16
 835 006e 1368     		ldr	r3, [r2]
 836 0070 013B     		subs	r3, r3, #1
 837 0072 1360     		str	r3, [r2]
 330:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 838              		.loc 1 330 4 is_stmt 1 view .LVU179
 330:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 839              		.loc 1 330 23 is_stmt 0 view .LVU180
 840 0074 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 841 0078 5B00     		lsls	r3, r3, #1
 842 007a DBB2     		uxtb	r3, r3
 843 007c 8DF80330 		strb	r3, [sp, #3]
 844              	.L43:
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 845              		.loc 1 327 8 is_stmt 1 view .LVU181
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 846              		.loc 1 327 31 is_stmt 0 view .LVU182
 847 0080 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 327:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 848              		.loc 1 327 8 view .LVU183
 849 0084 13F0800F 		tst	r3, #128
 850 0088 F0D1     		bne	.L44
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 851              		.loc 1 347 4 is_stmt 1 view .LVU184
 852 008a 214B     		ldr	r3, .L51+16
 853 008c 1B68     		ldr	r3, [r3]
 854 008e 032B     		cmp	r3, #3
 855 0090 08D0     		beq	.L45
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 856              		.loc 1 347 4 view .LVU185
 857              	.LBB50:
 858              	.LBI50:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 859              		.loc 2 195 30 view .LVU186
 860              	.LBB51:
ARM GAS  /tmp/ccluKIGd.s 			page 35


 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 861              		.loc 2 197 1 view .LVU187
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 862              		.loc 2 199 2 view .LVU188
 863              		.syntax unified
 864              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 865 0092 4FF05003 			mov r3, #80												
 866 0096 83F31188 		msr basepri, r3											
 867 009a BFF36F8F 		isb														
 868 009e BFF34F8F 		dsb														
 869              	
 870              	@ 0 "" 2
 871              	.LVL23:
 872              		.thumb
 873              		.syntax unified
 874              	.L46:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 875              		.loc 2 199 2 is_stmt 0 view .LVU189
 876              	.LBE51:
 877              	.LBE50:
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 878              		.loc 1 347 4 is_stmt 1 discriminator 4 view .LVU190
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 879              		.loc 1 347 4 discriminator 4 view .LVU191
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 880              		.loc 1 347 4 discriminator 4 view .LVU192
 881 00a2 FEE7     		b	.L46
 882              	.L45:
 347:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 883              		.loc 1 347 85 discriminator 2 view .LVU193
 353:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 884              		.loc 1 353 3 discriminator 2 view .LVU194
 353:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 885              		.loc 1 353 22 is_stmt 0 discriminator 2 view .LVU195
 886 00a4 1B02     		lsls	r3, r3, #8
 887 00a6 1A4A     		ldr	r2, .L51+16
 888 00a8 1360     		str	r3, [r2]
 354:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 889              		.loc 1 354 3 is_stmt 1 discriminator 2 view .LVU196
 354:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 890              		.loc 1 354 22 is_stmt 0 discriminator 2 view .LVU197
 891 00aa 03F4E063 		and	r3, r3, #1792
 892 00ae 1360     		str	r3, [r2]
 358:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 893              		.loc 1 358 3 is_stmt 1 discriminator 2 view .LVU198
 358:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 894              		.loc 1 358 33 is_stmt 0 discriminator 2 view .LVU199
 895 00b0 019B     		ldr	r3, [sp, #4]
 896 00b2 DBB2     		uxtb	r3, r3
 897 00b4 144A     		ldr	r2, .L51+8
 898 00b6 1370     		strb	r3, [r2]
 899              	.LBE56:
 363:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 900              		.loc 1 363 2 is_stmt 1 discriminator 2 view .LVU200
 363:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 901              		.loc 1 363 23 is_stmt 0 discriminator 2 view .LVU201
 902 00b8 4FF0E024 		mov	r4, #-536813568
ARM GAS  /tmp/ccluKIGd.s 			page 36


 903 00bc D4F8203D 		ldr	r3, [r4, #3360]
 904 00c0 43F47003 		orr	r3, r3, #15728640
 905 00c4 C4F8203D 		str	r3, [r4, #3360]
 364:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 906              		.loc 1 364 2 is_stmt 1 discriminator 2 view .LVU202
 364:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 907              		.loc 1 364 23 is_stmt 0 discriminator 2 view .LVU203
 908 00c8 D4F8203D 		ldr	r3, [r4, #3360]
 909 00cc 43F07043 		orr	r3, r3, #-268435456
 910 00d0 C4F8203D 		str	r3, [r4, #3360]
 368:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 911              		.loc 1 368 2 is_stmt 1 discriminator 2 view .LVU204
 912 00d4 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 913              	.LVL24:
 371:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 914              		.loc 1 371 2 discriminator 2 view .LVU205
 371:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 915              		.loc 1 371 20 is_stmt 0 discriminator 2 view .LVU206
 916 00d8 0025     		movs	r5, #0
 917 00da 0E4B     		ldr	r3, .L51+20
 918 00dc 1D60     		str	r5, [r3]
 374:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 919              		.loc 1 374 2 is_stmt 1 discriminator 2 view .LVU207
 920 00de FFF7FEFF 		bl	vPortEnableVFP
 921              	.LVL25:
 377:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 922              		.loc 1 377 2 discriminator 2 view .LVU208
 377:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 923              		.loc 1 377 17 is_stmt 0 discriminator 2 view .LVU209
 924 00e2 D4F8343F 		ldr	r3, [r4, #3892]
 925 00e6 43F04043 		orr	r3, r3, #-1073741824
 926 00ea C4F8343F 		str	r3, [r4, #3892]
 380:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 927              		.loc 1 380 2 is_stmt 1 discriminator 2 view .LVU210
 928 00ee FFF7FEFF 		bl	prvPortStartFirstTask
 929              	.LVL26:
 388:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	prvTaskExitError();
 930              		.loc 1 388 2 discriminator 2 view .LVU211
 931 00f2 FFF7FEFF 		bl	vTaskSwitchContext
 932              	.LVL27:
 389:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 933              		.loc 1 389 2 discriminator 2 view .LVU212
 934 00f6 FFF7FEFF 		bl	prvTaskExitError
 935              	.LVL28:
 392:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** }
 936              		.loc 1 392 2 discriminator 2 view .LVU213
 393:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 937              		.loc 1 393 1 is_stmt 0 discriminator 2 view .LVU214
 938 00fa 2846     		mov	r0, r5
 939 00fc 03B0     		add	sp, sp, #12
 940              	.LCFI7:
 941              		.cfi_def_cfa_offset 12
 942              		@ sp needed
 943 00fe 30BD     		pop	{r4, r5, pc}
 944              	.L52:
 945              		.align	2
 946              	.L51:
ARM GAS  /tmp/ccluKIGd.s 			page 37


 947 0100 71C20F41 		.word	1091551857
 948 0104 70C20F41 		.word	1091551856
 949 0108 00E400E0 		.word	-536812544
 950 010c 00000000 		.word	.LANCHOR1
 951 0110 00000000 		.word	.LANCHOR2
 952 0114 00000000 		.word	.LANCHOR0
 953              		.cfi_endproc
 954              	.LFE9:
 956              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 957              		.align	1
 958              		.global	vPortValidateInterruptPriority
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	vPortValidateInterruptPriority:
 964              	.LFB17:
 715:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 716:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 717:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** #if( configASSERT_DEFINED == 1 )
 718:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 719:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	void vPortValidateInterruptPriority( void )
 720:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	{
 965              		.loc 1 720 2 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 721:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint32_t ulCurrentInterrupt;
 970              		.loc 1 721 2 view .LVU216
 722:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	uint8_t ucCurrentPriority;
 971              		.loc 1 722 2 view .LVU217
 723:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 724:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Obtain the number of the currently executing interrupt. */
 725:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 972              		.loc 1 725 3 view .LVU218
 973              		.syntax unified
 974              	@ 725 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c" 1
 975 0000 EFF30583 		mrs r3, ipsr
 976              	@ 0 "" 2
 977              	.LVL29:
 726:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 727:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Is the interrupt number a user defined interrupt? */
 728:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 978              		.loc 1 728 3 view .LVU219
 979              		.loc 1 728 5 is_stmt 0 view .LVU220
 980              		.thumb
 981              		.syntax unified
 982 0004 0F2B     		cmp	r3, #15
 983 0006 0FD9     		bls	.L54
 729:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		{
 730:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* Look up the interrupt's priority. */
 731:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 984              		.loc 1 731 4 is_stmt 1 view .LVU221
 985              		.loc 1 731 52 is_stmt 0 view .LVU222
 986 0008 114A     		ldr	r2, .L58
 987              		.loc 1 731 22 view .LVU223
 988 000a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccluKIGd.s 			page 38


 989              	.LVL30:
 990              		.loc 1 731 22 view .LVU224
 991 000c DBB2     		uxtb	r3, r3
 992              	.LVL31:
 732:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 733:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			/* The following assertion will fail if a service routine (ISR) for
 734:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			an interrupt that has been assigned a priority above
 735:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 736:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 737:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			from interrupts that have been assigned a priority at or below
 738:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 739:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 740:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			Numerically low interrupt priority numbers represent logically high
 741:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			interrupt priorities, therefore the priority of the interrupt must
 742:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			be set to a value equal to or numerically *higher* than
 743:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 744:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 745:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			Interrupts that	use the FreeRTOS API must not be left at their
 746:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			default priority of	zero as that is the highest possible priority,
 747:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 748:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			and	therefore also guaranteed to be invalid.
 749:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 750:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 751:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			interrupt entry is as fast and simple as possible.
 752:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 753:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			The following links provide detailed information:
 754:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 755:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			http://www.freertos.org/FAQHelp.html */
 756:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 993              		.loc 1 756 4 is_stmt 1 view .LVU225
 994 000e 114A     		ldr	r2, .L58+4
 995 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 996 0012 9A42     		cmp	r2, r3
 997 0014 08D9     		bls	.L54
 998              		.loc 1 756 4 view .LVU226
 999              	.LBB57:
 1000              	.LBI57:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1001              		.loc 2 195 30 view .LVU227
 1002              	.LBB58:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1003              		.loc 2 197 1 view .LVU228
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1004              		.loc 2 199 2 view .LVU229
 1005              		.syntax unified
 1006              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1007 0016 4FF05003 			mov r3, #80												
 1008 001a 83F31188 		msr basepri, r3											
 1009 001e BFF36F8F 		isb														
 1010 0022 BFF34F8F 		dsb														
 1011              	
 1012              	@ 0 "" 2
 1013              	.LVL32:
 1014              		.thumb
 1015              		.syntax unified
 1016              	.L55:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccluKIGd.s 			page 39


 1017              		.loc 2 199 2 is_stmt 0 view .LVU230
 1018              	.LBE58:
 1019              	.LBE57:
 1020              		.loc 1 756 4 is_stmt 1 discriminator 1 view .LVU231
 1021              		.loc 1 756 4 discriminator 1 view .LVU232
 1022              		.loc 1 756 4 discriminator 1 view .LVU233
 1023 0026 FEE7     		b	.L55
 1024              	.L54:
 1025              		.loc 1 756 61 discriminator 2 view .LVU234
 757:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		}
 758:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 759:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 760:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		that define each interrupt's priority to be split between bits that
 761:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		define the interrupt's pre-emption priority bits and bits that define
 762:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 763:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		to be pre-emption priority bits.  The following assertion will fail if
 764:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		this is not the case (if some bits represent a sub-priority).
 765:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 
 766:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		If the application only uses CMSIS libraries for interrupt
 767:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configuration then the correct setting can be achieved on all Cortex-M
 768:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 769:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		scheduler.  Note however that some vendor specific peripheral libraries
 770:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		assume a non-zero priority group setting, in which cases using a value
 771:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		of zero will result in unpredictable behaviour. */
 772:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1026              		.loc 1 772 3 discriminator 2 view .LVU235
 1027 0028 4FF0E023 		mov	r3, #-536813568
 1028 002c D3F80C3D 		ldr	r3, [r3, #3340]
 1029 0030 03F4E063 		and	r3, r3, #1792
 1030 0034 084A     		ldr	r2, .L58+8
 1031 0036 1268     		ldr	r2, [r2]
 1032 0038 9342     		cmp	r3, r2
 1033 003a 08D9     		bls	.L53
 1034              		.loc 1 772 3 view .LVU236
 1035              	.LBB59:
 1036              	.LBI59:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1037              		.loc 2 195 30 view .LVU237
 1038              	.LBB60:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1039              		.loc 2 197 1 view .LVU238
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1040              		.loc 2 199 2 view .LVU239
 1041              		.syntax unified
 1042              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1043 003c 4FF05003 			mov r3, #80												
 1044 0040 83F31188 		msr basepri, r3											
 1045 0044 BFF36F8F 		isb														
 1046 0048 BFF34F8F 		dsb														
 1047              	
 1048              	@ 0 "" 2
 1049              	.LVL33:
 1050              		.thumb
 1051              		.syntax unified
 1052              	.L57:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1053              		.loc 2 199 2 is_stmt 0 view .LVU240
ARM GAS  /tmp/ccluKIGd.s 			page 40


 1054              	.LBE60:
 1055              	.LBE59:
 1056              		.loc 1 772 3 is_stmt 1 discriminator 2 view .LVU241
 1057              		.loc 1 772 3 discriminator 2 view .LVU242
 1058              		.loc 1 772 3 discriminator 2 view .LVU243
 1059 004c FEE7     		b	.L57
 1060              	.L53:
 773:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c **** 	}
 1061              		.loc 1 773 2 is_stmt 0 view .LVU244
 1062 004e 7047     		bx	lr
 1063              	.L59:
 1064              		.align	2
 1065              	.L58:
 1066 0050 F0E300E0 		.word	-536812560
 1067 0054 00000000 		.word	.LANCHOR1
 1068 0058 00000000 		.word	.LANCHOR2
 1069              		.cfi_endproc
 1070              	.LFE17:
 1072              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
 1073              		.set	.LANCHOR1,. + 0
 1076              	ucMaxSysCallPriority:
 1077 0000 00       		.space	1
 1078              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
 1079              		.align	2
 1080              		.set	.LANCHOR2,. + 0
 1083              	ulMaxPRIGROUPValue:
 1084 0000 00000000 		.space	4
 1085              		.section	.data.uxCriticalNesting,"aw"
 1086              		.align	2
 1087              		.set	.LANCHOR0,. + 0
 1090              	uxCriticalNesting:
 1091 0000 AAAAAAAA 		.word	-1431655766
 1092              		.text
 1093              	.Letext0:
 1094              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1095              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1096              		.file 5 "ThirdParty/FreeRTOS/Source/include/projdefs.h"
 1097              		.file 6 "Board/v3/Inc/FreeRTOSConfig.h"
 1098              		.file 7 "ThirdParty/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccluKIGd.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 port.c
     /tmp/ccluKIGd.s:20     .text.prvTaskExitError:0000000000000000 $t
     /tmp/ccluKIGd.s:25     .text.prvTaskExitError:0000000000000000 prvTaskExitError
     /tmp/ccluKIGd.s:112    .text.prvTaskExitError:000000000000003c $d
     /tmp/ccluKIGd.s:117    .text.prvPortStartFirstTask:0000000000000000 $t
     /tmp/ccluKIGd.s:122    .text.prvPortStartFirstTask:0000000000000000 prvPortStartFirstTask
     /tmp/ccluKIGd.s:144    .text.prvPortStartFirstTask:0000000000000022 $d
     /tmp/ccluKIGd.s:144    .text.prvPortStartFirstTask:0000000000000024 $d
     /tmp/ccluKIGd.s:154    .text.vPortEnableVFP:0000000000000000 $t
     /tmp/ccluKIGd.s:159    .text.vPortEnableVFP:0000000000000000 vPortEnableVFP
     /tmp/ccluKIGd.s:175    .text.vPortEnableVFP:000000000000000e $d
     /tmp/ccluKIGd.s:175    .text.vPortEnableVFP:0000000000000010 $d
     /tmp/ccluKIGd.s:184    .text.pxPortInitialiseStack:0000000000000000 $t
     /tmp/ccluKIGd.s:190    .text.pxPortInitialiseStack:0000000000000000 pxPortInitialiseStack
     /tmp/ccluKIGd.s:240    .text.pxPortInitialiseStack:0000000000000028 $d
     /tmp/ccluKIGd.s:245    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccluKIGd.s:251    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccluKIGd.s:272    .text.SVC_Handler:0000000000000020 pxCurrentTCBConst2
     /tmp/ccluKIGd.s:272    .text.SVC_Handler:0000000000000020 $d
     /tmp/ccluKIGd.s:282    .text.vPortEndScheduler:0000000000000000 $t
     /tmp/ccluKIGd.s:288    .text.vPortEndScheduler:0000000000000000 vPortEndScheduler
     /tmp/ccluKIGd.s:332    .text.vPortEndScheduler:0000000000000020 $d
     /tmp/ccluKIGd.s:337    .text.vPortEnterCritical:0000000000000000 $t
     /tmp/ccluKIGd.s:343    .text.vPortEnterCritical:0000000000000000 vPortEnterCritical
     /tmp/ccluKIGd.s:417    .text.vPortEnterCritical:0000000000000040 $d
     /tmp/ccluKIGd.s:422    .text.vPortExitCritical:0000000000000000 $t
     /tmp/ccluKIGd.s:428    .text.vPortExitCritical:0000000000000000 vPortExitCritical
     /tmp/ccluKIGd.s:498    .text.vPortExitCritical:0000000000000028 $d
     /tmp/ccluKIGd.s:503    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccluKIGd.s:509    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccluKIGd.s:558    .text.PendSV_Handler:0000000000000060 pxCurrentTCBConst
     /tmp/ccluKIGd.s:558    .text.PendSV_Handler:0000000000000060 $d
     /tmp/ccluKIGd.s:568    .text.xPortSysTickHandler:0000000000000000 $t
     /tmp/ccluKIGd.s:574    .text.xPortSysTickHandler:0000000000000000 xPortSysTickHandler
     /tmp/ccluKIGd.s:640    .text.vPortSetupTimerInterrupt:0000000000000000 $t
     /tmp/ccluKIGd.s:646    .text.vPortSetupTimerInterrupt:0000000000000000 vPortSetupTimerInterrupt
     /tmp/ccluKIGd.s:681    .text.vPortSetupTimerInterrupt:0000000000000020 $d
     /tmp/ccluKIGd.s:687    .text.xPortStartScheduler:0000000000000000 $t
     /tmp/ccluKIGd.s:693    .text.xPortStartScheduler:0000000000000000 xPortStartScheduler
     /tmp/ccluKIGd.s:947    .text.xPortStartScheduler:0000000000000100 $d
     /tmp/ccluKIGd.s:957    .text.vPortValidateInterruptPriority:0000000000000000 $t
     /tmp/ccluKIGd.s:963    .text.vPortValidateInterruptPriority:0000000000000000 vPortValidateInterruptPriority
     /tmp/ccluKIGd.s:1066   .text.vPortValidateInterruptPriority:0000000000000050 $d
     /tmp/ccluKIGd.s:1076   .bss.ucMaxSysCallPriority:0000000000000000 ucMaxSysCallPriority
     /tmp/ccluKIGd.s:1077   .bss.ucMaxSysCallPriority:0000000000000000 $d
     /tmp/ccluKIGd.s:1079   .bss.ulMaxPRIGROUPValue:0000000000000000 $d
     /tmp/ccluKIGd.s:1083   .bss.ulMaxPRIGROUPValue:0000000000000000 ulMaxPRIGROUPValue
     /tmp/ccluKIGd.s:1086   .data.uxCriticalNesting:0000000000000000 $d
     /tmp/ccluKIGd.s:1090   .data.uxCriticalNesting:0000000000000000 uxCriticalNesting

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
