ARM GAS  /tmp/cc2CcJyq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	prvGetDisinheritPriorityAfterTimeout:
  26              	.LVL0:
  27              	.LFB22:
  28              		.file 1 "ThirdParty/FreeRTOS/Source/queue.c"
   1:ThirdParty/FreeRTOS/Source/queue.c **** /*
   2:ThirdParty/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.2.1
   3:ThirdParty/FreeRTOS/Source/queue.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/Source/queue.c ****  *
   5:ThirdParty/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ThirdParty/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:ThirdParty/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:ThirdParty/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ThirdParty/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ThirdParty/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:ThirdParty/FreeRTOS/Source/queue.c ****  *
  12:ThirdParty/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:ThirdParty/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:ThirdParty/FreeRTOS/Source/queue.c ****  *
  15:ThirdParty/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ThirdParty/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ThirdParty/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ThirdParty/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ThirdParty/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ThirdParty/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ThirdParty/FreeRTOS/Source/queue.c ****  *
  22:ThirdParty/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:ThirdParty/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:ThirdParty/FreeRTOS/Source/queue.c ****  *
  25:ThirdParty/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:ThirdParty/FreeRTOS/Source/queue.c ****  */
  27:ThirdParty/FreeRTOS/Source/queue.c **** 
  28:ThirdParty/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:ThirdParty/FreeRTOS/Source/queue.c **** #include <string.h>
  30:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 2


  31:ThirdParty/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:ThirdParty/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:ThirdParty/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:ThirdParty/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:ThirdParty/FreeRTOS/Source/queue.c **** 
  36:ThirdParty/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:ThirdParty/FreeRTOS/Source/queue.c **** #include "task.h"
  38:ThirdParty/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:ThirdParty/FreeRTOS/Source/queue.c **** 
  40:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:ThirdParty/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:ThirdParty/FreeRTOS/Source/queue.c **** #endif
  43:ThirdParty/FreeRTOS/Source/queue.c **** 
  44:ThirdParty/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:ThirdParty/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:ThirdParty/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:ThirdParty/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:ThirdParty/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:ThirdParty/FreeRTOS/Source/queue.c **** 
  50:ThirdParty/FreeRTOS/Source/queue.c **** 
  51:ThirdParty/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:ThirdParty/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:ThirdParty/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:ThirdParty/FreeRTOS/Source/queue.c **** 
  55:ThirdParty/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:ThirdParty/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:ThirdParty/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:ThirdParty/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:ThirdParty/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:ThirdParty/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:ThirdParty/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:ThirdParty/FreeRTOS/Source/queue.c **** being used for. */
  64:ThirdParty/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:ThirdParty/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:ThirdParty/FreeRTOS/Source/queue.c **** 
  67:ThirdParty/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:ThirdParty/FreeRTOS/Source/queue.c **** {
  69:ThirdParty/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:ThirdParty/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:ThirdParty/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:ThirdParty/FreeRTOS/Source/queue.c **** 
  73:ThirdParty/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:ThirdParty/FreeRTOS/Source/queue.c **** {
  75:ThirdParty/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:ThirdParty/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:ThirdParty/FreeRTOS/Source/queue.c **** 
  79:ThirdParty/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:ThirdParty/FreeRTOS/Source/queue.c **** zero. */
  81:ThirdParty/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:ThirdParty/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:ThirdParty/FreeRTOS/Source/queue.c **** 
  84:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:ThirdParty/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:ThirdParty/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:ThirdParty/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
ARM GAS  /tmp/cc2CcJyq.s 			page 3


  88:ThirdParty/FreeRTOS/Source/queue.c **** #else
  89:ThirdParty/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  90:ThirdParty/FreeRTOS/Source/queue.c **** #endif
  91:ThirdParty/FreeRTOS/Source/queue.c **** 
  92:ThirdParty/FreeRTOS/Source/queue.c **** /*
  93:ThirdParty/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:ThirdParty/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:ThirdParty/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:ThirdParty/FreeRTOS/Source/queue.c ****  */
  97:ThirdParty/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:ThirdParty/FreeRTOS/Source/queue.c **** {
  99:ThirdParty/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:ThirdParty/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:ThirdParty/FreeRTOS/Source/queue.c **** 
 102:ThirdParty/FreeRTOS/Source/queue.c **** 	union
 103:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 104:ThirdParty/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:ThirdParty/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:ThirdParty/FreeRTOS/Source/queue.c **** 	} u;
 107:ThirdParty/FreeRTOS/Source/queue.c **** 
 108:ThirdParty/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:ThirdParty/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:ThirdParty/FreeRTOS/Source/queue.c **** 
 111:ThirdParty/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:ThirdParty/FreeRTOS/Source/queue.c **** 
 115:ThirdParty/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:ThirdParty/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:ThirdParty/FreeRTOS/Source/queue.c **** 
 118:ThirdParty/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:ThirdParty/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
 121:ThirdParty/FreeRTOS/Source/queue.c **** 
 122:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:ThirdParty/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
 125:ThirdParty/FreeRTOS/Source/queue.c **** 
 126:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:ThirdParty/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:ThirdParty/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
 130:ThirdParty/FreeRTOS/Source/queue.c **** 
 131:ThirdParty/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:ThirdParty/FreeRTOS/Source/queue.c **** 
 133:ThirdParty/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:ThirdParty/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:ThirdParty/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:ThirdParty/FreeRTOS/Source/queue.c **** 
 137:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:ThirdParty/FreeRTOS/Source/queue.c **** 
 139:ThirdParty/FreeRTOS/Source/queue.c **** /*
 140:ThirdParty/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:ThirdParty/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:ThirdParty/FreeRTOS/Source/queue.c ****  */
 143:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 4


 145:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:ThirdParty/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 147:ThirdParty/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:ThirdParty/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 150:ThirdParty/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:ThirdParty/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:ThirdParty/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:ThirdParty/FreeRTOS/Source/queue.c **** 
 154:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:ThirdParty/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:ThirdParty/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:ThirdParty/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:ThirdParty/FreeRTOS/Source/queue.c **** 
 159:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:ThirdParty/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:ThirdParty/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:ThirdParty/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:ThirdParty/FreeRTOS/Source/queue.c **** 
 164:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:ThirdParty/FreeRTOS/Source/queue.c **** 
 166:ThirdParty/FreeRTOS/Source/queue.c **** /*
 167:ThirdParty/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:ThirdParty/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:ThirdParty/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:ThirdParty/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:ThirdParty/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:ThirdParty/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:ThirdParty/FreeRTOS/Source/queue.c ****  */
 174:ThirdParty/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:ThirdParty/FreeRTOS/Source/queue.c **** 
 176:ThirdParty/FreeRTOS/Source/queue.c **** /*
 177:ThirdParty/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:ThirdParty/FreeRTOS/Source/queue.c ****  *
 179:ThirdParty/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:ThirdParty/FreeRTOS/Source/queue.c ****  */
 181:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:ThirdParty/FreeRTOS/Source/queue.c **** 
 183:ThirdParty/FreeRTOS/Source/queue.c **** /*
 184:ThirdParty/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:ThirdParty/FreeRTOS/Source/queue.c ****  *
 186:ThirdParty/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:ThirdParty/FreeRTOS/Source/queue.c ****  */
 188:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:ThirdParty/FreeRTOS/Source/queue.c **** 
 190:ThirdParty/FreeRTOS/Source/queue.c **** /*
 191:ThirdParty/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:ThirdParty/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:ThirdParty/FreeRTOS/Source/queue.c ****  */
 194:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:ThirdParty/FreeRTOS/Source/queue.c **** 
 196:ThirdParty/FreeRTOS/Source/queue.c **** /*
 197:ThirdParty/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:ThirdParty/FreeRTOS/Source/queue.c ****  */
 199:ThirdParty/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:ThirdParty/FreeRTOS/Source/queue.c **** 
 201:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  /tmp/cc2CcJyq.s 			page 5


 202:ThirdParty/FreeRTOS/Source/queue.c **** 	/*
 203:ThirdParty/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 204:ThirdParty/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:ThirdParty/FreeRTOS/Source/queue.c **** 	 */
 206:ThirdParty/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 207:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 208:ThirdParty/FreeRTOS/Source/queue.c **** 
 209:ThirdParty/FreeRTOS/Source/queue.c **** /*
 210:ThirdParty/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:ThirdParty/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:ThirdParty/FreeRTOS/Source/queue.c ****  */
 213:ThirdParty/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:ThirdParty/FreeRTOS/Source/queue.c **** 
 215:ThirdParty/FreeRTOS/Source/queue.c **** /*
 216:ThirdParty/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:ThirdParty/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:ThirdParty/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:ThirdParty/FreeRTOS/Source/queue.c ****  */
 220:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:ThirdParty/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 223:ThirdParty/FreeRTOS/Source/queue.c **** 
 224:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:ThirdParty/FreeRTOS/Source/queue.c **** 	/*
 226:ThirdParty/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:ThirdParty/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:ThirdParty/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:ThirdParty/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:ThirdParty/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:ThirdParty/FreeRTOS/Source/queue.c **** 	 */
 232:ThirdParty/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 234:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:ThirdParty/FreeRTOS/Source/queue.c **** 
 236:ThirdParty/FreeRTOS/Source/queue.c **** /*
 237:ThirdParty/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:ThirdParty/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:ThirdParty/FreeRTOS/Source/queue.c ****  */
 240:ThirdParty/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:ThirdParty/FreeRTOS/Source/queue.c **** 	{														\
 243:ThirdParty/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:ThirdParty/FreeRTOS/Source/queue.c **** 		{													\
 245:ThirdParty/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:ThirdParty/FreeRTOS/Source/queue.c **** 		}													\
 247:ThirdParty/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:ThirdParty/FreeRTOS/Source/queue.c **** 		{													\
 249:ThirdParty/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:ThirdParty/FreeRTOS/Source/queue.c **** 		}													\
 251:ThirdParty/FreeRTOS/Source/queue.c **** 	}														\
 252:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:ThirdParty/FreeRTOS/Source/queue.c **** 
 255:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:ThirdParty/FreeRTOS/Source/queue.c **** {
 257:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 6


 259:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:ThirdParty/FreeRTOS/Source/queue.c **** 
 261:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:ThirdParty/FreeRTOS/Source/queue.c **** 
 270:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 272:ThirdParty/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:ThirdParty/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:ThirdParty/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:ThirdParty/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:ThirdParty/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:ThirdParty/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 279:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 281:ThirdParty/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 283:ThirdParty/FreeRTOS/Source/queue.c **** 				else
 284:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 285:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 287:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 288:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 289:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 290:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 292:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 293:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 294:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 295:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:ThirdParty/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:ThirdParty/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 299:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 300:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:ThirdParty/FreeRTOS/Source/queue.c **** 
 302:ThirdParty/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:ThirdParty/FreeRTOS/Source/queue.c **** 	versions. */
 304:ThirdParty/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:ThirdParty/FreeRTOS/Source/queue.c **** }
 306:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:ThirdParty/FreeRTOS/Source/queue.c **** 
 308:ThirdParty/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:ThirdParty/FreeRTOS/Source/queue.c **** 
 310:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 312:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:ThirdParty/FreeRTOS/Source/queue.c **** 
 314:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 7


 316:ThirdParty/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:ThirdParty/FreeRTOS/Source/queue.c **** 		supplied. */
 318:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:ThirdParty/FreeRTOS/Source/queue.c **** 
 320:ThirdParty/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:ThirdParty/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:ThirdParty/FreeRTOS/Source/queue.c **** 
 325:ThirdParty/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 327:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:ThirdParty/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:ThirdParty/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:ThirdParty/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:ThirdParty/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 334:ThirdParty/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:ThirdParty/FreeRTOS/Source/queue.c **** 
 336:ThirdParty/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:ThirdParty/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:ThirdParty/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:ThirdParty/FreeRTOS/Source/queue.c **** 
 341:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 343:ThirdParty/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 345:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:ThirdParty/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:ThirdParty/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:ThirdParty/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 350:ThirdParty/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:ThirdParty/FreeRTOS/Source/queue.c **** 
 352:ThirdParty/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 354:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 355:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 356:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 359:ThirdParty/FreeRTOS/Source/queue.c **** 
 360:ThirdParty/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 362:ThirdParty/FreeRTOS/Source/queue.c **** 
 363:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:ThirdParty/FreeRTOS/Source/queue.c **** 
 366:ThirdParty/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:ThirdParty/FreeRTOS/Source/queue.c **** 
 368:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 370:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:ThirdParty/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:ThirdParty/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
ARM GAS  /tmp/cc2CcJyq.s 			page 8


 373:ThirdParty/FreeRTOS/Source/queue.c **** 
 374:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 375:ThirdParty/FreeRTOS/Source/queue.c **** 
 376:ThirdParty/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 377:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 378:ThirdParty/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 379:ThirdParty/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 380:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 381:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 382:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 383:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 384:ThirdParty/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 385:ThirdParty/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 386:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 387:ThirdParty/FreeRTOS/Source/queue.c **** 
 388:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 389:ThirdParty/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 390:ThirdParty/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 391:ThirdParty/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 392:ThirdParty/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 393:ThirdParty/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 394:ThirdParty/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 395:ThirdParty/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 396:ThirdParty/FreeRTOS/Source/queue.c **** 		two bytes). */
 397:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 398:ThirdParty/FreeRTOS/Source/queue.c **** 
 399:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 400:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 401:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 402:ThirdParty/FreeRTOS/Source/queue.c **** 			storage area. */
 403:ThirdParty/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 404:ThirdParty/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 405:ThirdParty/FreeRTOS/Source/queue.c **** 
 406:ThirdParty/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 407:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 408:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 409:ThirdParty/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 410:ThirdParty/FreeRTOS/Source/queue.c **** 				deleted. */
 411:ThirdParty/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 412:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 413:ThirdParty/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 414:ThirdParty/FreeRTOS/Source/queue.c **** 
 415:ThirdParty/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 416:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 417:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 418:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 419:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 420:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 421:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 422:ThirdParty/FreeRTOS/Source/queue.c **** 
 423:ThirdParty/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 424:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 425:ThirdParty/FreeRTOS/Source/queue.c **** 
 426:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 427:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 428:ThirdParty/FreeRTOS/Source/queue.c **** 
 429:ThirdParty/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
ARM GAS  /tmp/cc2CcJyq.s 			page 9


 430:ThirdParty/FreeRTOS/Source/queue.c **** {
 431:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 432:ThirdParty/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 433:ThirdParty/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 434:ThirdParty/FreeRTOS/Source/queue.c **** 
 435:ThirdParty/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 436:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 437:ThirdParty/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 438:ThirdParty/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 439:ThirdParty/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 440:ThirdParty/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 441:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 442:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 443:ThirdParty/FreeRTOS/Source/queue.c **** 	else
 444:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 445:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 446:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 447:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 448:ThirdParty/FreeRTOS/Source/queue.c **** 
 449:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 450:ThirdParty/FreeRTOS/Source/queue.c **** 	defined. */
 451:ThirdParty/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 452:ThirdParty/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 453:ThirdParty/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 454:ThirdParty/FreeRTOS/Source/queue.c **** 
 455:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 456:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 457:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 458:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 459:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 460:ThirdParty/FreeRTOS/Source/queue.c **** 
 461:ThirdParty/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 462:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 463:ThirdParty/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 464:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 465:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 466:ThirdParty/FreeRTOS/Source/queue.c **** 
 467:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 468:ThirdParty/FreeRTOS/Source/queue.c **** }
 469:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 470:ThirdParty/FreeRTOS/Source/queue.c **** 
 471:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 472:ThirdParty/FreeRTOS/Source/queue.c **** 
 473:ThirdParty/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 474:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 475:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 476:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 477:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 478:ThirdParty/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 479:ThirdParty/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 480:ThirdParty/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 481:ThirdParty/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 482:ThirdParty/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 483:ThirdParty/FreeRTOS/Source/queue.c **** 
 484:ThirdParty/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 485:ThirdParty/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 486:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 10


 487:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 488:ThirdParty/FreeRTOS/Source/queue.c **** 
 489:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 490:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 491:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 492:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 493:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 494:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 495:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 496:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 497:ThirdParty/FreeRTOS/Source/queue.c **** 
 498:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 499:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 500:ThirdParty/FreeRTOS/Source/queue.c **** 
 501:ThirdParty/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 502:ThirdParty/FreeRTOS/Source/queue.c **** 
 503:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 504:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 505:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 506:ThirdParty/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 507:ThirdParty/FreeRTOS/Source/queue.c **** 
 508:ThirdParty/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 509:ThirdParty/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 510:ThirdParty/FreeRTOS/Source/queue.c **** 
 511:ThirdParty/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 512:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 513:ThirdParty/FreeRTOS/Source/queue.c **** 
 514:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 515:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516:ThirdParty/FreeRTOS/Source/queue.c **** 
 517:ThirdParty/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 518:ThirdParty/FreeRTOS/Source/queue.c **** 
 519:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 520:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 521:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 522:ThirdParty/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 523:ThirdParty/FreeRTOS/Source/queue.c **** 
 524:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 525:ThirdParty/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 526:ThirdParty/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 527:ThirdParty/FreeRTOS/Source/queue.c **** 
 528:ThirdParty/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 529:ThirdParty/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 530:ThirdParty/FreeRTOS/Source/queue.c **** 
 531:ThirdParty/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 532:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 533:ThirdParty/FreeRTOS/Source/queue.c **** 
 534:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 535:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 536:ThirdParty/FreeRTOS/Source/queue.c **** 
 537:ThirdParty/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 538:ThirdParty/FreeRTOS/Source/queue.c **** 
 539:ThirdParty/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 540:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 541:ThirdParty/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 542:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 543:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 11


 544:ThirdParty/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 545:ThirdParty/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 546:ThirdParty/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 547:ThirdParty/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 548:ThirdParty/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 549:ThirdParty/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 550:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 551:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 552:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 553:ThirdParty/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 554:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 555:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 556:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 557:ThirdParty/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 558:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 559:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 560:ThirdParty/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 561:ThirdParty/FreeRTOS/Source/queue.c **** 
 562:ThirdParty/FreeRTOS/Source/queue.c **** 		return pxReturn;
 563:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 564:ThirdParty/FreeRTOS/Source/queue.c **** 
 565:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 566:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 567:ThirdParty/FreeRTOS/Source/queue.c **** 
 568:ThirdParty/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 569:ThirdParty/FreeRTOS/Source/queue.c **** 
 570:ThirdParty/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 571:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 572:ThirdParty/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 573:ThirdParty/FreeRTOS/Source/queue.c **** 
 574:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 575:ThirdParty/FreeRTOS/Source/queue.c **** 
 576:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 577:ThirdParty/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 578:ThirdParty/FreeRTOS/Source/queue.c **** 		not required here. */
 579:ThirdParty/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 580:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 581:ThirdParty/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 582:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 583:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 584:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 585:ThirdParty/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 586:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 587:ThirdParty/FreeRTOS/Source/queue.c **** 
 588:ThirdParty/FreeRTOS/Source/queue.c **** 		return pxReturn;
 589:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 590:ThirdParty/FreeRTOS/Source/queue.c **** 
 591:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 592:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 593:ThirdParty/FreeRTOS/Source/queue.c **** 
 594:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 595:ThirdParty/FreeRTOS/Source/queue.c **** 
 596:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 597:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 598:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 599:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 600:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 12


 601:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 602:ThirdParty/FreeRTOS/Source/queue.c **** 
 603:ThirdParty/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 604:ThirdParty/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 605:ThirdParty/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 606:ThirdParty/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 607:ThirdParty/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 608:ThirdParty/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 609:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 610:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 611:ThirdParty/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 612:ThirdParty/FreeRTOS/Source/queue.c **** 
 613:ThirdParty/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 614:ThirdParty/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 615:ThirdParty/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 616:ThirdParty/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 617:ThirdParty/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 618:ThirdParty/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 619:ThirdParty/FreeRTOS/Source/queue.c **** 
 620:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 621:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 622:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 623:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 624:ThirdParty/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 625:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 626:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 627:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 628:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 629:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 630:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 631:ThirdParty/FreeRTOS/Source/queue.c **** 
 632:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 633:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 634:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 635:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 636:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 637:ThirdParty/FreeRTOS/Source/queue.c **** 			holder. */
 638:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 639:ThirdParty/FreeRTOS/Source/queue.c **** 
 640:ThirdParty/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 641:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 642:ThirdParty/FreeRTOS/Source/queue.c **** 
 643:ThirdParty/FreeRTOS/Source/queue.c **** 		return xReturn;
 644:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 645:ThirdParty/FreeRTOS/Source/queue.c **** 
 646:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 647:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 648:ThirdParty/FreeRTOS/Source/queue.c **** 
 649:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 650:ThirdParty/FreeRTOS/Source/queue.c **** 
 651:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 652:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 653:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 654:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 655:ThirdParty/FreeRTOS/Source/queue.c **** 
 656:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 657:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 13


 658:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 659:ThirdParty/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 660:ThirdParty/FreeRTOS/Source/queue.c **** 
 661:ThirdParty/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 662:ThirdParty/FreeRTOS/Source/queue.c **** 
 663:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 664:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 665:ThirdParty/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 666:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 667:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 668:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 669:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 670:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 671:ThirdParty/FreeRTOS/Source/queue.c **** 
 672:ThirdParty/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 673:ThirdParty/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 674:ThirdParty/FreeRTOS/Source/queue.c **** 			before reaching here. */
 675:ThirdParty/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 676:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 677:ThirdParty/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 678:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 679:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 680:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 681:ThirdParty/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 682:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 683:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 684:ThirdParty/FreeRTOS/Source/queue.c **** 
 685:ThirdParty/FreeRTOS/Source/queue.c **** 		return xReturn;
 686:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 687:ThirdParty/FreeRTOS/Source/queue.c **** 
 688:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 689:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 690:ThirdParty/FreeRTOS/Source/queue.c **** 
 691:ThirdParty/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 692:ThirdParty/FreeRTOS/Source/queue.c **** 
 693:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 694:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 695:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 696:ThirdParty/FreeRTOS/Source/queue.c **** 
 697:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 698:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 699:ThirdParty/FreeRTOS/Source/queue.c **** 
 700:ThirdParty/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 701:ThirdParty/FreeRTOS/Source/queue.c **** 
 702:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 703:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 704:ThirdParty/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 705:ThirdParty/FreeRTOS/Source/queue.c **** 
 706:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 707:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 708:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 709:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 710:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 711:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 712:ThirdParty/FreeRTOS/Source/queue.c **** 
 713:ThirdParty/FreeRTOS/Source/queue.c **** 		return xHandle;
 714:ThirdParty/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/cc2CcJyq.s 			page 14


 715:ThirdParty/FreeRTOS/Source/queue.c **** 
 716:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 717:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 718:ThirdParty/FreeRTOS/Source/queue.c **** 
 719:ThirdParty/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 720:ThirdParty/FreeRTOS/Source/queue.c **** 
 721:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 722:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 723:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 724:ThirdParty/FreeRTOS/Source/queue.c **** 
 725:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 726:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 727:ThirdParty/FreeRTOS/Source/queue.c **** 
 728:ThirdParty/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 729:ThirdParty/FreeRTOS/Source/queue.c **** 
 730:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 731:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 732:ThirdParty/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 733:ThirdParty/FreeRTOS/Source/queue.c **** 
 734:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 735:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 736:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 737:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 738:ThirdParty/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 739:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 740:ThirdParty/FreeRTOS/Source/queue.c **** 
 741:ThirdParty/FreeRTOS/Source/queue.c **** 		return xHandle;
 742:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 743:ThirdParty/FreeRTOS/Source/queue.c **** 
 744:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 745:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 746:ThirdParty/FreeRTOS/Source/queue.c **** 
 747:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 748:ThirdParty/FreeRTOS/Source/queue.c **** {
 749:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 750:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 751:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 752:ThirdParty/FreeRTOS/Source/queue.c **** 
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 756:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 757:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 758:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 759:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 760:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
 761:ThirdParty/FreeRTOS/Source/queue.c **** 
 762:ThirdParty/FreeRTOS/Source/queue.c **** 
 763:ThirdParty/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 764:ThirdParty/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 765:ThirdParty/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 766:ThirdParty/FreeRTOS/Source/queue.c **** 	for( ;; )
 767:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 768:ThirdParty/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 769:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 770:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 771:ThirdParty/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
ARM GAS  /tmp/cc2CcJyq.s 			page 15


 772:ThirdParty/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 773:ThirdParty/FreeRTOS/Source/queue.c **** 			queue is full. */
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 775:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 776:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 777:ThirdParty/FreeRTOS/Source/queue.c **** 
 778:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 779:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 780:ThirdParty/FreeRTOS/Source/queue.c **** 				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 781:ThirdParty/FreeRTOS/Source/queue.c **** 
 782:ThirdParty/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 783:ThirdParty/FreeRTOS/Source/queue.c **** 
 784:ThirdParty/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 785:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 786:ThirdParty/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 787:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 788:ThirdParty/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 789:ThirdParty/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 790:ThirdParty/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 791:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 792:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 793:ThirdParty/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 794:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 795:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 796:ThirdParty/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 797:ThirdParty/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 798:ThirdParty/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 800:ThirdParty/FreeRTOS/Source/queue.c **** 						else
 801:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 802:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 804:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 805:ThirdParty/FreeRTOS/Source/queue.c **** 					else
 806:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 807:ThirdParty/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 808:ThirdParty/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 809:ThirdParty/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 810:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 811:ThirdParty/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 812:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 813:ThirdParty/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 814:ThirdParty/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 815:ThirdParty/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 816:ThirdParty/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 817:ThirdParty/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 818:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 819:ThirdParty/FreeRTOS/Source/queue.c **** 							else
 820:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 821:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 822:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 823:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 824:ThirdParty/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 825:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 826:ThirdParty/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 827:ThirdParty/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 828:ThirdParty/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
ARM GAS  /tmp/cc2CcJyq.s 			page 16


 829:ThirdParty/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 830:ThirdParty/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 831:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 832:ThirdParty/FreeRTOS/Source/queue.c **** 						else
 833:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 834:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 835:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 836:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 837:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 838:ThirdParty/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 839:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 840:ThirdParty/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 841:ThirdParty/FreeRTOS/Source/queue.c **** 
 842:ThirdParty/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 843:ThirdParty/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 844:ThirdParty/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 845:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 846:ThirdParty/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 847:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 848:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 849:ThirdParty/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 850:ThirdParty/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 851:ThirdParty/FreeRTOS/Source/queue.c **** 							takes care of that. */
 852:ThirdParty/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 853:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 854:ThirdParty/FreeRTOS/Source/queue.c **** 						else
 855:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 856:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 857:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 858:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 859:ThirdParty/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 860:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 861:ThirdParty/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 862:ThirdParty/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 863:ThirdParty/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 864:ThirdParty/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 865:ThirdParty/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 866:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 867:ThirdParty/FreeRTOS/Source/queue.c **** 					else
 868:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 869:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 870:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 871:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 872:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 873:ThirdParty/FreeRTOS/Source/queue.c **** 
 874:ThirdParty/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 875:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
 876:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 877:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 878:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 879:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 880:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 881:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 882:ThirdParty/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 883:ThirdParty/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 884:ThirdParty/FreeRTOS/Source/queue.c **** 
 885:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
ARM GAS  /tmp/cc2CcJyq.s 			page 17


 886:ThirdParty/FreeRTOS/Source/queue.c **** 					the function. */
 887:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 888:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 889:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 890:ThirdParty/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 891:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 892:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 893:ThirdParty/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 894:ThirdParty/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 895:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 896:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 897:ThirdParty/FreeRTOS/Source/queue.c **** 				else
 898:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 899:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 900:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 901:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 902:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 903:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 904:ThirdParty/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 905:ThirdParty/FreeRTOS/Source/queue.c **** 
 906:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 907:ThirdParty/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 908:ThirdParty/FreeRTOS/Source/queue.c **** 
 909:ThirdParty/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 910:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 911:ThirdParty/FreeRTOS/Source/queue.c **** 
 912:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 913:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 914:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 915:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 916:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 917:ThirdParty/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 918:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 919:ThirdParty/FreeRTOS/Source/queue.c **** 
 920:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 921:ThirdParty/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 922:ThirdParty/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 923:ThirdParty/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 924:ThirdParty/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 925:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 926:ThirdParty/FreeRTOS/Source/queue.c **** 
 927:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 928:ThirdParty/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 929:ThirdParty/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 930:ThirdParty/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 931:ThirdParty/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 932:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 933:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 934:ThirdParty/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 935:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 936:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 937:ThirdParty/FreeRTOS/Source/queue.c **** 			else
 938:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 939:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Try again. */
 940:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 941:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 942:ThirdParty/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc2CcJyq.s 			page 18


 943:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 944:ThirdParty/FreeRTOS/Source/queue.c **** 		else
 945:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 946:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 947:ThirdParty/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 948:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 949:ThirdParty/FreeRTOS/Source/queue.c **** 
 950:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 951:ThirdParty/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 952:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 953:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 954:ThirdParty/FreeRTOS/Source/queue.c **** }
 955:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 956:ThirdParty/FreeRTOS/Source/queue.c **** 
 957:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 958:ThirdParty/FreeRTOS/Source/queue.c **** {
 959:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 960:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 961:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 962:ThirdParty/FreeRTOS/Source/queue.c **** 
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 965:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 966:ThirdParty/FreeRTOS/Source/queue.c **** 
 967:ThirdParty/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 968:ThirdParty/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 969:ThirdParty/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 970:ThirdParty/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 971:ThirdParty/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 972:ThirdParty/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 973:ThirdParty/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 974:ThirdParty/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 975:ThirdParty/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 976:ThirdParty/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 977:ThirdParty/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 978:ThirdParty/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 979:ThirdParty/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 980:ThirdParty/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 981:ThirdParty/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 982:ThirdParty/FreeRTOS/Source/queue.c **** 
 983:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 984:ThirdParty/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 985:ThirdParty/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 986:ThirdParty/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 987:ThirdParty/FreeRTOS/Source/queue.c **** 	post). */
 988:ThirdParty/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 989:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 991:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 992:ThirdParty/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 993:ThirdParty/FreeRTOS/Source/queue.c **** 
 994:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 995:ThirdParty/FreeRTOS/Source/queue.c **** 
 996:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 997:ThirdParty/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 998:ThirdParty/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 999:ThirdParty/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
ARM GAS  /tmp/cc2CcJyq.s 			page 19


1000:ThirdParty/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1001:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
1002:ThirdParty/FreeRTOS/Source/queue.c **** 
1003:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1004:ThirdParty/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1005:ThirdParty/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1006:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1007:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1008:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1009:ThirdParty/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1010:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1011:ThirdParty/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
1012:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1013:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1014:ThirdParty/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1015:ThirdParty/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1016:ThirdParty/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1018:ThirdParty/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1020:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1021:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1022:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1023:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1024:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1025:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1026:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1027:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1028:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1029:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1030:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1031:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1032:ThirdParty/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1033:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1034:ThirdParty/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1035:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1036:ThirdParty/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1037:ThirdParty/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1038:ThirdParty/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1039:ThirdParty/FreeRTOS/Source/queue.c **** 								{
1040:ThirdParty/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1041:ThirdParty/FreeRTOS/Source/queue.c **** 								}
1042:ThirdParty/FreeRTOS/Source/queue.c **** 								else
1043:ThirdParty/FreeRTOS/Source/queue.c **** 								{
1044:ThirdParty/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1045:ThirdParty/FreeRTOS/Source/queue.c **** 								}
1046:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1047:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1048:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1049:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1050:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1051:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1052:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1053:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1054:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1055:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1056:ThirdParty/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cc2CcJyq.s 			page 20


1057:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1058:ThirdParty/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1059:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1060:ThirdParty/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1061:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1062:ThirdParty/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1063:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1064:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1065:ThirdParty/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1066:ThirdParty/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1067:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1068:ThirdParty/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1069:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1070:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1071:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1072:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1073:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1074:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1075:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1076:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1077:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1078:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1079:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1080:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1081:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1082:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1083:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1084:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1085:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1086:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1087:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1088:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1089:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1090:ThirdParty/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1091:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1092:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1093:ThirdParty/FreeRTOS/Source/queue.c **** 
1094:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1095:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1096:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1097:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1098:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1099:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1100:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1101:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1102:ThirdParty/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1103:ThirdParty/FreeRTOS/Source/queue.c **** 
1104:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
1105:ThirdParty/FreeRTOS/Source/queue.c **** }
1106:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1107:ThirdParty/FreeRTOS/Source/queue.c **** 
1108:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1109:ThirdParty/FreeRTOS/Source/queue.c **** {
1110:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1111:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1112:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1113:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 21


1114:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1115:ThirdParty/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1116:ThirdParty/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1117:ThirdParty/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1118:ThirdParty/FreeRTOS/Source/queue.c **** 	post). */
1119:ThirdParty/FreeRTOS/Source/queue.c **** 
1120:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1121:ThirdParty/FreeRTOS/Source/queue.c **** 
1122:ThirdParty/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1123:ThirdParty/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1124:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1125:ThirdParty/FreeRTOS/Source/queue.c **** 
1126:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1127:ThirdParty/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1128:ThirdParty/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1129:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1130:ThirdParty/FreeRTOS/Source/queue.c **** 
1131:ThirdParty/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1132:ThirdParty/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1133:ThirdParty/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1134:ThirdParty/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1135:ThirdParty/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1136:ThirdParty/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1137:ThirdParty/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1138:ThirdParty/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1139:ThirdParty/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1140:ThirdParty/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1141:ThirdParty/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1142:ThirdParty/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1143:ThirdParty/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1144:ThirdParty/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1145:ThirdParty/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1146:ThirdParty/FreeRTOS/Source/queue.c **** 
1147:ThirdParty/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1148:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1149:ThirdParty/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1150:ThirdParty/FreeRTOS/Source/queue.c **** 
1151:ThirdParty/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1152:ThirdParty/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1153:ThirdParty/FreeRTOS/Source/queue.c **** 		space'. */
1154:ThirdParty/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1155:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1156:ThirdParty/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1157:ThirdParty/FreeRTOS/Source/queue.c **** 
1158:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1159:ThirdParty/FreeRTOS/Source/queue.c **** 
1160:ThirdParty/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1161:ThirdParty/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1162:ThirdParty/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1163:ThirdParty/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1164:ThirdParty/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1165:ThirdParty/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1166:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1167:ThirdParty/FreeRTOS/Source/queue.c **** 
1168:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1169:ThirdParty/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1170:ThirdParty/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
ARM GAS  /tmp/cc2CcJyq.s 			page 22


1171:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1172:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1173:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1174:ThirdParty/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1175:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1176:ThirdParty/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1177:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1178:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1179:ThirdParty/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1180:ThirdParty/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1181:ThirdParty/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1182:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1183:ThirdParty/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1184:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1185:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1186:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1187:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1188:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1189:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1190:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1191:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1192:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1193:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1194:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1195:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1196:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1197:ThirdParty/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1198:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1199:ThirdParty/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1200:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1201:ThirdParty/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1202:ThirdParty/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1203:ThirdParty/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1204:ThirdParty/FreeRTOS/Source/queue.c **** 								{
1205:ThirdParty/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1206:ThirdParty/FreeRTOS/Source/queue.c **** 								}
1207:ThirdParty/FreeRTOS/Source/queue.c **** 								else
1208:ThirdParty/FreeRTOS/Source/queue.c **** 								{
1209:ThirdParty/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1210:ThirdParty/FreeRTOS/Source/queue.c **** 								}
1211:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1212:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1213:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1214:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1215:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1216:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1217:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1218:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1219:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1220:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1221:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1222:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1223:ThirdParty/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1224:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1225:ThirdParty/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1226:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1227:ThirdParty/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS  /tmp/cc2CcJyq.s 			page 23


1228:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1229:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1230:ThirdParty/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1231:ThirdParty/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1232:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1233:ThirdParty/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1234:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1235:ThirdParty/FreeRTOS/Source/queue.c **** 							else
1236:ThirdParty/FreeRTOS/Source/queue.c **** 							{
1237:ThirdParty/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1238:ThirdParty/FreeRTOS/Source/queue.c **** 							}
1239:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1240:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1241:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1242:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1243:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1244:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1245:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1246:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1247:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1248:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1249:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1250:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1251:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1252:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1253:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1254:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1255:ThirdParty/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1256:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1257:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1258:ThirdParty/FreeRTOS/Source/queue.c **** 
1259:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1260:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1261:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1262:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1263:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1264:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1265:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1266:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1267:ThirdParty/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1268:ThirdParty/FreeRTOS/Source/queue.c **** 
1269:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
1270:ThirdParty/FreeRTOS/Source/queue.c **** }
1271:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1272:ThirdParty/FreeRTOS/Source/queue.c **** 
1273:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1274:ThirdParty/FreeRTOS/Source/queue.c **** {
1275:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1276:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1277:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1278:ThirdParty/FreeRTOS/Source/queue.c **** 
1279:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1280:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1281:ThirdParty/FreeRTOS/Source/queue.c **** 
1282:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1283:ThirdParty/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1284:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
ARM GAS  /tmp/cc2CcJyq.s 			page 24


1285:ThirdParty/FreeRTOS/Source/queue.c **** 
1286:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1287:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1288:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1289:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1290:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1291:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
1292:ThirdParty/FreeRTOS/Source/queue.c **** 
1293:ThirdParty/FreeRTOS/Source/queue.c **** 
1294:ThirdParty/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1295:ThirdParty/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1296:ThirdParty/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1297:ThirdParty/FreeRTOS/Source/queue.c **** 	for( ;; )
1298:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1299:ThirdParty/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1300:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1301:ThirdParty/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1302:ThirdParty/FreeRTOS/Source/queue.c **** 
1303:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1304:ThirdParty/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1305:ThirdParty/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1306:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1307:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1308:ThirdParty/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1309:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1310:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1311:ThirdParty/FreeRTOS/Source/queue.c **** 
1312:ThirdParty/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1313:ThirdParty/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1314:ThirdParty/FreeRTOS/Source/queue.c **** 				task. */
1315:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1316:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1317:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1318:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1319:ThirdParty/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1320:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1321:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1322:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1323:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1324:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1325:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1326:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1327:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1328:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1329:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1330:ThirdParty/FreeRTOS/Source/queue.c **** 
1331:ThirdParty/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1332:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
1333:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1334:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1335:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1336:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1337:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1338:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1339:ThirdParty/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1340:ThirdParty/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1341:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
ARM GAS  /tmp/cc2CcJyq.s 			page 25


1342:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1343:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1344:ThirdParty/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1345:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1346:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1347:ThirdParty/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1348:ThirdParty/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1349:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1350:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1351:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1352:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1353:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1354:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1355:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1356:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1357:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1358:ThirdParty/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1359:ThirdParty/FreeRTOS/Source/queue.c **** 
1360:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1361:ThirdParty/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1362:ThirdParty/FreeRTOS/Source/queue.c **** 
1363:ThirdParty/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1364:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1365:ThirdParty/FreeRTOS/Source/queue.c **** 
1366:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1367:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1368:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1369:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1370:ThirdParty/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1371:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1372:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1373:ThirdParty/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1374:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1375:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1376:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1377:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1378:ThirdParty/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1379:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1380:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1381:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1382:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1383:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1384:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1385:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1386:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1387:ThirdParty/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1388:ThirdParty/FreeRTOS/Source/queue.c **** 				data. */
1389:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1390:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1391:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1392:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1393:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1394:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1395:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1396:ThirdParty/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1397:ThirdParty/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1398:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  /tmp/cc2CcJyq.s 			page 26


1399:ThirdParty/FreeRTOS/Source/queue.c **** 
1400:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1401:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1402:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1403:ThirdParty/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1404:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1405:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1406:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1407:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1408:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1409:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1410:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1411:ThirdParty/FreeRTOS/Source/queue.c **** }
1412:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1413:ThirdParty/FreeRTOS/Source/queue.c **** 
1414:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1415:ThirdParty/FreeRTOS/Source/queue.c **** {
1416:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1417:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1418:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1419:ThirdParty/FreeRTOS/Source/queue.c **** 
1420:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1421:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1422:ThirdParty/FreeRTOS/Source/queue.c **** #endif
1423:ThirdParty/FreeRTOS/Source/queue.c **** 
1424:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1425:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1426:ThirdParty/FreeRTOS/Source/queue.c **** 
1427:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1428:ThirdParty/FreeRTOS/Source/queue.c **** 	0. */
1429:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1430:ThirdParty/FreeRTOS/Source/queue.c **** 
1431:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1432:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1433:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1434:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1435:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1436:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
1437:ThirdParty/FreeRTOS/Source/queue.c **** 
1438:ThirdParty/FreeRTOS/Source/queue.c **** 
1439:ThirdParty/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1440:ThirdParty/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1441:ThirdParty/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1442:ThirdParty/FreeRTOS/Source/queue.c **** 	for( ;; )
1443:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1444:ThirdParty/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1445:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1446:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1447:ThirdParty/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1448:ThirdParty/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1449:ThirdParty/FreeRTOS/Source/queue.c **** 
1450:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1451:ThirdParty/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1452:ThirdParty/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1453:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1454:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1455:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 27


1456:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1457:ThirdParty/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1458:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1459:ThirdParty/FreeRTOS/Source/queue.c **** 
1460:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1461:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1462:ThirdParty/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1463:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1464:ThirdParty/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1465:ThirdParty/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1466:ThirdParty/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1467:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1468:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1469:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1470:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1471:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1472:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1473:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1474:ThirdParty/FreeRTOS/Source/queue.c **** 
1475:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1476:ThirdParty/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1477:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1478:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1479:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1480:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1481:ThirdParty/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1482:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1483:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1484:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1485:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1486:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1487:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1488:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1489:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1490:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1491:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1492:ThirdParty/FreeRTOS/Source/queue.c **** 
1493:ThirdParty/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1494:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
1495:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1496:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1497:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1498:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1499:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1500:ThirdParty/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1501:ThirdParty/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1502:ThirdParty/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1503:ThirdParty/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1504:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1505:ThirdParty/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1506:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1507:ThirdParty/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1508:ThirdParty/FreeRTOS/Source/queue.c **** 
1509:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1510:ThirdParty/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1511:ThirdParty/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1512:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
ARM GAS  /tmp/cc2CcJyq.s 			page 28


1513:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1514:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1515:ThirdParty/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1516:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1517:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1518:ThirdParty/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1519:ThirdParty/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1520:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1521:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1522:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1523:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1524:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1525:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1526:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1527:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1528:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1529:ThirdParty/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1530:ThirdParty/FreeRTOS/Source/queue.c **** 
1531:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1532:ThirdParty/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1533:ThirdParty/FreeRTOS/Source/queue.c **** 
1534:ThirdParty/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1535:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1536:ThirdParty/FreeRTOS/Source/queue.c **** 
1537:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1538:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1539:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1540:ThirdParty/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1541:ThirdParty/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1542:ThirdParty/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1543:ThirdParty/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1544:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1545:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1546:ThirdParty/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1547:ThirdParty/FreeRTOS/Source/queue.c **** 
1548:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1550:ThirdParty/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1551:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1552:ThirdParty/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1553:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1554:ThirdParty/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1555:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1556:ThirdParty/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1557:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1558:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1559:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1560:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1561:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1562:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1563:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif
1564:ThirdParty/FreeRTOS/Source/queue.c **** 
1565:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1566:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1567:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1568:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1569:ThirdParty/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
ARM GAS  /tmp/cc2CcJyq.s 			page 29


1570:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1571:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1572:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1573:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1574:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1575:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1576:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1577:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1578:ThirdParty/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1579:ThirdParty/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1580:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1581:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1582:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1583:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1584:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1585:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1586:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1587:ThirdParty/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1588:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1589:ThirdParty/FreeRTOS/Source/queue.c **** 
1590:ThirdParty/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1591:ThirdParty/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1592:ThirdParty/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1593:ThirdParty/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1594:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1595:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1596:ThirdParty/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1597:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1598:ThirdParty/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1599:ThirdParty/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1600:ThirdParty/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1601:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1602:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1603:ThirdParty/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1604:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1605:ThirdParty/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1606:ThirdParty/FreeRTOS/Source/queue.c **** 
1607:ThirdParty/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1608:ThirdParty/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1609:ThirdParty/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1610:ThirdParty/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1611:ThirdParty/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1612:ThirdParty/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1613:ThirdParty/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1614:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1615:ThirdParty/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1616:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1617:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1618:ThirdParty/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1619:ThirdParty/FreeRTOS/Source/queue.c **** 
1620:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1621:ThirdParty/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1622:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1623:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1624:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1625:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1626:ThirdParty/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc2CcJyq.s 			page 30


1627:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1628:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1629:ThirdParty/FreeRTOS/Source/queue.c **** }
1630:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1631:ThirdParty/FreeRTOS/Source/queue.c **** 
1632:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1633:ThirdParty/FreeRTOS/Source/queue.c **** {
1634:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1635:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1636:ThirdParty/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1637:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1638:ThirdParty/FreeRTOS/Source/queue.c **** 
1639:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1640:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1641:ThirdParty/FreeRTOS/Source/queue.c **** 
1642:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1643:ThirdParty/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1644:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1645:ThirdParty/FreeRTOS/Source/queue.c **** 
1646:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1647:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1648:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1649:ThirdParty/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1650:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1651:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
1652:ThirdParty/FreeRTOS/Source/queue.c **** 
1653:ThirdParty/FreeRTOS/Source/queue.c **** 
1654:ThirdParty/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1655:ThirdParty/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1656:ThirdParty/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1657:ThirdParty/FreeRTOS/Source/queue.c **** 	for( ;; )
1658:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1659:ThirdParty/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1660:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1661:ThirdParty/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1662:ThirdParty/FreeRTOS/Source/queue.c **** 
1663:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1664:ThirdParty/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1665:ThirdParty/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1666:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1667:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1668:ThirdParty/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1669:ThirdParty/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1670:ThirdParty/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1671:ThirdParty/FreeRTOS/Source/queue.c **** 
1672:ThirdParty/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1673:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1674:ThirdParty/FreeRTOS/Source/queue.c **** 
1675:ThirdParty/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1676:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1677:ThirdParty/FreeRTOS/Source/queue.c **** 
1678:ThirdParty/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1679:ThirdParty/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1680:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1681:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1682:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1683:ThirdParty/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/cc2CcJyq.s 			page 31


1684:ThirdParty/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1685:ThirdParty/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1686:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1687:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1688:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1689:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1690:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1691:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1692:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1693:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1694:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1695:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1696:ThirdParty/FreeRTOS/Source/queue.c **** 
1697:ThirdParty/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1698:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
1699:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1700:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1701:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1702:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1703:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1704:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1705:ThirdParty/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1706:ThirdParty/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1707:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1708:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1709:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1710:ThirdParty/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1711:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1712:ThirdParty/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1713:ThirdParty/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1714:ThirdParty/FreeRTOS/Source/queue.c **** 					state. */
1715:ThirdParty/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1716:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1717:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1718:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1719:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1720:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1721:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1722:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1723:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1724:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1725:ThirdParty/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1726:ThirdParty/FreeRTOS/Source/queue.c **** 
1727:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1728:ThirdParty/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1729:ThirdParty/FreeRTOS/Source/queue.c **** 
1730:ThirdParty/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1731:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1732:ThirdParty/FreeRTOS/Source/queue.c **** 
1733:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1734:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1735:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1736:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1737:ThirdParty/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1738:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1739:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1740:ThirdParty/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
ARM GAS  /tmp/cc2CcJyq.s 			page 32


1741:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1742:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1743:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1744:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1745:ThirdParty/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1746:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1747:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1748:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1749:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1750:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1751:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1752:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1753:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1754:ThirdParty/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1755:ThirdParty/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1756:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1757:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1758:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1759:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1760:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1761:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1762:ThirdParty/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1763:ThirdParty/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1764:ThirdParty/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1765:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1766:ThirdParty/FreeRTOS/Source/queue.c **** 
1767:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1768:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1769:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1770:ThirdParty/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1771:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1772:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1773:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1774:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1775:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1776:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1777:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1778:ThirdParty/FreeRTOS/Source/queue.c **** }
1779:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1780:ThirdParty/FreeRTOS/Source/queue.c **** 
1781:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1782:ThirdParty/FreeRTOS/Source/queue.c **** {
1783:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1784:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1785:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1786:ThirdParty/FreeRTOS/Source/queue.c **** 
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1788:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1789:ThirdParty/FreeRTOS/Source/queue.c **** 
1790:ThirdParty/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1791:ThirdParty/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1792:ThirdParty/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1793:ThirdParty/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1794:ThirdParty/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1795:ThirdParty/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1796:ThirdParty/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1797:ThirdParty/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
ARM GAS  /tmp/cc2CcJyq.s 			page 33


1798:ThirdParty/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1799:ThirdParty/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1800:ThirdParty/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1801:ThirdParty/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1802:ThirdParty/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1803:ThirdParty/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1804:ThirdParty/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1805:ThirdParty/FreeRTOS/Source/queue.c **** 
1806:ThirdParty/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1807:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1808:ThirdParty/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1809:ThirdParty/FreeRTOS/Source/queue.c **** 
1810:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1811:ThirdParty/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1812:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1813:ThirdParty/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1814:ThirdParty/FreeRTOS/Source/queue.c **** 
1815:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1816:ThirdParty/FreeRTOS/Source/queue.c **** 
1817:ThirdParty/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1818:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1819:ThirdParty/FreeRTOS/Source/queue.c **** 
1820:ThirdParty/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1821:ThirdParty/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1822:ThirdParty/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1823:ThirdParty/FreeRTOS/Source/queue.c **** 			locked. */
1824:ThirdParty/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1825:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1826:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1827:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1828:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1829:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1830:ThirdParty/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1831:ThirdParty/FreeRTOS/Source/queue.c **** 						force a context switch. */
1832:ThirdParty/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1833:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1834:ThirdParty/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1835:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1836:ThirdParty/FreeRTOS/Source/queue.c **** 						else
1837:ThirdParty/FreeRTOS/Source/queue.c **** 						{
1838:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1839:ThirdParty/FreeRTOS/Source/queue.c **** 						}
1840:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1841:ThirdParty/FreeRTOS/Source/queue.c **** 					else
1842:ThirdParty/FreeRTOS/Source/queue.c **** 					{
1843:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1844:ThirdParty/FreeRTOS/Source/queue.c **** 					}
1845:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1846:ThirdParty/FreeRTOS/Source/queue.c **** 				else
1847:ThirdParty/FreeRTOS/Source/queue.c **** 				{
1848:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1849:ThirdParty/FreeRTOS/Source/queue.c **** 				}
1850:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1851:ThirdParty/FreeRTOS/Source/queue.c **** 			else
1852:ThirdParty/FreeRTOS/Source/queue.c **** 			{
1853:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1854:ThirdParty/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
ARM GAS  /tmp/cc2CcJyq.s 			page 34


1855:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1856:ThirdParty/FreeRTOS/Source/queue.c **** 			}
1857:ThirdParty/FreeRTOS/Source/queue.c **** 
1858:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1859:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1860:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1861:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1862:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1863:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1864:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1865:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1866:ThirdParty/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1867:ThirdParty/FreeRTOS/Source/queue.c **** 
1868:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
1869:ThirdParty/FreeRTOS/Source/queue.c **** }
1870:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1871:ThirdParty/FreeRTOS/Source/queue.c **** 
1872:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1873:ThirdParty/FreeRTOS/Source/queue.c **** {
1874:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1875:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1876:ThirdParty/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1877:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1878:ThirdParty/FreeRTOS/Source/queue.c **** 
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1881:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1882:ThirdParty/FreeRTOS/Source/queue.c **** 
1883:ThirdParty/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1884:ThirdParty/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1885:ThirdParty/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1886:ThirdParty/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1887:ThirdParty/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1888:ThirdParty/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1889:ThirdParty/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1890:ThirdParty/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1891:ThirdParty/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1892:ThirdParty/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1893:ThirdParty/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1894:ThirdParty/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1895:ThirdParty/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1896:ThirdParty/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1897:ThirdParty/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1898:ThirdParty/FreeRTOS/Source/queue.c **** 
1899:ThirdParty/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1900:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1901:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1902:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1903:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1904:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1905:ThirdParty/FreeRTOS/Source/queue.c **** 
1906:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1907:ThirdParty/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1908:ThirdParty/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1909:ThirdParty/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1910:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1911:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 35


1912:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1913:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1914:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1915:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1916:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1917:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1918:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1919:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1920:ThirdParty/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1921:ThirdParty/FreeRTOS/Source/queue.c **** 
1922:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
1923:ThirdParty/FreeRTOS/Source/queue.c **** }
1924:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1925:ThirdParty/FreeRTOS/Source/queue.c **** 
1926:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1927:ThirdParty/FreeRTOS/Source/queue.c **** {
1928:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1929:ThirdParty/FreeRTOS/Source/queue.c **** 
1930:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1931:ThirdParty/FreeRTOS/Source/queue.c **** 
1932:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1933:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1934:ThirdParty/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1936:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1937:ThirdParty/FreeRTOS/Source/queue.c **** 
1938:ThirdParty/FreeRTOS/Source/queue.c **** 	return uxReturn;
1939:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1941:ThirdParty/FreeRTOS/Source/queue.c **** 
1942:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1943:ThirdParty/FreeRTOS/Source/queue.c **** {
1944:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1945:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1946:ThirdParty/FreeRTOS/Source/queue.c **** 
1947:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1948:ThirdParty/FreeRTOS/Source/queue.c **** 
1949:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1950:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1951:ThirdParty/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1952:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1953:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1954:ThirdParty/FreeRTOS/Source/queue.c **** 
1955:ThirdParty/FreeRTOS/Source/queue.c **** 	return uxReturn;
1956:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1957:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1958:ThirdParty/FreeRTOS/Source/queue.c **** 
1959:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1960:ThirdParty/FreeRTOS/Source/queue.c **** {
1961:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1962:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1963:ThirdParty/FreeRTOS/Source/queue.c **** 
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1965:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1966:ThirdParty/FreeRTOS/Source/queue.c **** 
1967:ThirdParty/FreeRTOS/Source/queue.c **** 	return uxReturn;
1968:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
ARM GAS  /tmp/cc2CcJyq.s 			page 36


1969:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1970:ThirdParty/FreeRTOS/Source/queue.c **** 
1971:ThirdParty/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1972:ThirdParty/FreeRTOS/Source/queue.c **** {
1973:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1974:ThirdParty/FreeRTOS/Source/queue.c **** 
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1976:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1977:ThirdParty/FreeRTOS/Source/queue.c **** 
1978:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1979:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1980:ThirdParty/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1981:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1982:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif
1983:ThirdParty/FreeRTOS/Source/queue.c **** 
1984:ThirdParty/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1985:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1986:ThirdParty/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1987:ThirdParty/FreeRTOS/Source/queue.c **** 		again. */
1988:ThirdParty/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1989:ThirdParty/FreeRTOS/Source/queue.c **** 	}
1990:ThirdParty/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1991:ThirdParty/FreeRTOS/Source/queue.c **** 	{
1992:ThirdParty/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1993:ThirdParty/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1994:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1995:ThirdParty/FreeRTOS/Source/queue.c **** 		{
1996:ThirdParty/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1997:ThirdParty/FreeRTOS/Source/queue.c **** 		}
1998:ThirdParty/FreeRTOS/Source/queue.c **** 		else
1999:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2000:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2001:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2002:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2003:ThirdParty/FreeRTOS/Source/queue.c **** 	#else
2004:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2005:ThirdParty/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2006:ThirdParty/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2007:ThirdParty/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2008:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2009:ThirdParty/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2010:ThirdParty/FreeRTOS/Source/queue.c **** }
2011:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2012:ThirdParty/FreeRTOS/Source/queue.c **** 
2013:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2014:ThirdParty/FreeRTOS/Source/queue.c **** 
2015:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2016:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2017:ThirdParty/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2018:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2019:ThirdParty/FreeRTOS/Source/queue.c **** 
2020:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2021:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2022:ThirdParty/FreeRTOS/Source/queue.c **** 
2023:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2024:ThirdParty/FreeRTOS/Source/queue.c **** 
2025:ThirdParty/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
ARM GAS  /tmp/cc2CcJyq.s 			page 37


2026:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2027:ThirdParty/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
2028:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2029:ThirdParty/FreeRTOS/Source/queue.c **** 
2030:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2031:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2032:ThirdParty/FreeRTOS/Source/queue.c **** 
2033:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2034:ThirdParty/FreeRTOS/Source/queue.c **** 
2035:ThirdParty/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2036:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2037:ThirdParty/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2038:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2039:ThirdParty/FreeRTOS/Source/queue.c **** 
2040:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2041:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2042:ThirdParty/FreeRTOS/Source/queue.c **** 
2043:ThirdParty/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2044:ThirdParty/FreeRTOS/Source/queue.c **** 
2045:ThirdParty/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2046:ThirdParty/FreeRTOS/Source/queue.c **** 	{
  29              		.loc 1 2046 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 2046 2 is_stmt 0 view .LVU1
  35 0000 0346     		mov	r3, r0
2047:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
  36              		.loc 1 2047 2 is_stmt 1 view .LVU2
2048:ThirdParty/FreeRTOS/Source/queue.c **** 
2049:ThirdParty/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2050:ThirdParty/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2051:ThirdParty/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2052:ThirdParty/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2053:ThirdParty/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2054:ThirdParty/FreeRTOS/Source/queue.c **** 		mutex. */
2055:ThirdParty/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  37              		.loc 1 2055 3 view .LVU3
  38              		.loc 1 2055 7 is_stmt 0 view .LVU4
  39 0002 406A     		ldr	r0, [r0, #36]
  40              	.LVL1:
  41              		.loc 1 2055 5 view .LVU5
  42 0004 18B1     		cbz	r0, .L1
2056:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2057:ThirdParty/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  43              		.loc 1 2057 4 is_stmt 1 view .LVU6
  44              		.loc 1 2057 93 is_stmt 0 view .LVU7
  45 0006 1B6B     		ldr	r3, [r3, #48]
  46              	.LVL2:
  47              		.loc 1 2057 93 view .LVU8
  48 0008 1868     		ldr	r0, [r3]
  49              		.loc 1 2057 36 view .LVU9
  50 000a C0F10700 		rsb	r0, r0, #7
  51              	.LVL3:
2058:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2059:ThirdParty/FreeRTOS/Source/queue.c **** 		else
ARM GAS  /tmp/cc2CcJyq.s 			page 38


2060:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2061:ThirdParty/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
2062:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2063:ThirdParty/FreeRTOS/Source/queue.c **** 
2064:ThirdParty/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
  52              		.loc 1 2064 3 is_stmt 1 view .LVU10
  53              	.L1:
2065:ThirdParty/FreeRTOS/Source/queue.c **** 	}
  54              		.loc 1 2065 2 is_stmt 0 view .LVU11
  55 000e 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE22:
  59              		.section	.text.prvIsQueueFull,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	prvIsQueueFull:
  66              	.LVL4:
  67              	.LFB28:
2066:ThirdParty/FreeRTOS/Source/queue.c **** 
2067:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2068:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2069:ThirdParty/FreeRTOS/Source/queue.c **** 
2070:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2071:ThirdParty/FreeRTOS/Source/queue.c **** {
2072:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2073:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2074:ThirdParty/FreeRTOS/Source/queue.c **** 
2075:ThirdParty/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2076:ThirdParty/FreeRTOS/Source/queue.c **** 
2077:ThirdParty/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2078:ThirdParty/FreeRTOS/Source/queue.c **** 
2079:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2080:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2081:ThirdParty/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2082:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2083:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2084:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2085:ThirdParty/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2086:ThirdParty/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2087:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2088:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2089:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2090:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2091:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2092:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2093:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2094:ThirdParty/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2095:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2096:ThirdParty/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2097:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2098:ThirdParty/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2099:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2100:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2101:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2102:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
ARM GAS  /tmp/cc2CcJyq.s 			page 39


2103:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2104:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2105:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2106:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2107:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2108:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2109:ThirdParty/FreeRTOS/Source/queue.c **** 	else
2110:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2111:ThirdParty/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2112:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2113:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2114:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2115:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2116:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2117:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2118:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2119:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2120:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2121:ThirdParty/FreeRTOS/Source/queue.c **** 
2122:ThirdParty/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2123:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2124:ThirdParty/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2125:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2126:ThirdParty/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2127:ThirdParty/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2128:ThirdParty/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2129:ThirdParty/FreeRTOS/Source/queue.c **** 				correct. */
2130:ThirdParty/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2131:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2132:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2133:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2134:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2135:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2136:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2137:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2138:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2139:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2140:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2141:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2142:ThirdParty/FreeRTOS/Source/queue.c **** 
2143:ThirdParty/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2144:ThirdParty/FreeRTOS/Source/queue.c **** 
2145:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
2146:ThirdParty/FreeRTOS/Source/queue.c **** }
2147:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2148:ThirdParty/FreeRTOS/Source/queue.c **** 
2149:ThirdParty/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2150:ThirdParty/FreeRTOS/Source/queue.c **** {
2151:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2152:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2153:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2154:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2155:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2156:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2157:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2158:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2159:ThirdParty/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cc2CcJyq.s 			page 40


2160:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2161:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2162:ThirdParty/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2163:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2164:ThirdParty/FreeRTOS/Source/queue.c **** }
2165:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2166:ThirdParty/FreeRTOS/Source/queue.c **** 
2167:ThirdParty/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2168:ThirdParty/FreeRTOS/Source/queue.c **** {
2169:ThirdParty/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2170:ThirdParty/FreeRTOS/Source/queue.c **** 
2171:ThirdParty/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2172:ThirdParty/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2173:ThirdParty/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2174:ThirdParty/FreeRTOS/Source/queue.c **** 	updated. */
2175:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2176:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2177:ThirdParty/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2178:ThirdParty/FreeRTOS/Source/queue.c **** 
2179:ThirdParty/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2180:ThirdParty/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2181:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2182:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2183:ThirdParty/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2184:ThirdParty/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2185:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2186:ThirdParty/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2187:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2188:ThirdParty/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2189:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2190:ThirdParty/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2191:ThirdParty/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2192:ThirdParty/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2193:ThirdParty/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2194:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2195:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2196:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2197:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2198:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2199:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2200:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2201:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2202:ThirdParty/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2203:ThirdParty/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2204:ThirdParty/FreeRTOS/Source/queue.c **** 					suspended. */
2205:ThirdParty/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2206:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2207:ThirdParty/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2208:ThirdParty/FreeRTOS/Source/queue.c **** 						{
2209:ThirdParty/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2210:ThirdParty/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2211:ThirdParty/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2212:ThirdParty/FreeRTOS/Source/queue.c **** 						}
2213:ThirdParty/FreeRTOS/Source/queue.c **** 						else
2214:ThirdParty/FreeRTOS/Source/queue.c **** 						{
2215:ThirdParty/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2216:ThirdParty/FreeRTOS/Source/queue.c **** 						}
ARM GAS  /tmp/cc2CcJyq.s 			page 41


2217:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2218:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2219:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2220:ThirdParty/FreeRTOS/Source/queue.c **** 						break;
2221:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2222:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2223:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2224:ThirdParty/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2225:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2226:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2227:ThirdParty/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2228:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2229:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2230:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2231:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2232:ThirdParty/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2233:ThirdParty/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2234:ThirdParty/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2235:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2236:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2237:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2238:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2239:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2240:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2241:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2242:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2243:ThirdParty/FreeRTOS/Source/queue.c **** 					break;
2244:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2245:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2246:ThirdParty/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2247:ThirdParty/FreeRTOS/Source/queue.c **** 
2248:ThirdParty/FreeRTOS/Source/queue.c **** 			--cTxLock;
2249:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2250:ThirdParty/FreeRTOS/Source/queue.c **** 
2251:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2252:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2253:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2254:ThirdParty/FreeRTOS/Source/queue.c **** 
2255:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2256:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2257:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2258:ThirdParty/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2259:ThirdParty/FreeRTOS/Source/queue.c **** 
2260:ThirdParty/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2261:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2262:ThirdParty/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2263:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2264:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2265:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2266:ThirdParty/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2267:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2268:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2269:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2270:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2271:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2272:ThirdParty/FreeRTOS/Source/queue.c **** 
2273:ThirdParty/FreeRTOS/Source/queue.c **** 				--cRxLock;
ARM GAS  /tmp/cc2CcJyq.s 			page 42


2274:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2275:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2276:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2277:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
2278:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2279:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2280:ThirdParty/FreeRTOS/Source/queue.c **** 
2281:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2282:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2283:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2284:ThirdParty/FreeRTOS/Source/queue.c **** }
2285:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2286:ThirdParty/FreeRTOS/Source/queue.c **** 
2287:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2288:ThirdParty/FreeRTOS/Source/queue.c **** {
2289:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2290:ThirdParty/FreeRTOS/Source/queue.c **** 
2291:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2292:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2293:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2294:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2295:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2296:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2297:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2298:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2299:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2300:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2301:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2302:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2303:ThirdParty/FreeRTOS/Source/queue.c **** 
2304:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
2305:ThirdParty/FreeRTOS/Source/queue.c **** }
2306:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2307:ThirdParty/FreeRTOS/Source/queue.c **** 
2308:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2309:ThirdParty/FreeRTOS/Source/queue.c **** {
2310:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2311:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2312:ThirdParty/FreeRTOS/Source/queue.c **** 
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2314:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2315:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2316:ThirdParty/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2317:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2318:ThirdParty/FreeRTOS/Source/queue.c **** 	else
2319:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2320:ThirdParty/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2321:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2322:ThirdParty/FreeRTOS/Source/queue.c **** 
2323:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
2324:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2325:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2326:ThirdParty/FreeRTOS/Source/queue.c **** 
2327:ThirdParty/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2328:ThirdParty/FreeRTOS/Source/queue.c **** {
  68              		.loc 1 2328 1 is_stmt 1 view -0
  69              		.cfi_startproc
ARM GAS  /tmp/cc2CcJyq.s 			page 43


  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 2328 1 is_stmt 0 view .LVU13
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
  78 0002 0446     		mov	r4, r0
2329:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
  79              		.loc 1 2329 1 is_stmt 1 view .LVU14
2330:ThirdParty/FreeRTOS/Source/queue.c **** 
2331:ThirdParty/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  80              		.loc 1 2331 2 view .LVU15
  81 0004 FFF7FEFF 		bl	vPortEnterCritical
  82              	.LVL5:
2332:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2333:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  83              		.loc 1 2333 3 view .LVU16
  84              		.loc 1 2333 14 is_stmt 0 view .LVU17
  85 0008 A26B     		ldr	r2, [r4, #56]
  86              		.loc 1 2333 44 view .LVU18
  87 000a E36B     		ldr	r3, [r4, #60]
  88              		.loc 1 2333 5 view .LVU19
  89 000c 9A42     		cmp	r2, r3
  90 000e 04D0     		beq	.L7
2334:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2335:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2336:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2337:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2338:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2339:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  91              		.loc 1 2339 12 view .LVU20
  92 0010 0024     		movs	r4, #0
  93              	.LVL6:
  94              	.L4:
2340:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2341:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2342:ThirdParty/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  95              		.loc 1 2342 2 is_stmt 1 view .LVU21
  96 0012 FFF7FEFF 		bl	vPortExitCritical
  97              	.LVL7:
2343:ThirdParty/FreeRTOS/Source/queue.c **** 
2344:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
  98              		.loc 1 2344 2 view .LVU22
2345:ThirdParty/FreeRTOS/Source/queue.c **** }
  99              		.loc 1 2345 1 is_stmt 0 view .LVU23
 100 0016 2046     		mov	r0, r4
 101 0018 10BD     		pop	{r4, pc}
 102              	.LVL8:
 103              	.L7:
2335:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 104              		.loc 1 2335 12 view .LVU24
 105 001a 0124     		movs	r4, #1
 106              	.LVL9:
2335:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 107              		.loc 1 2335 12 view .LVU25
ARM GAS  /tmp/cc2CcJyq.s 			page 44


 108 001c F9E7     		b	.L4
 109              		.cfi_endproc
 110              	.LFE28:
 112              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	prvIsQueueEmpty:
 119              	.LVL10:
 120              	.LFB26:
2288:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 121              		.loc 1 2288 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
2288:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 125              		.loc 1 2288 1 is_stmt 0 view .LVU27
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
2289:ThirdParty/FreeRTOS/Source/queue.c **** 
 132              		.loc 1 2289 1 is_stmt 1 view .LVU28
2291:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 133              		.loc 1 2291 2 view .LVU29
 134 0004 FFF7FEFF 		bl	vPortEnterCritical
 135              	.LVL11:
2293:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 136              		.loc 1 2293 3 view .LVU30
2293:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 137              		.loc 1 2293 14 is_stmt 0 view .LVU31
 138 0008 A36B     		ldr	r3, [r4, #56]
2293:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 139              		.loc 1 2293 5 view .LVU32
 140 000a 23B9     		cbnz	r3, .L10
2295:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 141              		.loc 1 2295 12 view .LVU33
 142 000c 0124     		movs	r4, #1
 143              	.LVL12:
 144              	.L9:
2302:ThirdParty/FreeRTOS/Source/queue.c **** 
 145              		.loc 1 2302 2 is_stmt 1 view .LVU34
 146 000e FFF7FEFF 		bl	vPortExitCritical
 147              	.LVL13:
2304:ThirdParty/FreeRTOS/Source/queue.c **** }
 148              		.loc 1 2304 2 view .LVU35
2305:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 149              		.loc 1 2305 1 is_stmt 0 view .LVU36
 150 0012 2046     		mov	r0, r4
 151 0014 10BD     		pop	{r4, pc}
 152              	.LVL14:
 153              	.L10:
2299:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 154              		.loc 1 2299 12 view .LVU37
ARM GAS  /tmp/cc2CcJyq.s 			page 45


 155 0016 0024     		movs	r4, #0
 156              	.LVL15:
2299:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 157              		.loc 1 2299 12 view .LVU38
 158 0018 F9E7     		b	.L9
 159              		.cfi_endproc
 160              	.LFE26:
 162              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	prvCopyDataToQueue:
 169              	.LVL16:
 170              	.LFB23:
2071:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 171              		.loc 1 2071 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
2071:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 175              		.loc 1 2071 1 is_stmt 0 view .LVU40
 176 0000 70B5     		push	{r4, r5, r6, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 4, -16
 180              		.cfi_offset 5, -12
 181              		.cfi_offset 6, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
 184 0004 1546     		mov	r5, r2
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 185              		.loc 1 2072 1 is_stmt 1 view .LVU41
 186              	.LVL17:
2073:ThirdParty/FreeRTOS/Source/queue.c **** 
 187              		.loc 1 2073 1 view .LVU42
2077:ThirdParty/FreeRTOS/Source/queue.c **** 
 188              		.loc 1 2077 2 view .LVU43
2077:ThirdParty/FreeRTOS/Source/queue.c **** 
 189              		.loc 1 2077 20 is_stmt 0 view .LVU44
 190 0006 866B     		ldr	r6, [r0, #56]
 191              	.LVL18:
2079:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 192              		.loc 1 2079 2 is_stmt 1 view .LVU45
2079:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 193              		.loc 1 2079 13 is_stmt 0 view .LVU46
 194 0008 026C     		ldr	r2, [r0, #64]
 195              	.LVL19:
2079:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 196              		.loc 1 2079 4 view .LVU47
 197 000a 5AB9     		cbnz	r2, .L13
2083:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 198              		.loc 1 2083 4 is_stmt 1 view .LVU48
2083:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 199              		.loc 1 2083 15 is_stmt 0 view .LVU49
 200 000c 0368     		ldr	r3, [r0]
2083:ThirdParty/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cc2CcJyq.s 			page 46


 201              		.loc 1 2083 6 view .LVU50
 202 000e 1BB1     		cbz	r3, .L22
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 203              		.loc 1 2072 12 view .LVU51
 204 0010 0020     		movs	r0, #0
 205              	.LVL20:
 206              	.L14:
2139:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 207              		.loc 1 2139 28 is_stmt 1 view .LVU52
2143:ThirdParty/FreeRTOS/Source/queue.c **** 
 208              		.loc 1 2143 2 view .LVU53
2143:ThirdParty/FreeRTOS/Source/queue.c **** 
 209              		.loc 1 2143 49 is_stmt 0 view .LVU54
 210 0012 0136     		adds	r6, r6, #1
 211              	.LVL21:
2143:ThirdParty/FreeRTOS/Source/queue.c **** 
 212              		.loc 1 2143 29 view .LVU55
 213 0014 A663     		str	r6, [r4, #56]
2145:ThirdParty/FreeRTOS/Source/queue.c **** }
 214              		.loc 1 2145 2 is_stmt 1 view .LVU56
2146:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 215              		.loc 1 2146 1 is_stmt 0 view .LVU57
 216 0016 70BD     		pop	{r4, r5, r6, pc}
 217              	.LVL22:
 218              	.L22:
2086:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 219              		.loc 1 2086 5 is_stmt 1 view .LVU58
2086:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 220              		.loc 1 2086 15 is_stmt 0 view .LVU59
 221 0018 8068     		ldr	r0, [r0, #8]
 222              	.LVL23:
2086:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 223              		.loc 1 2086 15 view .LVU60
 224 001a FFF7FEFF 		bl	xTaskPriorityDisinherit
 225              	.LVL24:
2087:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 226              		.loc 1 2087 5 is_stmt 1 view .LVU61
2087:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 227              		.loc 1 2087 40 is_stmt 0 view .LVU62
 228 001e 0023     		movs	r3, #0
 229 0020 A360     		str	r3, [r4, #8]
 230 0022 F6E7     		b	.L14
 231              	.LVL25:
 232              	.L13:
2096:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 233              		.loc 1 2096 7 is_stmt 1 view .LVU63
2096:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 234              		.loc 1 2096 9 is_stmt 0 view .LVU64
 235 0024 6DB9     		cbnz	r5, .L15
2098:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 236              		.loc 1 2098 3 is_stmt 1 view .LVU65
2098:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 237              		.loc 1 2098 12 is_stmt 0 view .LVU66
 238 0026 4068     		ldr	r0, [r0, #4]
 239              	.LVL26:
2098:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 240              		.loc 1 2098 12 view .LVU67
ARM GAS  /tmp/cc2CcJyq.s 			page 47


 241 0028 FFF7FEFF 		bl	memcpy
 242              	.LVL27:
2099:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 243              		.loc 1 2099 3 is_stmt 1 view .LVU68
2099:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 244              		.loc 1 2099 32 is_stmt 0 view .LVU69
 245 002c 226C     		ldr	r2, [r4, #64]
2099:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 246              		.loc 1 2099 22 view .LVU70
 247 002e 6368     		ldr	r3, [r4, #4]
 248 0030 1344     		add	r3, r3, r2
 249 0032 6360     		str	r3, [r4, #4]
2100:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 250              		.loc 1 2100 3 is_stmt 1 view .LVU71
2100:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 251              		.loc 1 2100 46 is_stmt 0 view .LVU72
 252 0034 A268     		ldr	r2, [r4, #8]
2100:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 253              		.loc 1 2100 5 view .LVU73
 254 0036 9342     		cmp	r3, r2
 255 0038 19D3     		bcc	.L18
2102:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 256              		.loc 1 2102 4 is_stmt 1 view .LVU74
2102:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 257              		.loc 1 2102 32 is_stmt 0 view .LVU75
 258 003a 2368     		ldr	r3, [r4]
2102:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 259              		.loc 1 2102 23 view .LVU76
 260 003c 6360     		str	r3, [r4, #4]
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 261              		.loc 1 2072 12 view .LVU77
 262 003e 2846     		mov	r0, r5
 263 0040 E7E7     		b	.L14
 264              	.LVL28:
 265              	.L15:
2111:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 266              		.loc 1 2111 3 is_stmt 1 view .LVU78
2111:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 267              		.loc 1 2111 12 is_stmt 0 view .LVU79
 268 0042 C068     		ldr	r0, [r0, #12]
 269              	.LVL29:
2111:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 270              		.loc 1 2111 12 view .LVU80
 271 0044 FFF7FEFF 		bl	memcpy
 272              	.LVL30:
2112:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 273              		.loc 1 2112 3 is_stmt 1 view .LVU81
2112:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 274              		.loc 1 2112 42 is_stmt 0 view .LVU82
 275 0048 226C     		ldr	r2, [r4, #64]
2112:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 276              		.loc 1 2112 32 view .LVU83
 277 004a 5142     		rsbs	r1, r2, #0
 278 004c E368     		ldr	r3, [r4, #12]
 279 004e 9B1A     		subs	r3, r3, r2
 280 0050 E360     		str	r3, [r4, #12]
2113:ThirdParty/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cc2CcJyq.s 			page 48


 281              		.loc 1 2113 3 is_stmt 1 view .LVU84
2113:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 282              		.loc 1 2113 45 is_stmt 0 view .LVU85
 283 0052 2268     		ldr	r2, [r4]
2113:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 284              		.loc 1 2113 5 view .LVU86
 285 0054 9342     		cmp	r3, r2
 286 0056 02D2     		bcs	.L16
2115:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 287              		.loc 1 2115 4 is_stmt 1 view .LVU87
2115:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 288              		.loc 1 2115 54 is_stmt 0 view .LVU88
 289 0058 A368     		ldr	r3, [r4, #8]
2115:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 290              		.loc 1 2115 62 view .LVU89
 291 005a 0B44     		add	r3, r3, r1
2115:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 292              		.loc 1 2115 33 view .LVU90
 293 005c E360     		str	r3, [r4, #12]
 294              	.L16:
2119:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 295              		.loc 1 2119 28 is_stmt 1 view .LVU91
2122:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 296              		.loc 1 2122 3 view .LVU92
2122:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 297              		.loc 1 2122 5 is_stmt 0 view .LVU93
 298 005e 022D     		cmp	r5, #2
 299 0060 01D0     		beq	.L23
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 300              		.loc 1 2072 12 view .LVU94
 301 0062 0020     		movs	r0, #0
 302 0064 D5E7     		b	.L14
 303              	.L23:
2124:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 304              		.loc 1 2124 4 is_stmt 1 view .LVU95
2124:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 305              		.loc 1 2124 6 is_stmt 0 view .LVU96
 306 0066 26B1     		cbz	r6, .L20
2130:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 307              		.loc 1 2130 5 is_stmt 1 view .LVU97
 308 0068 013E     		subs	r6, r6, #1
 309              	.LVL31:
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 310              		.loc 1 2072 12 is_stmt 0 view .LVU98
 311 006a 0020     		movs	r0, #0
 312 006c D1E7     		b	.L14
 313              	.L18:
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 314              		.loc 1 2072 12 view .LVU99
 315 006e 2846     		mov	r0, r5
 316 0070 CFE7     		b	.L14
 317              	.L20:
2072:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 318              		.loc 1 2072 12 view .LVU100
 319 0072 0020     		movs	r0, #0
 320 0074 CDE7     		b	.L14
 321              		.cfi_endproc
ARM GAS  /tmp/cc2CcJyq.s 			page 49


 322              	.LFE23:
 324              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 330              	prvCopyDataFromQueue:
 331              	.LVL32:
 332              	.LFB24:
2150:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 333              		.loc 1 2150 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
2150:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 337              		.loc 1 2150 1 is_stmt 0 view .LVU102
 338 0000 0346     		mov	r3, r0
2151:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 339              		.loc 1 2151 2 is_stmt 1 view .LVU103
2151:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 340              		.loc 1 2151 13 is_stmt 0 view .LVU104
 341 0002 026C     		ldr	r2, [r0, #64]
2151:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 342              		.loc 1 2151 4 view .LVU105
 343 0004 6AB1     		cbz	r2, .L28
2150:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 344              		.loc 1 2150 1 view .LVU106
 345 0006 10B5     		push	{r4, lr}
 346              	.LCFI3:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 0008 0846     		mov	r0, r1
 351              	.LVL33:
2153:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 352              		.loc 1 2153 3 is_stmt 1 view .LVU107
2153:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 353              		.loc 1 2153 32 is_stmt 0 view .LVU108
 354 000a D968     		ldr	r1, [r3, #12]
 355              	.LVL34:
2153:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 356              		.loc 1 2153 32 view .LVU109
 357 000c 1144     		add	r1, r1, r2
 358 000e D960     		str	r1, [r3, #12]
2154:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 359              		.loc 1 2154 3 is_stmt 1 view .LVU110
2154:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 360              		.loc 1 2154 5 is_stmt 0 view .LVU111
 361 0010 9C68     		ldr	r4, [r3, #8]
 362 0012 A142     		cmp	r1, r4
 363 0014 01D3     		bcc	.L26
2156:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 364              		.loc 1 2156 4 is_stmt 1 view .LVU112
2156:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 365              		.loc 1 2156 42 is_stmt 0 view .LVU113
 366 0016 1968     		ldr	r1, [r3]
2156:ThirdParty/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cc2CcJyq.s 			page 50


 367              		.loc 1 2156 33 view .LVU114
 368 0018 D960     		str	r1, [r3, #12]
 369              	.L26:
2160:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 370              		.loc 1 2160 28 is_stmt 1 view .LVU115
2162:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 371              		.loc 1 2162 3 view .LVU116
2162:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 372              		.loc 1 2162 12 is_stmt 0 view .LVU117
 373 001a D968     		ldr	r1, [r3, #12]
 374 001c FFF7FEFF 		bl	memcpy
 375              	.LVL35:
2164:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 376              		.loc 1 2164 1 view .LVU118
 377 0020 10BD     		pop	{r4, pc}
 378              	.LVL36:
 379              	.L28:
 380              	.LCFI4:
 381              		.cfi_def_cfa_offset 0
 382              		.cfi_restore 4
 383              		.cfi_restore 14
2164:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 384              		.loc 1 2164 1 view .LVU119
 385 0022 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE24:
 389              		.section	.text.prvUnlockQueue,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	prvUnlockQueue:
 396              	.LVL37:
 397              	.LFB25:
2168:ThirdParty/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 398              		.loc 1 2168 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
2168:ThirdParty/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 402              		.loc 1 2168 1 is_stmt 0 view .LVU121
 403 0000 38B5     		push	{r3, r4, r5, lr}
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 16
 406              		.cfi_offset 3, -16
 407              		.cfi_offset 4, -12
 408              		.cfi_offset 5, -8
 409              		.cfi_offset 14, -4
 410 0002 0546     		mov	r5, r0
2175:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 411              		.loc 1 2175 2 is_stmt 1 view .LVU122
 412 0004 FFF7FEFF 		bl	vPortEnterCritical
 413              	.LVL38:
 414              	.LBB93:
2177:ThirdParty/FreeRTOS/Source/queue.c **** 
 415              		.loc 1 2177 3 view .LVU123
2177:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 51


 416              		.loc 1 2177 10 is_stmt 0 view .LVU124
 417 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 418 000c 64B2     		sxtb	r4, r4
 419              	.LVL39:
2180:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 420              		.loc 1 2180 3 is_stmt 1 view .LVU125
2180:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 421              		.loc 1 2180 8 is_stmt 0 view .LVU126
 422 000e 01E0     		b	.L32
 423              	.L34:
2238:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 424              		.loc 1 2238 31 is_stmt 1 view .LVU127
2248:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 425              		.loc 1 2248 4 view .LVU128
 426 0010 013C     		subs	r4, r4, #1
 427              	.LVL40:
2248:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 428              		.loc 1 2248 4 is_stmt 0 view .LVU129
 429 0012 64B2     		sxtb	r4, r4
 430              	.LVL41:
 431              	.L32:
2180:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 432              		.loc 1 2180 8 is_stmt 1 view .LVU130
 433 0014 002C     		cmp	r4, #0
 434 0016 0ADD     		ble	.L33
2228:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 435              		.loc 1 2228 5 view .LVU131
2228:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 436              		.loc 1 2228 9 is_stmt 0 view .LVU132
 437 0018 6B6A     		ldr	r3, [r5, #36]
2228:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 438              		.loc 1 2228 7 view .LVU133
 439 001a 43B1     		cbz	r3, .L33
2230:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 440              		.loc 1 2230 6 is_stmt 1 view .LVU134
2230:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 441              		.loc 1 2230 10 is_stmt 0 view .LVU135
 442 001c 05F12400 		add	r0, r5, #36
 443 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 444              	.LVL42:
2230:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 445              		.loc 1 2230 8 view .LVU136
 446 0024 0028     		cmp	r0, #0
 447 0026 F3D0     		beq	.L34
2234:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 448              		.loc 1 2234 7 is_stmt 1 view .LVU137
 449 0028 FFF7FEFF 		bl	vTaskMissedYield
 450              	.LVL43:
 451 002c F0E7     		b	.L34
 452              	.L33:
2251:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 453              		.loc 1 2251 3 view .LVU138
2251:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 454              		.loc 1 2251 20 is_stmt 0 view .LVU139
 455 002e FF23     		movs	r3, #255
 456 0030 85F84530 		strb	r3, [r5, #69]
 457              	.LBE93:
ARM GAS  /tmp/cc2CcJyq.s 			page 52


2253:ThirdParty/FreeRTOS/Source/queue.c **** 
 458              		.loc 1 2253 2 is_stmt 1 view .LVU140
 459 0034 FFF7FEFF 		bl	vPortExitCritical
 460              	.LVL44:
2256:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 461              		.loc 1 2256 2 view .LVU141
 462 0038 FFF7FEFF 		bl	vPortEnterCritical
 463              	.LVL45:
 464              	.LBB94:
2258:ThirdParty/FreeRTOS/Source/queue.c **** 
 465              		.loc 1 2258 3 view .LVU142
2258:ThirdParty/FreeRTOS/Source/queue.c **** 
 466              		.loc 1 2258 10 is_stmt 0 view .LVU143
 467 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 468              	.LVL46:
2258:ThirdParty/FreeRTOS/Source/queue.c **** 
 469              		.loc 1 2258 10 view .LVU144
 470 0040 64B2     		sxtb	r4, r4
 471              	.LVL47:
2260:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 472              		.loc 1 2260 3 is_stmt 1 view .LVU145
2260:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 473              		.loc 1 2260 8 is_stmt 0 view .LVU146
 474 0042 01E0     		b	.L36
 475              	.L38:
2270:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 476              		.loc 1 2270 30 is_stmt 1 view .LVU147
2273:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 477              		.loc 1 2273 5 view .LVU148
 478 0044 013C     		subs	r4, r4, #1
 479              	.LVL48:
2273:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 480              		.loc 1 2273 5 is_stmt 0 view .LVU149
 481 0046 64B2     		sxtb	r4, r4
 482              	.LVL49:
 483              	.L36:
2260:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 484              		.loc 1 2260 8 is_stmt 1 view .LVU150
 485 0048 002C     		cmp	r4, #0
 486 004a 0ADD     		ble	.L37
2262:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 487              		.loc 1 2262 4 view .LVU151
2262:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 488              		.loc 1 2262 8 is_stmt 0 view .LVU152
 489 004c 2B69     		ldr	r3, [r5, #16]
2262:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 490              		.loc 1 2262 6 view .LVU153
 491 004e 43B1     		cbz	r3, .L37
2264:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 492              		.loc 1 2264 5 is_stmt 1 view .LVU154
2264:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 493              		.loc 1 2264 9 is_stmt 0 view .LVU155
 494 0050 05F11000 		add	r0, r5, #16
 495 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 496              	.LVL50:
2264:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 497              		.loc 1 2264 7 view .LVU156
ARM GAS  /tmp/cc2CcJyq.s 			page 53


 498 0058 0028     		cmp	r0, #0
 499 005a F3D0     		beq	.L38
2266:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 500              		.loc 1 2266 6 is_stmt 1 view .LVU157
 501 005c FFF7FEFF 		bl	vTaskMissedYield
 502              	.LVL51:
 503 0060 F0E7     		b	.L38
 504              	.L37:
2281:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 505              		.loc 1 2281 3 view .LVU158
2281:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 506              		.loc 1 2281 20 is_stmt 0 view .LVU159
 507 0062 FF23     		movs	r3, #255
 508 0064 85F84430 		strb	r3, [r5, #68]
 509              	.LBE94:
2283:ThirdParty/FreeRTOS/Source/queue.c **** }
 510              		.loc 1 2283 2 is_stmt 1 view .LVU160
 511 0068 FFF7FEFF 		bl	vPortExitCritical
 512              	.LVL52:
2284:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 513              		.loc 1 2284 1 is_stmt 0 view .LVU161
 514 006c 38BD     		pop	{r3, r4, r5, pc}
2284:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515              		.loc 1 2284 1 view .LVU162
 516              		.cfi_endproc
 517              	.LFE25:
 519              		.section	.text.xQueueGenericReset,"ax",%progbits
 520              		.align	1
 521              		.global	xQueueGenericReset
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 526              	xQueueGenericReset:
 527              	.LVL53:
 528              	.LFB5:
 256:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 529              		.loc 1 256 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 256:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 533              		.loc 1 256 1 is_stmt 0 view .LVU164
 534 0000 38B5     		push	{r3, r4, r5, lr}
 535              	.LCFI6:
 536              		.cfi_def_cfa_offset 16
 537              		.cfi_offset 3, -16
 538              		.cfi_offset 4, -12
 539              		.cfi_offset 5, -8
 540              		.cfi_offset 14, -4
 257:ThirdParty/FreeRTOS/Source/queue.c **** 
 541              		.loc 1 257 1 is_stmt 1 view .LVU165
 542              	.LVL54:
 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 543              		.loc 1 259 2 view .LVU166
 544 0002 E0B1     		cbz	r0, .L47
 545 0004 0D46     		mov	r5, r1
 546 0006 0446     		mov	r4, r0
ARM GAS  /tmp/cc2CcJyq.s 			page 54


 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 547              		.loc 1 259 25 discriminator 2 view .LVU167
 261:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 548              		.loc 1 261 2 discriminator 2 view .LVU168
 549 0008 FFF7FEFF 		bl	vPortEnterCritical
 550              	.LVL55:
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 551              		.loc 1 263 3 discriminator 2 view .LVU169
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 552              		.loc 1 263 37 is_stmt 0 discriminator 2 view .LVU170
 553 000c 2368     		ldr	r3, [r4]
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 554              		.loc 1 263 57 discriminator 2 view .LVU171
 555 000e E26B     		ldr	r2, [r4, #60]
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 556              		.loc 1 263 77 discriminator 2 view .LVU172
 557 0010 216C     		ldr	r1, [r4, #64]
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 558              		.loc 1 263 46 discriminator 2 view .LVU173
 559 0012 01FB0230 		mla	r0, r1, r2, r3
 263:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 560              		.loc 1 263 28 discriminator 2 view .LVU174
 561 0016 A060     		str	r0, [r4, #8]
 264:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 562              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU175
 264:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 563              		.loc 1 264 30 is_stmt 0 discriminator 2 view .LVU176
 564 0018 0020     		movs	r0, #0
 565 001a A063     		str	r0, [r4, #56]
 265:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 566              		.loc 1 265 3 is_stmt 1 discriminator 2 view .LVU177
 265:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 567              		.loc 1 265 22 is_stmt 0 discriminator 2 view .LVU178
 568 001c 6360     		str	r3, [r4, #4]
 266:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 569              		.loc 1 266 3 is_stmt 1 discriminator 2 view .LVU179
 266:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 570              		.loc 1 266 74 is_stmt 0 discriminator 2 view .LVU180
 571 001e 013A     		subs	r2, r2, #1
 266:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 572              		.loc 1 266 50 discriminator 2 view .LVU181
 573 0020 02FB0133 		mla	r3, r2, r1, r3
 266:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 574              		.loc 1 266 32 discriminator 2 view .LVU182
 575 0024 E360     		str	r3, [r4, #12]
 267:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 576              		.loc 1 267 3 is_stmt 1 discriminator 2 view .LVU183
 267:ThirdParty/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 577              		.loc 1 267 20 is_stmt 0 discriminator 2 view .LVU184
 578 0026 FF23     		movs	r3, #255
 579 0028 84F84430 		strb	r3, [r4, #68]
 268:ThirdParty/FreeRTOS/Source/queue.c **** 
 580              		.loc 1 268 3 is_stmt 1 discriminator 2 view .LVU185
 268:ThirdParty/FreeRTOS/Source/queue.c **** 
 581              		.loc 1 268 20 is_stmt 0 discriminator 2 view .LVU186
 582 002c 84F84530 		strb	r3, [r4, #69]
 270:ThirdParty/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cc2CcJyq.s 			page 55


 583              		.loc 1 270 3 is_stmt 1 discriminator 2 view .LVU187
 270:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 584              		.loc 1 270 5 is_stmt 0 discriminator 2 view .LVU188
 585 0030 FDB9     		cbnz	r5, .L44
 277:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 586              		.loc 1 277 4 is_stmt 1 view .LVU189
 277:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 587              		.loc 1 277 8 is_stmt 0 view .LVU190
 588 0032 2369     		ldr	r3, [r4, #16]
 277:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 589              		.loc 1 277 6 view .LVU191
 590 0034 63B9     		cbnz	r3, .L48
 591              	.L45:
 300:ThirdParty/FreeRTOS/Source/queue.c **** 
 592              		.loc 1 300 2 is_stmt 1 view .LVU192
 593 0036 FFF7FEFF 		bl	vPortExitCritical
 594              	.LVL56:
 304:ThirdParty/FreeRTOS/Source/queue.c **** }
 595              		.loc 1 304 2 view .LVU193
 305:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 596              		.loc 1 305 1 is_stmt 0 view .LVU194
 597 003a 0120     		movs	r0, #1
 598 003c 38BD     		pop	{r3, r4, r5, pc}
 599              	.LVL57:
 600              	.L47:
 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 601              		.loc 1 259 2 is_stmt 1 view .LVU195
 602              	.LBB95:
 603              	.LBI95:
 604              		.file 2 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 56


  28:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
ARM GAS  /tmp/cc2CcJyq.s 			page 57


  85:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
ARM GAS  /tmp/cc2CcJyq.s 			page 58


 142:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portDONT_DISCARD
 170:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portDONT_DISCARD __attribute__(( used ))
 171:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 172:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 173:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 174:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 175:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 176:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 177:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 178:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 179:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 180:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 181:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 182:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 184:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 186:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 187:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 188:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 189:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 190:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 191:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 192:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 605              		.loc 2 195 30 view .LVU196
 606              	.LBB96:
 196:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cc2CcJyq.s 			page 59


 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 607              		.loc 2 197 1 view .LVU197
 198:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 608              		.loc 2 199 2 view .LVU198
 609              		.syntax unified
 610              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 611 003e 4FF05003 			mov r3, #80												
 612 0042 83F31188 		msr basepri, r3											
 613 0046 BFF36F8F 		isb														
 614 004a BFF34F8F 		dsb														
 615              	
 616              	@ 0 "" 2
 617              	.LVL58:
 618              		.thumb
 619              		.syntax unified
 620              	.L43:
 621              		.loc 2 199 2 is_stmt 0 view .LVU199
 622              	.LBE96:
 623              	.LBE95:
 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 624              		.loc 1 259 2 is_stmt 1 discriminator 1 view .LVU200
 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 625              		.loc 1 259 2 discriminator 1 view .LVU201
 259:ThirdParty/FreeRTOS/Source/queue.c **** 
 626              		.loc 1 259 2 discriminator 1 view .LVU202
 627 004e FEE7     		b	.L43
 628              	.LVL59:
 629              	.L48:
 279:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 630              		.loc 1 279 5 view .LVU203
 279:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 631              		.loc 1 279 9 is_stmt 0 view .LVU204
 632 0050 04F11000 		add	r0, r4, #16
 633 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 634              	.LVL60:
 279:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 635              		.loc 1 279 7 view .LVU205
 636 0058 0028     		cmp	r0, #0
 637 005a ECD0     		beq	.L45
 281:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 638              		.loc 1 281 6 is_stmt 1 view .LVU206
 639 005c 4FF0E023 		mov	r3, #-536813568
 640 0060 4FF08052 		mov	r2, #268435456
 641 0064 C3F8042D 		str	r2, [r3, #3332]
 281:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 642              		.loc 1 281 6 view .LVU207
 643              		.syntax unified
 644              	@ 281 "ThirdParty/FreeRTOS/Source/queue.c" 1
 645 0068 BFF34F8F 		dsb
 646              	@ 0 "" 2
 281:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 647              		.loc 1 281 6 view .LVU208
 648              	@ 281 "ThirdParty/FreeRTOS/Source/queue.c" 1
 649 006c BFF36F8F 		isb
 650              	@ 0 "" 2
 281:ThirdParty/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cc2CcJyq.s 			page 60


 651              		.loc 1 281 38 view .LVU209
 652              		.thumb
 653              		.syntax unified
 654 0070 E1E7     		b	.L45
 655              	.L44:
 296:ThirdParty/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 656              		.loc 1 296 4 view .LVU210
 657 0072 04F11000 		add	r0, r4, #16
 658 0076 FFF7FEFF 		bl	vListInitialise
 659              	.LVL61:
 297:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 660              		.loc 1 297 4 view .LVU211
 661 007a 04F12400 		add	r0, r4, #36
 662 007e FFF7FEFF 		bl	vListInitialise
 663              	.LVL62:
 664 0082 D8E7     		b	.L45
 665              		.cfi_endproc
 666              	.LFE5:
 668              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 669              		.align	1
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	prvInitialiseNewQueue:
 675              	.LVL63:
 676              	.LFB7:
 430:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 677              		.loc 1 430 1 view -0
 678              		.cfi_startproc
 679              		@ args = 4, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 430:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 681              		.loc 1 430 1 is_stmt 0 view .LVU213
 682 0000 10B5     		push	{r4, lr}
 683              	.LCFI7:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 4, -8
 686              		.cfi_offset 14, -4
 687 0002 0346     		mov	r3, r0
 688              	.LVL64:
 430:ThirdParty/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 689              		.loc 1 430 1 view .LVU214
 690 0004 0298     		ldr	r0, [sp, #8]
 691              	.LVL65:
 433:ThirdParty/FreeRTOS/Source/queue.c **** 
 692              		.loc 1 433 2 is_stmt 1 view .LVU215
 435:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 693              		.loc 1 435 2 view .LVU216
 435:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 694              		.loc 1 435 4 is_stmt 0 view .LVU217
 695 0006 0C46     		mov	r4, r1
 696 0008 31B9     		cbnz	r1, .L50
 441:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 697              		.loc 1 441 3 is_stmt 1 view .LVU218
 441:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 698              		.loc 1 441 22 is_stmt 0 view .LVU219
 699 000a 0060     		str	r0, [r0]
ARM GAS  /tmp/cc2CcJyq.s 			page 61


 700              	.L51:
 451:ThirdParty/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 701              		.loc 1 451 2 is_stmt 1 view .LVU220
 451:ThirdParty/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 702              		.loc 1 451 23 is_stmt 0 view .LVU221
 703 000c C363     		str	r3, [r0, #60]
 452:ThirdParty/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 704              		.loc 1 452 2 is_stmt 1 view .LVU222
 452:ThirdParty/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 705              		.loc 1 452 25 is_stmt 0 view .LVU223
 706 000e 0464     		str	r4, [r0, #64]
 453:ThirdParty/FreeRTOS/Source/queue.c **** 
 707              		.loc 1 453 2 is_stmt 1 view .LVU224
 453:ThirdParty/FreeRTOS/Source/queue.c **** 
 708              		.loc 1 453 11 is_stmt 0 view .LVU225
 709 0010 0121     		movs	r1, #1
 710              	.LVL66:
 453:ThirdParty/FreeRTOS/Source/queue.c **** 
 711              		.loc 1 453 11 view .LVU226
 712 0012 FFF7FEFF 		bl	xQueueGenericReset
 713              	.LVL67:
 467:ThirdParty/FreeRTOS/Source/queue.c **** }
 714              		.loc 1 467 33 is_stmt 1 view .LVU227
 468:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 715              		.loc 1 468 1 is_stmt 0 view .LVU228
 716 0016 10BD     		pop	{r4, pc}
 717              	.LVL68:
 718              	.L50:
 446:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 719              		.loc 1 446 3 is_stmt 1 view .LVU229
 446:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 720              		.loc 1 446 22 is_stmt 0 view .LVU230
 721 0018 0260     		str	r2, [r0]
 722 001a F7E7     		b	.L51
 723              		.cfi_endproc
 724              	.LFE7:
 726              		.section	.text.xQueueGenericCreate,"ax",%progbits
 727              		.align	1
 728              		.global	xQueueGenericCreate
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 733              	xQueueGenericCreate:
 734              	.LVL69:
 735              	.LFB6:
 369:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 736              		.loc 1 369 2 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 370:ThirdParty/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 740              		.loc 1 370 2 view .LVU232
 371:ThirdParty/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 741              		.loc 1 371 2 view .LVU233
 372:ThirdParty/FreeRTOS/Source/queue.c **** 
 742              		.loc 1 372 2 view .LVU234
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 62


 743              		.loc 1 374 3 view .LVU235
 744 0000 40B9     		cbnz	r0, .L54
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
 745              		.loc 1 374 3 view .LVU236
 746              	.LBB97:
 747              	.LBI97:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 748              		.loc 2 195 30 view .LVU237
 749              	.LBB98:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 750              		.loc 2 197 1 view .LVU238
 751              		.loc 2 199 2 view .LVU239
 752              		.syntax unified
 753              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 754 0002 4FF05003 			mov r3, #80												
 755 0006 83F31188 		msr basepri, r3											
 756 000a BFF36F8F 		isb														
 757 000e BFF34F8F 		dsb														
 758              	
 759              	@ 0 "" 2
 760              	.LVL70:
 761              		.thumb
 762              		.syntax unified
 763              	.L55:
 764              		.loc 2 199 2 is_stmt 0 view .LVU240
 765              	.LBE98:
 766              	.LBE97:
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
 767              		.loc 1 374 3 is_stmt 1 discriminator 1 view .LVU241
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
 768              		.loc 1 374 3 discriminator 1 view .LVU242
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
 769              		.loc 1 374 3 discriminator 1 view .LVU243
 770 0012 FEE7     		b	.L55
 771              	.L54:
 369:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 772              		.loc 1 369 2 is_stmt 0 discriminator 2 view .LVU244
 773 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 774              	.LCFI8:
 775              		.cfi_def_cfa_offset 20
 776              		.cfi_offset 4, -20
 777              		.cfi_offset 5, -16
 778              		.cfi_offset 6, -12
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0016 83B0     		sub	sp, sp, #12
 782              	.LCFI9:
 783              		.cfi_def_cfa_offset 32
 784 0018 0C46     		mov	r4, r1
 785 001a 1546     		mov	r5, r2
 786 001c 0646     		mov	r6, r0
 374:ThirdParty/FreeRTOS/Source/queue.c **** 
 787              		.loc 1 374 52 is_stmt 1 discriminator 2 view .LVU245
 376:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 788              		.loc 1 376 3 discriminator 2 view .LVU246
 376:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 789              		.loc 1 376 5 is_stmt 0 discriminator 2 view .LVU247
ARM GAS  /tmp/cc2CcJyq.s 			page 63


 790 001e 89B1     		cbz	r1, .L58
 385:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 791              		.loc 1 385 4 is_stmt 1 view .LVU248
 385:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 792              		.loc 1 385 22 is_stmt 0 view .LVU249
 793 0020 01FB00F0 		mul	r0, r1, r0
 794              	.LVL71:
 795              	.L56:
 397:ThirdParty/FreeRTOS/Source/queue.c **** 
 796              		.loc 1 397 3 is_stmt 1 view .LVU250
 397:ThirdParty/FreeRTOS/Source/queue.c **** 
 797              		.loc 1 397 30 is_stmt 0 view .LVU251
 798 0024 4830     		adds	r0, r0, #72
 799              	.LVL72:
 397:ThirdParty/FreeRTOS/Source/queue.c **** 
 800              		.loc 1 397 30 view .LVU252
 801 0026 FFF7FEFF 		bl	pvPortMalloc
 802              	.LVL73:
 399:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 803              		.loc 1 399 3 is_stmt 1 view .LVU253
 399:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 804              		.loc 1 399 5 is_stmt 0 view .LVU254
 805 002a 0746     		mov	r7, r0
 806 002c 38B1     		cbz	r0, .L53
 403:ThirdParty/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 807              		.loc 1 403 4 is_stmt 1 view .LVU255
 808              	.LVL74:
 404:ThirdParty/FreeRTOS/Source/queue.c **** 
 809              		.loc 1 404 4 view .LVU256
 415:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 810              		.loc 1 415 4 view .LVU257
 811 002e 0090     		str	r0, [sp]
 812 0030 2B46     		mov	r3, r5
 813 0032 00F14802 		add	r2, r0, #72
 814              	.LVL75:
 415:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 815              		.loc 1 415 4 is_stmt 0 view .LVU258
 816 0036 2146     		mov	r1, r4
 817 0038 3046     		mov	r0, r6
 818              	.LVL76:
 415:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 819              		.loc 1 415 4 view .LVU259
 820 003a FFF7FEFF 		bl	prvInitialiseNewQueue
 821              	.LVL77:
 419:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 822              		.loc 1 419 43 is_stmt 1 view .LVU260
 420:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 823              		.loc 1 420 28 view .LVU261
 423:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 824              		.loc 1 423 3 view .LVU262
 825              	.L53:
 424:ThirdParty/FreeRTOS/Source/queue.c **** 
 826              		.loc 1 424 2 is_stmt 0 view .LVU263
 827 003e 3846     		mov	r0, r7
 828 0040 03B0     		add	sp, sp, #12
 829              	.LCFI10:
 830              		.cfi_remember_state
ARM GAS  /tmp/cc2CcJyq.s 			page 64


 831              		.cfi_def_cfa_offset 20
 832              		@ sp needed
 833 0042 F0BD     		pop	{r4, r5, r6, r7, pc}
 834              	.LVL78:
 835              	.L58:
 836              	.LCFI11:
 837              		.cfi_restore_state
 379:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 838              		.loc 1 379 22 view .LVU264
 839 0044 0846     		mov	r0, r1
 840              	.LVL79:
 379:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 841              		.loc 1 379 22 view .LVU265
 842 0046 EDE7     		b	.L56
 843              		.cfi_endproc
 844              	.LFE6:
 846              		.section	.text.xQueueGenericSend,"ax",%progbits
 847              		.align	1
 848              		.global	xQueueGenericSend
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 853              	xQueueGenericSend:
 854              	.LVL80:
 855              	.LFB10:
 748:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 856              		.loc 1 748 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 16
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 748:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 860              		.loc 1 748 1 is_stmt 0 view .LVU267
 861 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 862              	.LCFI12:
 863              		.cfi_def_cfa_offset 20
 864              		.cfi_offset 4, -20
 865              		.cfi_offset 5, -16
 866              		.cfi_offset 6, -12
 867              		.cfi_offset 7, -8
 868              		.cfi_offset 14, -4
 869 0002 85B0     		sub	sp, sp, #20
 870              	.LCFI13:
 871              		.cfi_def_cfa_offset 40
 872 0004 0192     		str	r2, [sp, #4]
 749:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 873              		.loc 1 749 1 is_stmt 1 view .LVU268
 874              	.LVL81:
 750:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 875              		.loc 1 750 1 view .LVU269
 751:ThirdParty/FreeRTOS/Source/queue.c **** 
 876              		.loc 1 751 1 view .LVU270
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 877              		.loc 1 753 2 view .LVU271
 878 0006 88B1     		cbz	r0, .L85
 879 0008 0F46     		mov	r7, r1
 880 000a 1D46     		mov	r5, r3
 881 000c 0446     		mov	r4, r0
ARM GAS  /tmp/cc2CcJyq.s 			page 65


 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 882              		.loc 1 753 25 discriminator 2 view .LVU272
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 883              		.loc 1 754 2 discriminator 2 view .LVU273
 884 000e B1B1     		cbz	r1, .L86
 885              	.LVL82:
 886              	.L64:
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 887              		.loc 1 754 97 discriminator 8 view .LVU274
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 888              		.loc 1 755 2 discriminator 8 view .LVU275
 889 0010 022D     		cmp	r5, #2
 890 0012 20D1     		bne	.L66
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 891              		.loc 1 755 2 is_stmt 0 discriminator 2 view .LVU276
 892 0014 E36B     		ldr	r3, [r4, #60]
 893 0016 012B     		cmp	r3, #1
 894 0018 1DD0     		beq	.L66
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 895              		.loc 1 755 2 is_stmt 1 view .LVU277
 896              	.LBB99:
 897              	.LBI99:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 898              		.loc 2 195 30 view .LVU278
 899              	.LBB100:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 900              		.loc 2 197 1 view .LVU279
 901              		.loc 2 199 2 view .LVU280
 902              		.syntax unified
 903              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 904 001a 4FF05003 			mov r3, #80												
 905 001e 83F31188 		msr basepri, r3											
 906 0022 BFF36F8F 		isb														
 907 0026 BFF34F8F 		dsb														
 908              	
 909              	@ 0 "" 2
 910              	.LVL83:
 911              		.thumb
 912              		.syntax unified
 913              	.L67:
 914              		.loc 2 199 2 is_stmt 0 view .LVU281
 915              	.LBE100:
 916              	.LBE99:
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 917              		.loc 1 755 2 is_stmt 1 discriminator 3 view .LVU282
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 918              		.loc 1 755 2 discriminator 3 view .LVU283
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 919              		.loc 1 755 2 discriminator 3 view .LVU284
 920 002a FEE7     		b	.L67
 921              	.LVL84:
 922              	.L85:
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 923              		.loc 1 753 2 view .LVU285
 924              	.LBB101:
 925              	.LBI101:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cc2CcJyq.s 			page 66


 926              		.loc 2 195 30 view .LVU286
 927              	.LBB102:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 928              		.loc 2 197 1 view .LVU287
 929              		.loc 2 199 2 view .LVU288
 930              		.syntax unified
 931              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 932 002c 4FF05003 			mov r3, #80												
 933 0030 83F31188 		msr basepri, r3											
 934 0034 BFF36F8F 		isb														
 935 0038 BFF34F8F 		dsb														
 936              	
 937              	@ 0 "" 2
 938              	.LVL85:
 939              		.thumb
 940              		.syntax unified
 941              	.L63:
 942              		.loc 2 199 2 is_stmt 0 view .LVU289
 943              	.LBE102:
 944              	.LBE101:
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 945              		.loc 1 753 2 is_stmt 1 discriminator 1 view .LVU290
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 946              		.loc 1 753 2 discriminator 1 view .LVU291
 753:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 947              		.loc 1 753 2 discriminator 1 view .LVU292
 948 003c FEE7     		b	.L63
 949              	.LVL86:
 950              	.L86:
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 951              		.loc 1 754 2 is_stmt 0 discriminator 2 view .LVU293
 952 003e 036C     		ldr	r3, [r0, #64]
 953              	.LVL87:
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 954              		.loc 1 754 2 discriminator 2 view .LVU294
 955 0040 002B     		cmp	r3, #0
 956 0042 E5D0     		beq	.L64
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 957              		.loc 1 754 2 is_stmt 1 view .LVU295
 958              	.LBB103:
 959              	.LBI103:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 960              		.loc 2 195 30 view .LVU296
 961              	.LBB104:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 962              		.loc 2 197 1 view .LVU297
 963              		.loc 2 199 2 view .LVU298
 964              		.syntax unified
 965              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 966 0044 4FF05003 			mov r3, #80												
 967 0048 83F31188 		msr basepri, r3											
 968 004c BFF36F8F 		isb														
 969 0050 BFF34F8F 		dsb														
 970              	
 971              	@ 0 "" 2
 972              	.LVL88:
 973              		.thumb
ARM GAS  /tmp/cc2CcJyq.s 			page 67


 974              		.syntax unified
 975              	.L65:
 976              		.loc 2 199 2 is_stmt 0 view .LVU299
 977              	.LBE104:
 978              	.LBE103:
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 979              		.loc 1 754 2 is_stmt 1 discriminator 2 view .LVU300
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 980              		.loc 1 754 2 discriminator 2 view .LVU301
 754:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 981              		.loc 1 754 2 discriminator 2 view .LVU302
 982 0054 FEE7     		b	.L65
 983              	.L66:
 755:ThirdParty/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 984              		.loc 1 755 88 discriminator 8 view .LVU303
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 985              		.loc 1 758 3 discriminator 8 view .LVU304
 986 0056 FFF7FEFF 		bl	xTaskGetSchedulerState
 987              	.LVL89:
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 988              		.loc 1 758 3 is_stmt 0 discriminator 8 view .LVU305
 989 005a 0646     		mov	r6, r0
 990 005c 58B9     		cbnz	r0, .L83
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 991              		.loc 1 758 3 discriminator 2 view .LVU306
 992 005e 019B     		ldr	r3, [sp, #4]
 993 0060 002B     		cmp	r3, #0
 994 0062 48D0     		beq	.L70
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 995              		.loc 1 758 3 is_stmt 1 view .LVU307
 996              	.LBB105:
 997              	.LBI105:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 998              		.loc 2 195 30 view .LVU308
 999              	.LBB106:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1000              		.loc 2 197 1 view .LVU309
 1001              		.loc 2 199 2 view .LVU310
 1002              		.syntax unified
 1003              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1004 0064 4FF05003 			mov r3, #80												
 1005 0068 83F31188 		msr basepri, r3											
 1006 006c BFF36F8F 		isb														
 1007 0070 BFF34F8F 		dsb														
 1008              	
 1009              	@ 0 "" 2
 1010              	.LVL90:
 1011              		.thumb
 1012              		.syntax unified
 1013              	.L69:
 1014              		.loc 2 199 2 is_stmt 0 view .LVU311
 1015              	.LBE106:
 1016              	.LBE105:
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1017              		.loc 1 758 3 is_stmt 1 discriminator 4 view .LVU312
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1018              		.loc 1 758 3 discriminator 4 view .LVU313
ARM GAS  /tmp/cc2CcJyq.s 			page 68


 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1019              		.loc 1 758 3 discriminator 4 view .LVU314
 1020 0074 FEE7     		b	.L69
 1021              	.L83:
 1022 0076 0026     		movs	r6, #0
 1023 0078 3DE0     		b	.L70
 1024              	.LVL91:
 1025              	.L71:
 776:ThirdParty/FreeRTOS/Source/queue.c **** 
 1026              		.loc 1 776 31 view .LVU315
 840:ThirdParty/FreeRTOS/Source/queue.c **** 
 1027              		.loc 1 840 6 view .LVU316
 840:ThirdParty/FreeRTOS/Source/queue.c **** 
 1028              		.loc 1 840 23 is_stmt 0 view .LVU317
 1029 007a 2A46     		mov	r2, r5
 1030 007c 3946     		mov	r1, r7
 1031 007e 2046     		mov	r0, r4
 1032 0080 FFF7FEFF 		bl	prvCopyDataToQueue
 1033              	.LVL92:
 844:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1034              		.loc 1 844 6 is_stmt 1 view .LVU318
 844:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1035              		.loc 1 844 10 is_stmt 0 view .LVU319
 1036 0084 636A     		ldr	r3, [r4, #36]
 844:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1037              		.loc 1 844 8 view .LVU320
 1038 0086 7BB9     		cbnz	r3, .L87
 859:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1039              		.loc 1 859 11 is_stmt 1 view .LVU321
 859:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1040              		.loc 1 859 13 is_stmt 0 view .LVU322
 1041 0088 48B1     		cbz	r0, .L74
 865:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 1042              		.loc 1 865 7 is_stmt 1 view .LVU323
 1043 008a 4FF0E023 		mov	r3, #-536813568
 1044 008e 4FF08052 		mov	r2, #268435456
 1045 0092 C3F8042D 		str	r2, [r3, #3332]
 865:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 1046              		.loc 1 865 7 view .LVU324
 1047              		.syntax unified
 1048              	@ 865 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1049 0096 BFF34F8F 		dsb
 1050              	@ 0 "" 2
 865:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 1051              		.loc 1 865 7 view .LVU325
 1052              	@ 865 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1053 009a BFF36F8F 		isb
 1054              	@ 0 "" 2
 865:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 1055              		.loc 1 865 39 view .LVU326
 1056              	.LVL93:
 1057              		.thumb
 1058              		.syntax unified
 1059              	.L74:
 869:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 1060              		.loc 1 869 31 view .LVU327
 874:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
ARM GAS  /tmp/cc2CcJyq.s 			page 69


 1061              		.loc 1 874 5 view .LVU328
 1062 009e FFF7FEFF 		bl	vPortExitCritical
 1063              	.LVL94:
 875:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1064              		.loc 1 875 5 view .LVU329
 875:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1065              		.loc 1 875 12 is_stmt 0 view .LVU330
 1066 00a2 0120     		movs	r0, #1
 1067              	.L61:
 954:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1068              		.loc 1 954 1 view .LVU331
 1069 00a4 05B0     		add	sp, sp, #20
 1070              	.LCFI14:
 1071              		.cfi_remember_state
 1072              		.cfi_def_cfa_offset 20
 1073              		@ sp needed
 1074 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1075              	.LVL95:
 1076              	.L87:
 1077              	.LCFI15:
 1078              		.cfi_restore_state
 846:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1079              		.loc 1 846 7 is_stmt 1 view .LVU332
 846:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1080              		.loc 1 846 11 is_stmt 0 view .LVU333
 1081 00a8 04F12400 		add	r0, r4, #36
 1082              	.LVL96:
 846:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1083              		.loc 1 846 11 view .LVU334
 1084 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1085              	.LVL97:
 846:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1086              		.loc 1 846 9 view .LVU335
 1087 00b0 0028     		cmp	r0, #0
 1088 00b2 F4D0     		beq	.L74
 852:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 1089              		.loc 1 852 8 is_stmt 1 view .LVU336
 1090 00b4 4FF0E023 		mov	r3, #-536813568
 1091 00b8 4FF08052 		mov	r2, #268435456
 1092 00bc C3F8042D 		str	r2, [r3, #3332]
 852:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 1093              		.loc 1 852 8 view .LVU337
 1094              		.syntax unified
 1095              	@ 852 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1096 00c0 BFF34F8F 		dsb
 1097              	@ 0 "" 2
 852:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 1098              		.loc 1 852 8 view .LVU338
 1099              	@ 852 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1100 00c4 BFF36F8F 		isb
 1101              	@ 0 "" 2
 852:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 1102              		.loc 1 852 40 view .LVU339
 1103              		.thumb
 1104              		.syntax unified
 1105 00c8 E9E7     		b	.L74
 1106              	.L88:
ARM GAS  /tmp/cc2CcJyq.s 			page 70


 883:ThirdParty/FreeRTOS/Source/queue.c **** 
 1107              		.loc 1 883 6 view .LVU340
 1108 00ca FFF7FEFF 		bl	vPortExitCritical
 1109              	.LVL98:
 887:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 1110              		.loc 1 887 39 view .LVU341
 888:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1111              		.loc 1 888 6 view .LVU342
 888:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1112              		.loc 1 888 13 is_stmt 0 view .LVU343
 1113 00ce 0020     		movs	r0, #0
 1114 00d0 E8E7     		b	.L61
 1115              	.L89:
 894:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1116              		.loc 1 894 6 is_stmt 1 view .LVU344
 1117 00d2 02A8     		add	r0, sp, #8
 1118 00d4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1119              	.LVL99:
 895:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1120              		.loc 1 895 6 view .LVU345
 895:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1121              		.loc 1 895 20 is_stmt 0 view .LVU346
 1122 00d8 0126     		movs	r6, #1
 1123 00da 19E0     		b	.L77
 1124              	.LVL100:
 1125              	.L90:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1126              		.loc 1 910 3 is_stmt 1 discriminator 1 view .LVU347
 1127 00dc 0023     		movs	r3, #0
 1128 00de 84F84430 		strb	r3, [r4, #68]
 1129 00e2 21E0     		b	.L78
 1130              	.L91:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1131              		.loc 1 910 3 discriminator 4 view .LVU348
 1132 00e4 0023     		movs	r3, #0
 1133 00e6 84F84530 		strb	r3, [r4, #69]
 1134 00ea 23E0     		b	.L79
 1135              	.L81:
 940:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1136              		.loc 1 940 5 view .LVU349
 1137 00ec 2046     		mov	r0, r4
 1138 00ee FFF7FEFF 		bl	prvUnlockQueue
 1139              	.LVL101:
 941:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1140              		.loc 1 941 5 view .LVU350
 941:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1141              		.loc 1 941 14 is_stmt 0 view .LVU351
 1142 00f2 FFF7FEFF 		bl	xTaskResumeAll
 1143              	.LVL102:
 1144              	.L70:
 758:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1145              		.loc 1 758 104 is_stmt 1 discriminator 8 view .LVU352
 766:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 1146              		.loc 1 766 2 discriminator 8 view .LVU353
 768:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1147              		.loc 1 768 3 discriminator 8 view .LVU354
 1148 00f6 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  /tmp/cc2CcJyq.s 			page 71


 1149              	.LVL103:
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1150              		.loc 1 774 4 discriminator 8 view .LVU355
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1151              		.loc 1 774 17 is_stmt 0 discriminator 8 view .LVU356
 1152 00fa A26B     		ldr	r2, [r4, #56]
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1153              		.loc 1 774 46 discriminator 8 view .LVU357
 1154 00fc E36B     		ldr	r3, [r4, #60]
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1155              		.loc 1 774 6 discriminator 8 view .LVU358
 1156 00fe 9A42     		cmp	r2, r3
 1157 0100 BBD3     		bcc	.L71
 774:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1158              		.loc 1 774 59 discriminator 1 view .LVU359
 1159 0102 022D     		cmp	r5, #2
 1160 0104 B9D0     		beq	.L71
 879:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1161              		.loc 1 879 5 is_stmt 1 view .LVU360
 879:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1162              		.loc 1 879 22 is_stmt 0 view .LVU361
 1163 0106 019B     		ldr	r3, [sp, #4]
 879:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1164              		.loc 1 879 7 view .LVU362
 1165 0108 002B     		cmp	r3, #0
 1166 010a DED0     		beq	.L88
 890:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1167              		.loc 1 890 10 is_stmt 1 view .LVU363
 890:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1168              		.loc 1 890 12 is_stmt 0 view .LVU364
 1169 010c 002E     		cmp	r6, #0
 1170 010e E0D0     		beq	.L89
 1171              	.LVL104:
 1172              	.L77:
 900:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1173              		.loc 1 900 30 is_stmt 1 view .LVU365
 904:ThirdParty/FreeRTOS/Source/queue.c **** 
 1174              		.loc 1 904 3 view .LVU366
 1175 0110 FFF7FEFF 		bl	vPortExitCritical
 1176              	.LVL105:
 909:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1177              		.loc 1 909 3 view .LVU367
 1178 0114 FFF7FEFF 		bl	vTaskSuspendAll
 1179              	.LVL106:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1180              		.loc 1 910 3 view .LVU368
 1181 0118 FFF7FEFF 		bl	vPortEnterCritical
 1182              	.LVL107:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1183              		.loc 1 910 3 view .LVU369
 1184 011c 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1185 0120 52B2     		sxtb	r2, r2
 1186 0122 B2F1FF3F 		cmp	r2, #-1
 1187 0126 D9D0     		beq	.L90
 1188              	.L78:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1189              		.loc 1 910 3 discriminator 3 view .LVU370
ARM GAS  /tmp/cc2CcJyq.s 			page 72


 1190 0128 94F84520 		ldrb	r2, [r4, #69]	@ zero_extendqisi2
 1191 012c 52B2     		sxtb	r2, r2
 1192 012e B2F1FF3F 		cmp	r2, #-1
 1193 0132 D7D0     		beq	.L91
 1194              	.L79:
 910:ThirdParty/FreeRTOS/Source/queue.c **** 
 1195              		.loc 1 910 3 discriminator 6 view .LVU371
 1196 0134 FFF7FEFF 		bl	vPortExitCritical
 1197              	.LVL108:
 913:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1198              		.loc 1 913 3 discriminator 6 view .LVU372
 913:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1199              		.loc 1 913 7 is_stmt 0 discriminator 6 view .LVU373
 1200 0138 01A9     		add	r1, sp, #4
 1201 013a 02A8     		add	r0, sp, #8
 1202 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1203              	.LVL109:
 913:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1204              		.loc 1 913 5 discriminator 6 view .LVU374
 1205 0140 D8B9     		cbnz	r0, .L80
 915:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1206              		.loc 1 915 4 is_stmt 1 view .LVU375
 915:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1207              		.loc 1 915 8 is_stmt 0 view .LVU376
 1208 0142 2046     		mov	r0, r4
 1209 0144 FFF7FEFF 		bl	prvIsQueueFull
 1210              	.LVL110:
 915:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1211              		.loc 1 915 6 view .LVU377
 1212 0148 0028     		cmp	r0, #0
 1213 014a CFD0     		beq	.L81
 917:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1214              		.loc 1 917 43 is_stmt 1 view .LVU378
 918:ThirdParty/FreeRTOS/Source/queue.c **** 
 1215              		.loc 1 918 5 view .LVU379
 1216 014c 0199     		ldr	r1, [sp, #4]
 1217 014e 04F11000 		add	r0, r4, #16
 1218 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1219              	.LVL111:
 925:ThirdParty/FreeRTOS/Source/queue.c **** 
 1220              		.loc 1 925 5 view .LVU380
 1221 0156 2046     		mov	r0, r4
 1222 0158 FFF7FEFF 		bl	prvUnlockQueue
 1223              	.LVL112:
 932:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1224              		.loc 1 932 5 view .LVU381
 932:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1225              		.loc 1 932 9 is_stmt 0 view .LVU382
 1226 015c FFF7FEFF 		bl	xTaskResumeAll
 1227              	.LVL113:
 932:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 1228              		.loc 1 932 7 view .LVU383
 1229 0160 0028     		cmp	r0, #0
 1230 0162 C8D1     		bne	.L70
 934:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1231              		.loc 1 934 6 is_stmt 1 view .LVU384
 1232 0164 4FF0E023 		mov	r3, #-536813568
ARM GAS  /tmp/cc2CcJyq.s 			page 73


 1233 0168 4FF08052 		mov	r2, #268435456
 1234 016c C3F8042D 		str	r2, [r3, #3332]
 934:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1235              		.loc 1 934 6 view .LVU385
 1236              		.syntax unified
 1237              	@ 934 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1238 0170 BFF34F8F 		dsb
 1239              	@ 0 "" 2
 934:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 1240              		.loc 1 934 6 view .LVU386
 1241              	@ 934 "ThirdParty/FreeRTOS/Source/queue.c" 1
 1242 0174 BFF36F8F 		isb
 1243              	@ 0 "" 2
 1244              		.thumb
 1245              		.syntax unified
 1246 0178 BDE7     		b	.L70
 1247              	.L80:
 947:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1248              		.loc 1 947 4 view .LVU387
 1249 017a 2046     		mov	r0, r4
 1250 017c FFF7FEFF 		bl	prvUnlockQueue
 1251              	.LVL114:
 948:ThirdParty/FreeRTOS/Source/queue.c **** 
 1252              		.loc 1 948 4 view .LVU388
 948:ThirdParty/FreeRTOS/Source/queue.c **** 
 1253              		.loc 1 948 13 is_stmt 0 view .LVU389
 1254 0180 FFF7FEFF 		bl	xTaskResumeAll
 1255              	.LVL115:
 950:ThirdParty/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 1256              		.loc 1 950 37 is_stmt 1 view .LVU390
 951:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1257              		.loc 1 951 4 view .LVU391
 951:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1258              		.loc 1 951 11 is_stmt 0 view .LVU392
 1259 0184 0020     		movs	r0, #0
 1260 0186 8DE7     		b	.L61
 1261              		.cfi_endproc
 1262              	.LFE10:
 1264              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1265              		.align	1
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1270              	prvInitialiseMutex:
 1271              	.LVL116:
 1272              	.LFB8:
 474:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1273              		.loc 1 474 2 is_stmt 1 view -0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 475:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1277              		.loc 1 475 3 view .LVU394
 475:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1278              		.loc 1 475 5 is_stmt 0 view .LVU395
 1279 0000 48B1     		cbz	r0, .L95
 474:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
ARM GAS  /tmp/cc2CcJyq.s 			page 74


 1280              		.loc 1 474 2 view .LVU396
 1281 0002 08B5     		push	{r3, lr}
 1282              	.LCFI16:
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 3, -8
 1285              		.cfi_offset 14, -4
 481:ThirdParty/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1286              		.loc 1 481 4 is_stmt 1 view .LVU397
 481:ThirdParty/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1287              		.loc 1 481 42 is_stmt 0 view .LVU398
 1288 0004 0021     		movs	r1, #0
 1289 0006 8160     		str	r1, [r0, #8]
 482:ThirdParty/FreeRTOS/Source/queue.c **** 
 1290              		.loc 1 482 4 is_stmt 1 view .LVU399
 482:ThirdParty/FreeRTOS/Source/queue.c **** 
 1291              		.loc 1 482 28 is_stmt 0 view .LVU400
 1292 0008 0160     		str	r1, [r0]
 485:ThirdParty/FreeRTOS/Source/queue.c **** 
 1293              		.loc 1 485 4 is_stmt 1 view .LVU401
 485:ThirdParty/FreeRTOS/Source/queue.c **** 
 1294              		.loc 1 485 50 is_stmt 0 view .LVU402
 1295 000a C160     		str	r1, [r0, #12]
 487:ThirdParty/FreeRTOS/Source/queue.c **** 
 1296              		.loc 1 487 35 is_stmt 1 view .LVU403
 490:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1297              		.loc 1 490 4 view .LVU404
 490:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1298              		.loc 1 490 13 is_stmt 0 view .LVU405
 1299 000c 0B46     		mov	r3, r1
 1300 000e 0A46     		mov	r2, r1
 1301 0010 FFF7FEFF 		bl	xQueueGenericSend
 1302              	.LVL117:
 494:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1303              		.loc 1 494 30 is_stmt 1 view .LVU406
 496:ThirdParty/FreeRTOS/Source/queue.c **** 
 1304              		.loc 1 496 2 is_stmt 0 view .LVU407
 1305 0014 08BD     		pop	{r3, pc}
 1306              	.LVL118:
 1307              	.L95:
 1308              	.LCFI17:
 1309              		.cfi_def_cfa_offset 0
 1310              		.cfi_restore 3
 1311              		.cfi_restore 14
 496:ThirdParty/FreeRTOS/Source/queue.c **** 
 1312              		.loc 1 496 2 view .LVU408
 1313 0016 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE8:
 1317              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1318              		.align	1
 1319              		.global	xQueueCreateMutex
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1324              	xQueueCreateMutex:
 1325              	.LVL119:
 1326              	.LFB9:
ARM GAS  /tmp/cc2CcJyq.s 			page 75


 504:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1327              		.loc 1 504 2 is_stmt 1 view -0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 504:ThirdParty/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1331              		.loc 1 504 2 is_stmt 0 view .LVU410
 1332 0000 10B5     		push	{r4, lr}
 1333              	.LCFI18:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 4, -8
 1336              		.cfi_offset 14, -4
 1337 0002 0246     		mov	r2, r0
 505:ThirdParty/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 1338              		.loc 1 505 2 is_stmt 1 view .LVU411
 506:ThirdParty/FreeRTOS/Source/queue.c **** 
 1339              		.loc 1 506 2 view .LVU412
 1340              	.LVL120:
 508:ThirdParty/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1341              		.loc 1 508 3 view .LVU413
 508:ThirdParty/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1342              		.loc 1 508 15 is_stmt 0 view .LVU414
 1343 0004 0021     		movs	r1, #0
 1344 0006 0120     		movs	r0, #1
 1345              	.LVL121:
 508:ThirdParty/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1346              		.loc 1 508 15 view .LVU415
 1347 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1348              	.LVL122:
 1349 000c 0446     		mov	r4, r0
 1350              	.LVL123:
 509:ThirdParty/FreeRTOS/Source/queue.c **** 
 1351              		.loc 1 509 3 is_stmt 1 view .LVU416
 1352 000e FFF7FEFF 		bl	prvInitialiseMutex
 1353              	.LVL124:
 511:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1354              		.loc 1 511 3 view .LVU417
 512:ThirdParty/FreeRTOS/Source/queue.c **** 
 1355              		.loc 1 512 2 is_stmt 0 view .LVU418
 1356 0012 2046     		mov	r0, r4
 1357 0014 10BD     		pop	{r4, pc}
 512:ThirdParty/FreeRTOS/Source/queue.c **** 
 1358              		.loc 1 512 2 view .LVU419
 1359              		.cfi_endproc
 1360              	.LFE9:
 1362              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1363              		.align	1
 1364              		.global	xQueueGenericSendFromISR
 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1369              	xQueueGenericSendFromISR:
 1370              	.LVL125:
 1371              	.LFB11:
 958:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1372              		.loc 1 958 1 is_stmt 1 view -0
 1373              		.cfi_startproc
ARM GAS  /tmp/cc2CcJyq.s 			page 76


 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 958:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1376              		.loc 1 958 1 is_stmt 0 view .LVU421
 1377 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1378              	.LCFI19:
 1379              		.cfi_def_cfa_offset 32
 1380              		.cfi_offset 3, -32
 1381              		.cfi_offset 4, -28
 1382              		.cfi_offset 5, -24
 1383              		.cfi_offset 6, -20
 1384              		.cfi_offset 7, -16
 1385              		.cfi_offset 8, -12
 1386              		.cfi_offset 9, -8
 1387              		.cfi_offset 14, -4
 959:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 1388              		.loc 1 959 1 is_stmt 1 view .LVU422
 960:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1389              		.loc 1 960 1 view .LVU423
 961:ThirdParty/FreeRTOS/Source/queue.c **** 
 1390              		.loc 1 961 1 view .LVU424
 1391              	.LVL126:
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1392              		.loc 1 963 2 view .LVU425
 1393 0004 90B1     		cbz	r0, .L115
 1394 0006 0F46     		mov	r7, r1
 1395 0008 1646     		mov	r6, r2
 1396 000a 1C46     		mov	r4, r3
 1397 000c 0546     		mov	r5, r0
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1398              		.loc 1 963 25 discriminator 2 view .LVU426
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1399              		.loc 1 964 2 discriminator 2 view .LVU427
 1400 000e B1B1     		cbz	r1, .L116
 1401              	.LVL127:
 1402              	.L103:
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1403              		.loc 1 964 97 discriminator 8 view .LVU428
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1404              		.loc 1 965 2 discriminator 8 view .LVU429
 1405 0010 022C     		cmp	r4, #2
 1406 0012 20D1     		bne	.L105
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1407              		.loc 1 965 2 is_stmt 0 discriminator 2 view .LVU430
 1408 0014 EB6B     		ldr	r3, [r5, #60]
 1409 0016 012B     		cmp	r3, #1
 1410 0018 1DD0     		beq	.L105
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1411              		.loc 1 965 2 is_stmt 1 view .LVU431
 1412              	.LBB107:
 1413              	.LBI107:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1414              		.loc 2 195 30 view .LVU432
 1415              	.LBB108:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1416              		.loc 2 197 1 view .LVU433
 1417              		.loc 2 199 2 view .LVU434
ARM GAS  /tmp/cc2CcJyq.s 			page 77


 1418              		.syntax unified
 1419              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1420 001a 4FF05003 			mov r3, #80												
 1421 001e 83F31188 		msr basepri, r3											
 1422 0022 BFF36F8F 		isb														
 1423 0026 BFF34F8F 		dsb														
 1424              	
 1425              	@ 0 "" 2
 1426              	.LVL128:
 1427              		.thumb
 1428              		.syntax unified
 1429              	.L106:
 1430              		.loc 2 199 2 is_stmt 0 view .LVU435
 1431              	.LBE108:
 1432              	.LBE107:
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1433              		.loc 1 965 2 is_stmt 1 discriminator 3 view .LVU436
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1434              		.loc 1 965 2 discriminator 3 view .LVU437
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1435              		.loc 1 965 2 discriminator 3 view .LVU438
 1436 002a FEE7     		b	.L106
 1437              	.LVL129:
 1438              	.L115:
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1439              		.loc 1 963 2 view .LVU439
 1440              	.LBB109:
 1441              	.LBI109:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1442              		.loc 2 195 30 view .LVU440
 1443              	.LBB110:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1444              		.loc 2 197 1 view .LVU441
 1445              		.loc 2 199 2 view .LVU442
 1446              		.syntax unified
 1447              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1448 002c 4FF05003 			mov r3, #80												
 1449 0030 83F31188 		msr basepri, r3											
 1450 0034 BFF36F8F 		isb														
 1451 0038 BFF34F8F 		dsb														
 1452              	
 1453              	@ 0 "" 2
 1454              	.LVL130:
 1455              		.thumb
 1456              		.syntax unified
 1457              	.L102:
 1458              		.loc 2 199 2 is_stmt 0 view .LVU443
 1459              	.LBE110:
 1460              	.LBE109:
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1461              		.loc 1 963 2 is_stmt 1 discriminator 1 view .LVU444
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1462              		.loc 1 963 2 discriminator 1 view .LVU445
 963:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1463              		.loc 1 963 2 discriminator 1 view .LVU446
 1464 003c FEE7     		b	.L102
 1465              	.LVL131:
ARM GAS  /tmp/cc2CcJyq.s 			page 78


 1466              	.L116:
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1467              		.loc 1 964 2 is_stmt 0 discriminator 2 view .LVU447
 1468 003e 036C     		ldr	r3, [r0, #64]
 1469              	.LVL132:
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1470              		.loc 1 964 2 discriminator 2 view .LVU448
 1471 0040 002B     		cmp	r3, #0
 1472 0042 E5D0     		beq	.L103
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1473              		.loc 1 964 2 is_stmt 1 view .LVU449
 1474              	.LBB111:
 1475              	.LBI111:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1476              		.loc 2 195 30 view .LVU450
 1477              	.LBB112:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1478              		.loc 2 197 1 view .LVU451
 1479              		.loc 2 199 2 view .LVU452
 1480              		.syntax unified
 1481              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1482 0044 4FF05003 			mov r3, #80												
 1483 0048 83F31188 		msr basepri, r3											
 1484 004c BFF36F8F 		isb														
 1485 0050 BFF34F8F 		dsb														
 1486              	
 1487              	@ 0 "" 2
 1488              	.LVL133:
 1489              		.thumb
 1490              		.syntax unified
 1491              	.L104:
 1492              		.loc 2 199 2 is_stmt 0 view .LVU453
 1493              	.LBE112:
 1494              	.LBE111:
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1495              		.loc 1 964 2 is_stmt 1 discriminator 2 view .LVU454
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1496              		.loc 1 964 2 discriminator 2 view .LVU455
 964:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1497              		.loc 1 964 2 discriminator 2 view .LVU456
 1498 0054 FEE7     		b	.L104
 1499              	.L105:
 965:ThirdParty/FreeRTOS/Source/queue.c **** 
 1500              		.loc 1 965 88 discriminator 8 view .LVU457
 981:ThirdParty/FreeRTOS/Source/queue.c **** 
 1501              		.loc 1 981 2 discriminator 8 view .LVU458
 1502 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1503              	.LVL134:
 988:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 1504              		.loc 1 988 2 discriminator 8 view .LVU459
 1505              	.LBB113:
 1506              	.LBI113:
 200:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 201:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 202:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 203:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 204:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
ARM GAS  /tmp/cc2CcJyq.s 			page 79


 205:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 206:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 207:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 208:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1507              		.loc 2 211 34 discriminator 8 view .LVU460
 1508              	.LBB114:
 212:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1509              		.loc 2 213 1 discriminator 8 view .LVU461
 214:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1510              		.loc 2 215 2 discriminator 8 view .LVU462
 1511              		.syntax unified
 1512              	@ 215 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1513 005a EFF31189 			mrs r9, basepri											
 1514 005e 4FF05003 		mov r3, #80												
 1515 0062 83F31188 		msr basepri, r3											
 1516 0066 BFF36F8F 		isb														
 1517 006a BFF34F8F 		dsb														
 1518              	
 1519              	@ 0 "" 2
 1520              	.LVL135:
 216:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 217:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 218:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 219:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 220:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 221:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 222:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 223:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 224:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 225:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 226:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1521              		.loc 2 227 2 discriminator 8 view .LVU463
 1522              		.loc 2 227 2 is_stmt 0 discriminator 8 view .LVU464
 1523              		.thumb
 1524              		.syntax unified
 1525              	.LBE114:
 1526              	.LBE113:
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1527              		.loc 1 990 3 is_stmt 1 discriminator 8 view .LVU465
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1528              		.loc 1 990 16 is_stmt 0 discriminator 8 view .LVU466
 1529 006e AA6B     		ldr	r2, [r5, #56]
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1530              		.loc 1 990 45 discriminator 8 view .LVU467
 1531 0070 EB6B     		ldr	r3, [r5, #60]
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1532              		.loc 1 990 5 discriminator 8 view .LVU468
 1533 0072 9A42     		cmp	r2, r3
 1534 0074 06D3     		bcc	.L107
 990:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1535              		.loc 1 990 58 discriminator 1 view .LVU469
ARM GAS  /tmp/cc2CcJyq.s 			page 80


 1536 0076 022C     		cmp	r4, #2
 1537 0078 04D0     		beq	.L107
1099:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1538              		.loc 1 1099 12 view .LVU470
 1539 007a 0020     		movs	r0, #0
 1540              	.L108:
 1541              	.LVL136:
1102:ThirdParty/FreeRTOS/Source/queue.c **** 
 1542              		.loc 1 1102 2 is_stmt 1 view .LVU471
 1543              	.LBB115:
 1544              	.LBI115:
 228:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 229:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1545              		.loc 2 231 30 view .LVU472
 1546              	.LBB116:
 232:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 233:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1547              		.loc 2 233 2 view .LVU473
 1548              		.syntax unified
 1549              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1550 007c 89F31188 			msr basepri, r9	
 1551              	@ 0 "" 2
 1552              	.LVL137:
 1553              		.loc 2 233 2 is_stmt 0 view .LVU474
 1554              		.thumb
 1555              		.syntax unified
 1556              	.LBE116:
 1557              	.LBE115:
1104:ThirdParty/FreeRTOS/Source/queue.c **** }
 1558              		.loc 1 1104 2 is_stmt 1 view .LVU475
1105:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1559              		.loc 1 1105 1 is_stmt 0 view .LVU476
 1560 0080 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1561              	.LVL138:
 1562              	.L107:
 1563              	.LBB117:
 992:ThirdParty/FreeRTOS/Source/queue.c **** 
 1564              		.loc 1 992 4 is_stmt 1 view .LVU477
 992:ThirdParty/FreeRTOS/Source/queue.c **** 
 1565              		.loc 1 992 17 is_stmt 0 view .LVU478
 1566 0084 95F84580 		ldrb	r8, [r5, #69]	@ zero_extendqisi2
 1567 0088 4FFA88F8 		sxtb	r8, r8
 1568              	.LVL139:
 994:ThirdParty/FreeRTOS/Source/queue.c **** 
 1569              		.loc 1 994 39 is_stmt 1 view .LVU479
1001:ThirdParty/FreeRTOS/Source/queue.c **** 
 1570              		.loc 1 1001 4 view .LVU480
1001:ThirdParty/FreeRTOS/Source/queue.c **** 
 1571              		.loc 1 1001 13 is_stmt 0 view .LVU481
 1572 008c 2246     		mov	r2, r4
 1573 008e 3946     		mov	r1, r7
 1574 0090 2846     		mov	r0, r5
 1575 0092 FFF7FEFF 		bl	prvCopyDataToQueue
 1576              	.LVL140:
1005:ThirdParty/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cc2CcJyq.s 			page 81


 1577              		.loc 1 1005 4 is_stmt 1 view .LVU482
1005:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1578              		.loc 1 1005 6 is_stmt 0 view .LVU483
 1579 0096 B8F1FF3F 		cmp	r8, #-1
 1580 009a 06D0     		beq	.L117
1091:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1581              		.loc 1 1091 5 is_stmt 1 view .LVU484
1091:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1582              		.loc 1 1091 45 is_stmt 0 view .LVU485
 1583 009c 08F10103 		add	r3, r8, #1
1091:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1584              		.loc 1 1091 24 view .LVU486
 1585 00a0 5BB2     		sxtb	r3, r3
1091:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1586              		.loc 1 1091 22 view .LVU487
 1587 00a2 85F84530 		strb	r3, [r5, #69]
1094:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1588              		.loc 1 1094 12 view .LVU488
 1589 00a6 0120     		movs	r0, #1
 1590 00a8 E8E7     		b	.L108
 1591              	.L117:
1060:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1592              		.loc 1 1060 6 is_stmt 1 view .LVU489
1060:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1593              		.loc 1 1060 10 is_stmt 0 view .LVU490
 1594 00aa 6B6A     		ldr	r3, [r5, #36]
1060:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1595              		.loc 1 1060 8 view .LVU491
 1596 00ac 0BB9     		cbnz	r3, .L118
1094:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1597              		.loc 1 1094 12 view .LVU492
 1598 00ae 0120     		movs	r0, #1
 1599 00b0 E4E7     		b	.L108
 1600              	.L118:
1062:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1601              		.loc 1 1062 7 is_stmt 1 view .LVU493
1062:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1602              		.loc 1 1062 11 is_stmt 0 view .LVU494
 1603 00b2 05F12400 		add	r0, r5, #36
 1604 00b6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1605              	.LVL141:
1062:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1606              		.loc 1 1062 9 view .LVU495
 1607 00ba 18B1     		cbz	r0, .L112
1066:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 1608              		.loc 1 1066 8 is_stmt 1 view .LVU496
1066:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 1609              		.loc 1 1066 10 is_stmt 0 view .LVU497
 1610 00bc 26B1     		cbz	r6, .L113
1068:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 1611              		.loc 1 1068 9 is_stmt 1 view .LVU498
1068:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 1612              		.loc 1 1068 36 is_stmt 0 view .LVU499
 1613 00be 0120     		movs	r0, #1
 1614 00c0 3060     		str	r0, [r6]
 1615 00c2 DBE7     		b	.L108
 1616              	.L112:
ARM GAS  /tmp/cc2CcJyq.s 			page 82


1094:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1617              		.loc 1 1094 12 view .LVU500
 1618 00c4 0120     		movs	r0, #1
 1619 00c6 D9E7     		b	.L108
 1620              	.L113:
 1621 00c8 0120     		movs	r0, #1
 1622 00ca D7E7     		b	.L108
 1623              	.LBE117:
 1624              		.cfi_endproc
 1625              	.LFE11:
 1627              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1628              		.align	1
 1629              		.global	xQueueGiveFromISR
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1634              	xQueueGiveFromISR:
 1635              	.LVL142:
 1636              	.LFB12:
1109:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1637              		.loc 1 1109 1 is_stmt 1 view -0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
1110:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 1641              		.loc 1 1110 1 view .LVU502
1111:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1642              		.loc 1 1111 1 view .LVU503
1112:ThirdParty/FreeRTOS/Source/queue.c **** 
 1643              		.loc 1 1112 1 view .LVU504
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1644              		.loc 1 1120 2 view .LVU505
 1645 0000 68B1     		cbz	r0, .L134
1109:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1646              		.loc 1 1109 1 is_stmt 0 discriminator 2 view .LVU506
 1647 0002 70B5     		push	{r4, r5, r6, lr}
 1648              	.LCFI20:
 1649              		.cfi_def_cfa_offset 16
 1650              		.cfi_offset 4, -16
 1651              		.cfi_offset 5, -12
 1652              		.cfi_offset 6, -8
 1653              		.cfi_offset 14, -4
 1654 0004 0C46     		mov	r4, r1
 1655 0006 0546     		mov	r5, r0
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1656              		.loc 1 1120 25 is_stmt 1 discriminator 2 view .LVU507
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1657              		.loc 1 1124 2 discriminator 2 view .LVU508
 1658 0008 036C     		ldr	r3, [r0, #64]
 1659 000a 8BB1     		cbz	r3, .L122
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1660              		.loc 1 1124 2 view .LVU509
 1661              	.LBB118:
 1662              	.LBI118:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1663              		.loc 2 195 30 view .LVU510
 1664              	.LBB119:
ARM GAS  /tmp/cc2CcJyq.s 			page 83


 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1665              		.loc 2 197 1 view .LVU511
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1666              		.loc 2 199 2 view .LVU512
 1667              		.syntax unified
 1668              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1669 000c 4FF05003 			mov r3, #80												
 1670 0010 83F31188 		msr basepri, r3											
 1671 0014 BFF36F8F 		isb														
 1672 0018 BFF34F8F 		dsb														
 1673              	
 1674              	@ 0 "" 2
 1675              	.LVL143:
 1676              		.thumb
 1677              		.syntax unified
 1678              	.L123:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1679              		.loc 2 199 2 is_stmt 0 view .LVU513
 1680              	.LBE119:
 1681              	.LBE118:
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1682              		.loc 1 1124 2 is_stmt 1 discriminator 2 view .LVU514
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1683              		.loc 1 1124 2 discriminator 2 view .LVU515
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1684              		.loc 1 1124 2 discriminator 2 view .LVU516
 1685 001c FEE7     		b	.L123
 1686              	.L134:
 1687              	.LCFI21:
 1688              		.cfi_def_cfa_offset 0
 1689              		.cfi_restore 4
 1690              		.cfi_restore 5
 1691              		.cfi_restore 6
 1692              		.cfi_restore 14
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1693              		.loc 1 1120 2 view .LVU517
 1694              	.LBB120:
 1695              	.LBI120:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1696              		.loc 2 195 30 view .LVU518
 1697              	.LBB121:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1698              		.loc 2 197 1 view .LVU519
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1699              		.loc 2 199 2 view .LVU520
 1700              		.syntax unified
 1701              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1702 001e 4FF05003 			mov r3, #80												
 1703 0022 83F31188 		msr basepri, r3											
 1704 0026 BFF36F8F 		isb														
 1705 002a BFF34F8F 		dsb														
 1706              	
 1707              	@ 0 "" 2
 1708              	.LVL144:
 1709              		.thumb
 1710              		.syntax unified
 1711              	.L121:
ARM GAS  /tmp/cc2CcJyq.s 			page 84


 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1712              		.loc 2 199 2 is_stmt 0 view .LVU521
 1713              	.LBE121:
 1714              	.LBE120:
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1715              		.loc 1 1120 2 is_stmt 1 discriminator 1 view .LVU522
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1716              		.loc 1 1120 2 discriminator 1 view .LVU523
1120:ThirdParty/FreeRTOS/Source/queue.c **** 
 1717              		.loc 1 1120 2 discriminator 1 view .LVU524
 1718 002e FEE7     		b	.L121
 1719              	.L122:
 1720              	.LCFI22:
 1721              		.cfi_def_cfa_offset 16
 1722              		.cfi_offset 4, -16
 1723              		.cfi_offset 5, -12
 1724              		.cfi_offset 6, -8
 1725              		.cfi_offset 14, -4
1124:ThirdParty/FreeRTOS/Source/queue.c **** 
 1726              		.loc 1 1124 42 discriminator 2 view .LVU525
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1727              		.loc 1 1129 2 discriminator 2 view .LVU526
 1728 0030 0368     		ldr	r3, [r0]
 1729 0032 EBB1     		cbz	r3, .L135
 1730              	.L124:
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1731              		.loc 1 1129 120 discriminator 8 view .LVU527
1145:ThirdParty/FreeRTOS/Source/queue.c **** 
 1732              		.loc 1 1145 2 discriminator 8 view .LVU528
 1733 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1734              	.LVL145:
1147:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 1735              		.loc 1 1147 2 discriminator 8 view .LVU529
 1736              	.LBB122:
 1737              	.LBI122:
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1738              		.loc 2 211 34 discriminator 8 view .LVU530
 1739              	.LBB123:
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1740              		.loc 2 213 1 discriminator 8 view .LVU531
 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1741              		.loc 2 215 2 discriminator 8 view .LVU532
 1742              		.syntax unified
 1743              	@ 215 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1744 0038 EFF31186 			mrs r6, basepri											
 1745 003c 4FF05003 		mov r3, #80												
 1746 0040 83F31188 		msr basepri, r3											
 1747 0044 BFF36F8F 		isb														
 1748 0048 BFF34F8F 		dsb														
 1749              	
 1750              	@ 0 "" 2
 1751              	.LVL146:
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1752              		.loc 2 227 2 discriminator 8 view .LVU533
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1753              		.loc 2 227 2 is_stmt 0 discriminator 8 view .LVU534
 1754              		.thumb
ARM GAS  /tmp/cc2CcJyq.s 			page 85


 1755              		.syntax unified
 1756              	.LBE123:
 1757              	.LBE122:
 1758              	.LBB124:
1149:ThirdParty/FreeRTOS/Source/queue.c **** 
 1759              		.loc 1 1149 3 is_stmt 1 discriminator 8 view .LVU535
1149:ThirdParty/FreeRTOS/Source/queue.c **** 
 1760              		.loc 1 1149 21 is_stmt 0 discriminator 8 view .LVU536
 1761 004c AA6B     		ldr	r2, [r5, #56]
 1762              	.LVL147:
1154:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1763              		.loc 1 1154 3 is_stmt 1 discriminator 8 view .LVU537
1154:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1764              		.loc 1 1154 34 is_stmt 0 discriminator 8 view .LVU538
 1765 004e EB6B     		ldr	r3, [r5, #60]
1154:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 1766              		.loc 1 1154 5 discriminator 8 view .LVU539
 1767 0050 9342     		cmp	r3, r2
 1768 0052 26D9     		bls	.L128
 1769              	.LBB125:
1156:ThirdParty/FreeRTOS/Source/queue.c **** 
 1770              		.loc 1 1156 4 is_stmt 1 view .LVU540
1156:ThirdParty/FreeRTOS/Source/queue.c **** 
 1771              		.loc 1 1156 17 is_stmt 0 view .LVU541
 1772 0054 95F84530 		ldrb	r3, [r5, #69]	@ zero_extendqisi2
 1773 0058 5BB2     		sxtb	r3, r3
 1774              	.LVL148:
1158:ThirdParty/FreeRTOS/Source/queue.c **** 
 1775              		.loc 1 1158 39 is_stmt 1 view .LVU542
1166:ThirdParty/FreeRTOS/Source/queue.c **** 
 1776              		.loc 1 1166 4 view .LVU543
1166:ThirdParty/FreeRTOS/Source/queue.c **** 
 1777              		.loc 1 1166 51 is_stmt 0 view .LVU544
 1778 005a 0132     		adds	r2, r2, #1
 1779              	.LVL149:
1166:ThirdParty/FreeRTOS/Source/queue.c **** 
 1780              		.loc 1 1166 31 view .LVU545
 1781 005c AA63     		str	r2, [r5, #56]
1170:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1782              		.loc 1 1170 4 is_stmt 1 view .LVU546
1170:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 1783              		.loc 1 1170 6 is_stmt 0 view .LVU547
 1784 005e B3F1FF3F 		cmp	r3, #-1
 1785 0062 11D0     		beq	.L136
1256:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1786              		.loc 1 1256 5 is_stmt 1 view .LVU548
1256:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1787              		.loc 1 1256 45 is_stmt 0 view .LVU549
 1788 0064 0133     		adds	r3, r3, #1
 1789              	.LVL150:
1256:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1790              		.loc 1 1256 24 view .LVU550
 1791 0066 5BB2     		sxtb	r3, r3
 1792              	.LVL151:
1256:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 1793              		.loc 1 1256 22 view .LVU551
 1794 0068 85F84530 		strb	r3, [r5, #69]
ARM GAS  /tmp/cc2CcJyq.s 			page 86


1259:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1795              		.loc 1 1259 12 view .LVU552
 1796 006c 0120     		movs	r0, #1
 1797 006e 19E0     		b	.L126
 1798              	.LVL152:
 1799              	.L135:
1259:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1800              		.loc 1 1259 12 view .LVU553
 1801              	.LBE125:
 1802              	.LBE124:
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1803              		.loc 1 1129 2 discriminator 2 view .LVU554
 1804 0070 8368     		ldr	r3, [r0, #8]
 1805 0072 002B     		cmp	r3, #0
 1806 0074 DED0     		beq	.L124
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1807              		.loc 1 1129 2 is_stmt 1 view .LVU555
 1808              	.LBB128:
 1809              	.LBI128:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1810              		.loc 2 195 30 view .LVU556
 1811              	.LBB129:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1812              		.loc 2 197 1 view .LVU557
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1813              		.loc 2 199 2 view .LVU558
 1814              		.syntax unified
 1815              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1816 0076 4FF05003 			mov r3, #80												
 1817 007a 83F31188 		msr basepri, r3											
 1818 007e BFF36F8F 		isb														
 1819 0082 BFF34F8F 		dsb														
 1820              	
 1821              	@ 0 "" 2
 1822              	.LVL153:
 1823              		.thumb
 1824              		.syntax unified
 1825              	.L125:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1826              		.loc 2 199 2 is_stmt 0 view .LVU559
 1827              	.LBE129:
 1828              	.LBE128:
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1829              		.loc 1 1129 2 is_stmt 1 discriminator 3 view .LVU560
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1830              		.loc 1 1129 2 discriminator 3 view .LVU561
1129:ThirdParty/FreeRTOS/Source/queue.c **** 
 1831              		.loc 1 1129 2 discriminator 3 view .LVU562
 1832 0086 FEE7     		b	.L125
 1833              	.LVL154:
 1834              	.L136:
 1835              	.LBB130:
 1836              	.LBB126:
1225:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1837              		.loc 1 1225 6 view .LVU563
1225:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1838              		.loc 1 1225 10 is_stmt 0 view .LVU564
ARM GAS  /tmp/cc2CcJyq.s 			page 87


 1839 0088 6B6A     		ldr	r3, [r5, #36]
 1840              	.LVL155:
1225:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 1841              		.loc 1 1225 8 view .LVU565
 1842 008a 0BB9     		cbnz	r3, .L137
1259:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1843              		.loc 1 1259 12 view .LVU566
 1844 008c 0120     		movs	r0, #1
 1845 008e 09E0     		b	.L126
 1846              	.L137:
1227:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1847              		.loc 1 1227 7 is_stmt 1 view .LVU567
1227:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1848              		.loc 1 1227 11 is_stmt 0 view .LVU568
 1849 0090 05F12400 		add	r0, r5, #36
 1850 0094 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1851              	.LVL156:
1227:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 1852              		.loc 1 1227 9 view .LVU569
 1853 0098 38B1     		cbz	r0, .L130
1231:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 1854              		.loc 1 1231 8 is_stmt 1 view .LVU570
1231:ThirdParty/FreeRTOS/Source/queue.c **** 							{
 1855              		.loc 1 1231 10 is_stmt 0 view .LVU571
 1856 009a 44B1     		cbz	r4, .L131
1233:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 1857              		.loc 1 1233 9 is_stmt 1 view .LVU572
1233:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 1858              		.loc 1 1233 36 is_stmt 0 view .LVU573
 1859 009c 0120     		movs	r0, #1
 1860 009e 2060     		str	r0, [r4]
 1861 00a0 00E0     		b	.L126
 1862              	.LVL157:
 1863              	.L128:
1233:ThirdParty/FreeRTOS/Source/queue.c **** 							}
 1864              		.loc 1 1233 36 view .LVU574
 1865              	.LBE126:
1264:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1866              		.loc 1 1264 12 view .LVU575
 1867 00a2 0020     		movs	r0, #0
 1868              	.LVL158:
 1869              	.L126:
1264:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1870              		.loc 1 1264 12 view .LVU576
 1871              	.LBE130:
1267:ThirdParty/FreeRTOS/Source/queue.c **** 
 1872              		.loc 1 1267 2 is_stmt 1 view .LVU577
 1873              	.LBB131:
 1874              	.LBI131:
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1875              		.loc 2 231 30 view .LVU578
 1876              	.LBB132:
 1877              		.loc 2 233 2 view .LVU579
 1878              		.syntax unified
 1879              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1880 00a4 86F31188 			msr basepri, r6	
 1881              	@ 0 "" 2
ARM GAS  /tmp/cc2CcJyq.s 			page 88


 1882              	.LVL159:
 1883              		.loc 2 233 2 is_stmt 0 view .LVU580
 1884              		.thumb
 1885              		.syntax unified
 1886              	.LBE132:
 1887              	.LBE131:
1269:ThirdParty/FreeRTOS/Source/queue.c **** }
 1888              		.loc 1 1269 2 is_stmt 1 view .LVU581
1270:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1889              		.loc 1 1270 1 is_stmt 0 view .LVU582
 1890 00a8 70BD     		pop	{r4, r5, r6, pc}
 1891              	.LVL160:
 1892              	.L130:
 1893              	.LBB133:
 1894              	.LBB127:
1259:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 1895              		.loc 1 1259 12 view .LVU583
 1896 00aa 0120     		movs	r0, #1
 1897 00ac FAE7     		b	.L126
 1898              	.L131:
 1899 00ae 0120     		movs	r0, #1
 1900 00b0 F8E7     		b	.L126
 1901              	.LBE127:
 1902              	.LBE133:
 1903              		.cfi_endproc
 1904              	.LFE12:
 1906              		.section	.text.xQueueReceive,"ax",%progbits
 1907              		.align	1
 1908              		.global	xQueueReceive
 1909              		.syntax unified
 1910              		.thumb
 1911              		.thumb_func
 1913              	xQueueReceive:
 1914              	.LVL161:
 1915              	.LFB13:
1274:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1916              		.loc 1 1274 1 is_stmt 1 view -0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 16
 1919              		@ frame_needed = 0, uses_anonymous_args = 0
1274:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1920              		.loc 1 1274 1 is_stmt 0 view .LVU585
 1921 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1922              	.LCFI23:
 1923              		.cfi_def_cfa_offset 20
 1924              		.cfi_offset 4, -20
 1925              		.cfi_offset 5, -16
 1926              		.cfi_offset 6, -12
 1927              		.cfi_offset 7, -8
 1928              		.cfi_offset 14, -4
 1929 0002 85B0     		sub	sp, sp, #20
 1930              	.LCFI24:
 1931              		.cfi_def_cfa_offset 40
 1932 0004 0192     		str	r2, [sp, #4]
1275:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 1933              		.loc 1 1275 1 is_stmt 1 view .LVU586
 1934              	.LVL162:
ARM GAS  /tmp/cc2CcJyq.s 			page 89


1276:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 1935              		.loc 1 1276 1 view .LVU587
1277:ThirdParty/FreeRTOS/Source/queue.c **** 
 1936              		.loc 1 1277 1 view .LVU588
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 1937              		.loc 1 1280 2 view .LVU589
 1938 0006 90B1     		cbz	r0, .L158
 1939 0008 0F46     		mov	r7, r1
 1940 000a 0446     		mov	r4, r0
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 1941              		.loc 1 1280 29 discriminator 2 view .LVU590
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 1942              		.loc 1 1284 2 discriminator 2 view .LVU591
 1943 000c C1B1     		cbz	r1, .L159
 1944              	.L141:
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 1945              		.loc 1 1284 100 discriminator 8 view .LVU592
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1946              		.loc 1 1289 3 discriminator 8 view .LVU593
 1947 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 1948              	.LVL163:
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1949              		.loc 1 1289 3 is_stmt 0 discriminator 8 view .LVU594
 1950 0012 0646     		mov	r6, r0
 1951 0014 00BB     		cbnz	r0, .L156
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1952              		.loc 1 1289 3 discriminator 2 view .LVU595
 1953 0016 019B     		ldr	r3, [sp, #4]
 1954 0018 002B     		cmp	r3, #0
 1955 001a 5ED0     		beq	.L145
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1956              		.loc 1 1289 3 is_stmt 1 view .LVU596
 1957              	.LBB134:
 1958              	.LBI134:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1959              		.loc 2 195 30 view .LVU597
 1960              	.LBB135:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1961              		.loc 2 197 1 view .LVU598
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1962              		.loc 2 199 2 view .LVU599
 1963              		.syntax unified
 1964              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1965 001c 4FF05003 			mov r3, #80												
 1966 0020 83F31188 		msr basepri, r3											
 1967 0024 BFF36F8F 		isb														
 1968 0028 BFF34F8F 		dsb														
 1969              	
 1970              	@ 0 "" 2
 1971              	.LVL164:
 1972              		.thumb
 1973              		.syntax unified
 1974              	.L144:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1975              		.loc 2 199 2 is_stmt 0 view .LVU600
 1976              	.LBE135:
 1977              	.LBE134:
ARM GAS  /tmp/cc2CcJyq.s 			page 90


1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1978              		.loc 1 1289 3 is_stmt 1 discriminator 3 view .LVU601
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1979              		.loc 1 1289 3 discriminator 3 view .LVU602
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 1980              		.loc 1 1289 3 discriminator 3 view .LVU603
 1981 002c FEE7     		b	.L144
 1982              	.LVL165:
 1983              	.L158:
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 1984              		.loc 1 1280 2 view .LVU604
 1985              	.LBB136:
 1986              	.LBI136:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1987              		.loc 2 195 30 view .LVU605
 1988              	.LBB137:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1989              		.loc 2 197 1 view .LVU606
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1990              		.loc 2 199 2 view .LVU607
 1991              		.syntax unified
 1992              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1993 002e 4FF05003 			mov r3, #80												
 1994 0032 83F31188 		msr basepri, r3											
 1995 0036 BFF36F8F 		isb														
 1996 003a BFF34F8F 		dsb														
 1997              	
 1998              	@ 0 "" 2
 1999              	.LVL166:
 2000              		.thumb
 2001              		.syntax unified
 2002              	.L140:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2003              		.loc 2 199 2 is_stmt 0 view .LVU608
 2004              	.LBE137:
 2005              	.LBE136:
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 2006              		.loc 1 1280 2 is_stmt 1 discriminator 1 view .LVU609
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 2007              		.loc 1 1280 2 discriminator 1 view .LVU610
1280:ThirdParty/FreeRTOS/Source/queue.c **** 
 2008              		.loc 1 1280 2 discriminator 1 view .LVU611
 2009 003e FEE7     		b	.L140
 2010              	.L159:
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2011              		.loc 1 1284 2 is_stmt 0 discriminator 2 view .LVU612
 2012 0040 036C     		ldr	r3, [r0, #64]
 2013 0042 002B     		cmp	r3, #0
 2014 0044 E3D0     		beq	.L141
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2015              		.loc 1 1284 2 is_stmt 1 view .LVU613
 2016              	.LBB138:
 2017              	.LBI138:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2018              		.loc 2 195 30 view .LVU614
 2019              	.LBB139:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 91


 2020              		.loc 2 197 1 view .LVU615
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2021              		.loc 2 199 2 view .LVU616
 2022              		.syntax unified
 2023              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2024 0046 4FF05003 			mov r3, #80												
 2025 004a 83F31188 		msr basepri, r3											
 2026 004e BFF36F8F 		isb														
 2027 0052 BFF34F8F 		dsb														
 2028              	
 2029              	@ 0 "" 2
 2030              	.LVL167:
 2031              		.thumb
 2032              		.syntax unified
 2033              	.L142:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2034              		.loc 2 199 2 is_stmt 0 view .LVU617
 2035              	.LBE139:
 2036              	.LBE138:
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2037              		.loc 1 1284 2 is_stmt 1 discriminator 2 view .LVU618
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2038              		.loc 1 1284 2 discriminator 2 view .LVU619
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2039              		.loc 1 1284 2 discriminator 2 view .LVU620
 2040 0056 FEE7     		b	.L142
 2041              	.LVL168:
 2042              	.L156:
1284:ThirdParty/FreeRTOS/Source/queue.c **** 
 2043              		.loc 1 1284 2 is_stmt 0 discriminator 2 view .LVU621
 2044 0058 0026     		movs	r6, #0
 2045 005a 3EE0     		b	.L145
 2046              	.LVL169:
 2047              	.L162:
 2048              	.LBB140:
1308:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2049              		.loc 1 1308 5 is_stmt 1 view .LVU622
 2050 005c 3946     		mov	r1, r7
 2051 005e 2046     		mov	r0, r4
 2052 0060 FFF7FEFF 		bl	prvCopyDataFromQueue
 2053              	.LVL170:
1309:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2054              		.loc 1 1309 34 view .LVU623
1310:ThirdParty/FreeRTOS/Source/queue.c **** 
 2055              		.loc 1 1310 5 view .LVU624
1310:ThirdParty/FreeRTOS/Source/queue.c **** 
 2056              		.loc 1 1310 52 is_stmt 0 view .LVU625
 2057 0064 013D     		subs	r5, r5, #1
 2058              	.LVL171:
1310:ThirdParty/FreeRTOS/Source/queue.c **** 
 2059              		.loc 1 1310 32 view .LVU626
 2060 0066 A563     		str	r5, [r4, #56]
1315:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2061              		.loc 1 1315 5 is_stmt 1 view .LVU627
1315:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2062              		.loc 1 1315 9 is_stmt 0 view .LVU628
 2063 0068 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cc2CcJyq.s 			page 92


1315:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2064              		.loc 1 1315 7 view .LVU629
 2065 006a 23B9     		cbnz	r3, .L160
 2066              	.L147:
1328:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2067              		.loc 1 1328 30 is_stmt 1 view .LVU630
1331:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2068              		.loc 1 1331 5 view .LVU631
 2069 006c FFF7FEFF 		bl	vPortExitCritical
 2070              	.LVL172:
1332:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2071              		.loc 1 1332 5 view .LVU632
1332:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2072              		.loc 1 1332 12 is_stmt 0 view .LVU633
 2073 0070 0120     		movs	r0, #1
 2074              	.LVL173:
 2075              	.L138:
1332:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2076              		.loc 1 1332 12 view .LVU634
 2077              	.LBE140:
1411:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2078              		.loc 1 1411 1 view .LVU635
 2079 0072 05B0     		add	sp, sp, #20
 2080              	.LCFI25:
 2081              		.cfi_remember_state
 2082              		.cfi_def_cfa_offset 20
 2083              		@ sp needed
 2084 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 2085              	.LVL174:
 2086              	.L160:
 2087              	.LCFI26:
 2088              		.cfi_restore_state
 2089              	.LBB141:
1317:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2090              		.loc 1 1317 6 is_stmt 1 view .LVU636
1317:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2091              		.loc 1 1317 10 is_stmt 0 view .LVU637
 2092 0076 04F11000 		add	r0, r4, #16
 2093 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2094              	.LVL175:
1317:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2095              		.loc 1 1317 8 view .LVU638
 2096 007e 0028     		cmp	r0, #0
 2097 0080 F4D0     		beq	.L147
1319:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2098              		.loc 1 1319 7 is_stmt 1 view .LVU639
 2099 0082 4FF0E023 		mov	r3, #-536813568
 2100 0086 4FF08052 		mov	r2, #268435456
 2101 008a C3F8042D 		str	r2, [r3, #3332]
1319:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2102              		.loc 1 1319 7 view .LVU640
 2103              		.syntax unified
 2104              	@ 1319 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2105 008e BFF34F8F 		dsb
 2106              	@ 0 "" 2
1319:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2107              		.loc 1 1319 7 view .LVU641
ARM GAS  /tmp/cc2CcJyq.s 			page 93


 2108              	@ 1319 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2109 0092 BFF36F8F 		isb
 2110              	@ 0 "" 2
1319:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2111              		.loc 1 1319 39 view .LVU642
 2112              		.thumb
 2113              		.syntax unified
 2114 0096 E9E7     		b	.L147
 2115              	.LVL176:
 2116              	.L163:
1340:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2117              		.loc 1 1340 6 view .LVU643
 2118 0098 FFF7FEFF 		bl	vPortExitCritical
 2119              	.LVL177:
1341:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2120              		.loc 1 1341 42 view .LVU644
1342:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2121              		.loc 1 1342 6 view .LVU645
1342:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2122              		.loc 1 1342 13 is_stmt 0 view .LVU646
 2123 009c 0020     		movs	r0, #0
 2124 009e E8E7     		b	.L138
 2125              	.L164:
1348:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2126              		.loc 1 1348 6 is_stmt 1 view .LVU647
 2127 00a0 02A8     		add	r0, sp, #8
 2128 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2129              	.LVL178:
1349:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2130              		.loc 1 1349 6 view .LVU648
1349:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2131              		.loc 1 1349 20 is_stmt 0 view .LVU649
 2132 00a6 0126     		movs	r6, #1
 2133 00a8 21E0     		b	.L150
 2134              	.LVL179:
 2135              	.L165:
1349:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2136              		.loc 1 1349 20 view .LVU650
 2137              	.LBE141:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2138              		.loc 1 1364 3 is_stmt 1 discriminator 1 view .LVU651
 2139 00aa 0023     		movs	r3, #0
 2140 00ac 84F84430 		strb	r3, [r4, #68]
 2141 00b0 29E0     		b	.L151
 2142              	.L166:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2143              		.loc 1 1364 3 discriminator 4 view .LVU652
 2144 00b2 0023     		movs	r3, #0
 2145 00b4 84F84530 		strb	r3, [r4, #69]
 2146 00b8 2BE0     		b	.L152
 2147              	.L154:
1389:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2148              		.loc 1 1389 5 view .LVU653
 2149 00ba 2046     		mov	r0, r4
 2150 00bc FFF7FEFF 		bl	prvUnlockQueue
 2151              	.LVL180:
1390:ThirdParty/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc2CcJyq.s 			page 94


 2152              		.loc 1 1390 5 view .LVU654
1390:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2153              		.loc 1 1390 14 is_stmt 0 view .LVU655
 2154 00c0 FFF7FEFF 		bl	xTaskResumeAll
 2155              	.LVL181:
 2156 00c4 09E0     		b	.L145
 2157              	.L153:
1397:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2158              		.loc 1 1397 4 is_stmt 1 view .LVU656
 2159 00c6 2046     		mov	r0, r4
 2160 00c8 FFF7FEFF 		bl	prvUnlockQueue
 2161              	.LVL182:
1398:ThirdParty/FreeRTOS/Source/queue.c **** 
 2162              		.loc 1 1398 4 view .LVU657
1398:ThirdParty/FreeRTOS/Source/queue.c **** 
 2163              		.loc 1 1398 13 is_stmt 0 view .LVU658
 2164 00cc FFF7FEFF 		bl	xTaskResumeAll
 2165              	.LVL183:
1400:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2166              		.loc 1 1400 4 is_stmt 1 view .LVU659
1400:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2167              		.loc 1 1400 8 is_stmt 0 view .LVU660
 2168 00d0 2046     		mov	r0, r4
 2169 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 2170              	.LVL184:
1400:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2171              		.loc 1 1400 6 view .LVU661
 2172 00d6 0028     		cmp	r0, #0
 2173 00d8 3FD1     		bne	.L161
 2174              	.LVL185:
 2175              	.L145:
1289:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2176              		.loc 1 1289 104 is_stmt 1 discriminator 8 view .LVU662
1297:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 2177              		.loc 1 1297 2 discriminator 8 view .LVU663
1299:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2178              		.loc 1 1299 3 discriminator 8 view .LVU664
 2179 00da FFF7FEFF 		bl	vPortEnterCritical
 2180              	.LVL186:
 2181              	.LBB142:
1301:ThirdParty/FreeRTOS/Source/queue.c **** 
 2182              		.loc 1 1301 4 discriminator 8 view .LVU665
1301:ThirdParty/FreeRTOS/Source/queue.c **** 
 2183              		.loc 1 1301 22 is_stmt 0 discriminator 8 view .LVU666
 2184 00de A56B     		ldr	r5, [r4, #56]
 2185              	.LVL187:
1305:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2186              		.loc 1 1305 4 is_stmt 1 discriminator 8 view .LVU667
1305:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2187              		.loc 1 1305 6 is_stmt 0 discriminator 8 view .LVU668
 2188 00e0 002D     		cmp	r5, #0
 2189 00e2 BBD1     		bne	.L162
1336:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2190              		.loc 1 1336 5 is_stmt 1 view .LVU669
1336:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2191              		.loc 1 1336 22 is_stmt 0 view .LVU670
 2192 00e4 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/cc2CcJyq.s 			page 95


1336:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2193              		.loc 1 1336 7 view .LVU671
 2194 00e6 002B     		cmp	r3, #0
 2195 00e8 D6D0     		beq	.L163
1344:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2196              		.loc 1 1344 10 is_stmt 1 view .LVU672
1344:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2197              		.loc 1 1344 12 is_stmt 0 view .LVU673
 2198 00ea 002E     		cmp	r6, #0
 2199 00ec D8D0     		beq	.L164
 2200              	.LVL188:
 2201              	.L150:
1354:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2202              		.loc 1 1354 30 is_stmt 1 view .LVU674
 2203              	.LBE142:
1358:ThirdParty/FreeRTOS/Source/queue.c **** 
 2204              		.loc 1 1358 3 view .LVU675
 2205 00ee FFF7FEFF 		bl	vPortExitCritical
 2206              	.LVL189:
1363:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2207              		.loc 1 1363 3 view .LVU676
 2208 00f2 FFF7FEFF 		bl	vTaskSuspendAll
 2209              	.LVL190:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2210              		.loc 1 1364 3 view .LVU677
 2211 00f6 FFF7FEFF 		bl	vPortEnterCritical
 2212              	.LVL191:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2213              		.loc 1 1364 3 view .LVU678
 2214 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2215 00fe 5BB2     		sxtb	r3, r3
 2216 0100 B3F1FF3F 		cmp	r3, #-1
 2217 0104 D1D0     		beq	.L165
 2218              	.L151:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2219              		.loc 1 1364 3 discriminator 3 view .LVU679
 2220 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2221 010a 5BB2     		sxtb	r3, r3
 2222 010c B3F1FF3F 		cmp	r3, #-1
 2223 0110 CFD0     		beq	.L166
 2224              	.L152:
1364:ThirdParty/FreeRTOS/Source/queue.c **** 
 2225              		.loc 1 1364 3 discriminator 6 view .LVU680
 2226 0112 FFF7FEFF 		bl	vPortExitCritical
 2227              	.LVL192:
1367:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2228              		.loc 1 1367 3 discriminator 6 view .LVU681
1367:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2229              		.loc 1 1367 7 is_stmt 0 discriminator 6 view .LVU682
 2230 0116 01A9     		add	r1, sp, #4
 2231 0118 02A8     		add	r0, sp, #8
 2232 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 2233              	.LVL193:
1367:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2234              		.loc 1 1367 5 discriminator 6 view .LVU683
 2235 011e 0028     		cmp	r0, #0
 2236 0120 D1D1     		bne	.L153
ARM GAS  /tmp/cc2CcJyq.s 			page 96


1371:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2237              		.loc 1 1371 4 is_stmt 1 view .LVU684
1371:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2238              		.loc 1 1371 8 is_stmt 0 view .LVU685
 2239 0122 2046     		mov	r0, r4
 2240 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 2241              	.LVL194:
1371:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2242              		.loc 1 1371 6 view .LVU686
 2243 0128 0028     		cmp	r0, #0
 2244 012a C6D0     		beq	.L154
1373:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2245              		.loc 1 1373 46 is_stmt 1 view .LVU687
1374:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2246              		.loc 1 1374 5 view .LVU688
 2247 012c 0199     		ldr	r1, [sp, #4]
 2248 012e 04F12400 		add	r0, r4, #36
 2249 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2250              	.LVL195:
1375:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2251              		.loc 1 1375 5 view .LVU689
 2252 0136 2046     		mov	r0, r4
 2253 0138 FFF7FEFF 		bl	prvUnlockQueue
 2254              	.LVL196:
1376:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2255              		.loc 1 1376 5 view .LVU690
1376:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2256              		.loc 1 1376 9 is_stmt 0 view .LVU691
 2257 013c FFF7FEFF 		bl	xTaskResumeAll
 2258              	.LVL197:
1376:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2259              		.loc 1 1376 7 view .LVU692
 2260 0140 0028     		cmp	r0, #0
 2261 0142 CAD1     		bne	.L145
1378:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2262              		.loc 1 1378 6 is_stmt 1 view .LVU693
 2263 0144 4FF0E023 		mov	r3, #-536813568
 2264 0148 4FF08052 		mov	r2, #268435456
 2265 014c C3F8042D 		str	r2, [r3, #3332]
1378:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2266              		.loc 1 1378 6 view .LVU694
 2267              		.syntax unified
 2268              	@ 1378 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2269 0150 BFF34F8F 		dsb
 2270              	@ 0 "" 2
1378:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2271              		.loc 1 1378 6 view .LVU695
 2272              	@ 1378 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2273 0154 BFF36F8F 		isb
 2274              	@ 0 "" 2
1378:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2275              		.loc 1 1378 28 view .LVU696
 2276              		.thumb
 2277              		.syntax unified
 2278 0158 BFE7     		b	.L145
 2279              	.L161:
1403:ThirdParty/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cc2CcJyq.s 			page 97


 2280              		.loc 1 1403 12 is_stmt 0 view .LVU697
 2281 015a 0020     		movs	r0, #0
 2282 015c 89E7     		b	.L138
 2283              		.cfi_endproc
 2284              	.LFE13:
 2286              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2287              		.align	1
 2288              		.global	xQueueSemaphoreTake
 2289              		.syntax unified
 2290              		.thumb
 2291              		.thumb_func
 2293              	xQueueSemaphoreTake:
 2294              	.LVL198:
 2295              	.LFB14:
1415:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2296              		.loc 1 1415 1 is_stmt 1 view -0
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 16
 2299              		@ frame_needed = 0, uses_anonymous_args = 0
1415:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2300              		.loc 1 1415 1 is_stmt 0 view .LVU699
 2301 0000 70B5     		push	{r4, r5, r6, lr}
 2302              	.LCFI27:
 2303              		.cfi_def_cfa_offset 16
 2304              		.cfi_offset 4, -16
 2305              		.cfi_offset 5, -12
 2306              		.cfi_offset 6, -8
 2307              		.cfi_offset 14, -4
 2308 0002 84B0     		sub	sp, sp, #16
 2309              	.LCFI28:
 2310              		.cfi_def_cfa_offset 32
 2311 0004 0191     		str	r1, [sp, #4]
1416:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 2312              		.loc 1 1416 1 is_stmt 1 view .LVU700
 2313              	.LVL199:
1417:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2314              		.loc 1 1417 1 view .LVU701
1418:ThirdParty/FreeRTOS/Source/queue.c **** 
 2315              		.loc 1 1418 1 view .LVU702
1421:ThirdParty/FreeRTOS/Source/queue.c **** #endif
 2316              		.loc 1 1421 2 view .LVU703
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
 2317              		.loc 1 1425 2 view .LVU704
 2318 0006 58B1     		cbz	r0, .L193
 2319 0008 0446     		mov	r4, r0
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
 2320              		.loc 1 1425 29 discriminator 2 view .LVU705
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2321              		.loc 1 1429 2 discriminator 2 view .LVU706
 2322 000a 036C     		ldr	r3, [r0, #64]
 2323 000c 8BB1     		cbz	r3, .L170
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2324              		.loc 1 1429 2 view .LVU707
 2325              	.LBB143:
 2326              	.LBI143:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2327              		.loc 2 195 30 view .LVU708
ARM GAS  /tmp/cc2CcJyq.s 			page 98


 2328              	.LBB144:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2329              		.loc 2 197 1 view .LVU709
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2330              		.loc 2 199 2 view .LVU710
 2331              		.syntax unified
 2332              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2333 000e 4FF05003 			mov r3, #80												
 2334 0012 83F31188 		msr basepri, r3											
 2335 0016 BFF36F8F 		isb														
 2336 001a BFF34F8F 		dsb														
 2337              	
 2338              	@ 0 "" 2
 2339              	.LVL200:
 2340              		.thumb
 2341              		.syntax unified
 2342              	.L171:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2343              		.loc 2 199 2 is_stmt 0 view .LVU711
 2344              	.LBE144:
 2345              	.LBE143:
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2346              		.loc 1 1429 2 is_stmt 1 discriminator 2 view .LVU712
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2347              		.loc 1 1429 2 discriminator 2 view .LVU713
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2348              		.loc 1 1429 2 discriminator 2 view .LVU714
 2349 001e FEE7     		b	.L171
 2350              	.L193:
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
 2351              		.loc 1 1425 2 view .LVU715
 2352              	.LBB145:
 2353              	.LBI145:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2354              		.loc 2 195 30 view .LVU716
 2355              	.LBB146:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2356              		.loc 2 197 1 view .LVU717
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2357              		.loc 2 199 2 view .LVU718
 2358              		.syntax unified
 2359              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2360 0020 4FF05003 			mov r3, #80												
 2361 0024 83F31188 		msr basepri, r3											
 2362 0028 BFF36F8F 		isb														
 2363 002c BFF34F8F 		dsb														
 2364              	
 2365              	@ 0 "" 2
 2366              	.LVL201:
 2367              		.thumb
 2368              		.syntax unified
 2369              	.L169:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2370              		.loc 2 199 2 is_stmt 0 view .LVU719
 2371              	.LBE146:
 2372              	.LBE145:
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 99


 2373              		.loc 1 1425 2 is_stmt 1 discriminator 1 view .LVU720
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
 2374              		.loc 1 1425 2 discriminator 1 view .LVU721
1425:ThirdParty/FreeRTOS/Source/queue.c **** 
 2375              		.loc 1 1425 2 discriminator 1 view .LVU722
 2376 0030 FEE7     		b	.L169
 2377              	.L170:
1429:ThirdParty/FreeRTOS/Source/queue.c **** 
 2378              		.loc 1 1429 42 discriminator 2 view .LVU723
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2379              		.loc 1 1434 3 discriminator 2 view .LVU724
 2380 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2381              	.LVL202:
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2382              		.loc 1 1434 3 is_stmt 0 discriminator 2 view .LVU725
 2383 0036 0546     		mov	r5, r0
 2384 0038 50B9     		cbnz	r0, .L190
 2385 003a 019B     		ldr	r3, [sp, #4]
 2386 003c 5BB1     		cbz	r3, .L191
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2387              		.loc 1 1434 3 is_stmt 1 view .LVU726
 2388              	.LBB147:
 2389              	.LBI147:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2390              		.loc 2 195 30 view .LVU727
 2391              	.LBB148:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2392              		.loc 2 197 1 view .LVU728
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2393              		.loc 2 199 2 view .LVU729
 2394              		.syntax unified
 2395              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2396 003e 4FF05003 			mov r3, #80												
 2397 0042 83F31188 		msr basepri, r3											
 2398 0046 BFF36F8F 		isb														
 2399 004a BFF34F8F 		dsb														
 2400              	
 2401              	@ 0 "" 2
 2402              	.LVL203:
 2403              		.thumb
 2404              		.syntax unified
 2405              	.L173:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2406              		.loc 2 199 2 is_stmt 0 view .LVU730
 2407              	.LBE148:
 2408              	.LBE147:
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2409              		.loc 1 1434 3 is_stmt 1 discriminator 3 view .LVU731
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2410              		.loc 1 1434 3 discriminator 3 view .LVU732
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2411              		.loc 1 1434 3 discriminator 3 view .LVU733
 2412 004e FEE7     		b	.L173
 2413              	.L190:
 2414 0050 0026     		movs	r6, #0
 2415 0052 3546     		mov	r5, r6
 2416 0054 55E0     		b	.L174
ARM GAS  /tmp/cc2CcJyq.s 			page 100


 2417              	.L191:
 2418 0056 0646     		mov	r6, r0
 2419 0058 53E0     		b	.L174
 2420              	.LVL204:
 2421              	.L197:
 2422              	.LBB149:
1454:ThirdParty/FreeRTOS/Source/queue.c **** 
 2423              		.loc 1 1454 34 view .LVU734
1458:ThirdParty/FreeRTOS/Source/queue.c **** 
 2424              		.loc 1 1458 5 view .LVU735
1458:ThirdParty/FreeRTOS/Source/queue.c **** 
 2425              		.loc 1 1458 51 is_stmt 0 view .LVU736
 2426 005a 013B     		subs	r3, r3, #1
 2427              	.LVL205:
1458:ThirdParty/FreeRTOS/Source/queue.c **** 
 2428              		.loc 1 1458 32 view .LVU737
 2429 005c A363     		str	r3, [r4, #56]
1462:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2430              		.loc 1 1462 6 is_stmt 1 view .LVU738
1462:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2431              		.loc 1 1462 17 is_stmt 0 view .LVU739
 2432 005e 2368     		ldr	r3, [r4]
 2433              	.LVL206:
1462:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2434              		.loc 1 1462 8 view .LVU740
 2435 0060 3BB1     		cbz	r3, .L194
 2436              	.LVL207:
 2437              	.L176:
1470:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2438              		.loc 1 1470 31 is_stmt 1 view .LVU741
1477:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2439              		.loc 1 1477 5 view .LVU742
1477:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2440              		.loc 1 1477 9 is_stmt 0 view .LVU743
 2441 0062 2369     		ldr	r3, [r4, #16]
1477:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2442              		.loc 1 1477 7 view .LVU744
 2443 0064 4BB9     		cbnz	r3, .L195
 2444              	.L177:
1490:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2445              		.loc 1 1490 30 is_stmt 1 view .LVU745
1493:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2446              		.loc 1 1493 5 view .LVU746
 2447 0066 FFF7FEFF 		bl	vPortExitCritical
 2448              	.LVL208:
1494:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2449              		.loc 1 1494 5 view .LVU747
1494:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2450              		.loc 1 1494 12 is_stmt 0 view .LVU748
 2451 006a 0126     		movs	r6, #1
 2452              	.LVL209:
 2453              	.L167:
1494:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2454              		.loc 1 1494 12 view .LVU749
 2455              	.LBE149:
1629:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2456              		.loc 1 1629 1 view .LVU750
ARM GAS  /tmp/cc2CcJyq.s 			page 101


 2457 006c 3046     		mov	r0, r6
 2458 006e 04B0     		add	sp, sp, #16
 2459              	.LCFI29:
 2460              		.cfi_remember_state
 2461              		.cfi_def_cfa_offset 16
 2462              		@ sp needed
 2463 0070 70BD     		pop	{r4, r5, r6, pc}
 2464              	.LVL210:
 2465              	.L194:
 2466              	.LCFI30:
 2467              		.cfi_restore_state
 2468              	.LBB152:
1466:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2469              		.loc 1 1466 7 is_stmt 1 view .LVU751
1466:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2470              		.loc 1 1466 44 is_stmt 0 view .LVU752
 2471 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2472              	.LVL211:
1466:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2473              		.loc 1 1466 42 view .LVU753
 2474 0076 A060     		str	r0, [r4, #8]
 2475 0078 F3E7     		b	.L176
 2476              	.L195:
1479:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2477              		.loc 1 1479 6 is_stmt 1 view .LVU754
1479:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2478              		.loc 1 1479 10 is_stmt 0 view .LVU755
 2479 007a 04F11000 		add	r0, r4, #16
 2480 007e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2481              	.LVL212:
1479:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2482              		.loc 1 1479 8 view .LVU756
 2483 0082 0028     		cmp	r0, #0
 2484 0084 EFD0     		beq	.L177
1481:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2485              		.loc 1 1481 7 is_stmt 1 view .LVU757
 2486 0086 4FF0E023 		mov	r3, #-536813568
 2487 008a 4FF08052 		mov	r2, #268435456
 2488 008e C3F8042D 		str	r2, [r3, #3332]
1481:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2489              		.loc 1 1481 7 view .LVU758
 2490              		.syntax unified
 2491              	@ 1481 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2492 0092 BFF34F8F 		dsb
 2493              	@ 0 "" 2
1481:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2494              		.loc 1 1481 7 view .LVU759
 2495              	@ 1481 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2496 0096 BFF36F8F 		isb
 2497              	@ 0 "" 2
1481:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2498              		.loc 1 1481 39 view .LVU760
 2499              		.thumb
 2500              		.syntax unified
 2501 009a E4E7     		b	.L177
 2502              	.L198:
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cc2CcJyq.s 			page 102


 2503              		.loc 1 1505 7 view .LVU761
 2504 009c 46B1     		cbz	r6, .L180
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2505              		.loc 1 1505 7 view .LVU762
 2506              	.LBB150:
 2507              	.LBI150:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2508              		.loc 2 195 30 view .LVU763
 2509              	.LBB151:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2510              		.loc 2 197 1 view .LVU764
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2511              		.loc 2 199 2 view .LVU765
 2512              		.syntax unified
 2513              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2514 009e 4FF05003 			mov r3, #80												
 2515 00a2 83F31188 		msr basepri, r3											
 2516 00a6 BFF36F8F 		isb														
 2517 00aa BFF34F8F 		dsb														
 2518              	
 2519              	@ 0 "" 2
 2520              	.LVL213:
 2521              		.thumb
 2522              		.syntax unified
 2523              	.L181:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2524              		.loc 2 199 2 is_stmt 0 view .LVU766
 2525              	.LBE151:
 2526              	.LBE150:
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2527              		.loc 1 1505 7 is_stmt 1 discriminator 4 view .LVU767
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2528              		.loc 1 1505 7 discriminator 4 view .LVU768
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2529              		.loc 1 1505 7 discriminator 4 view .LVU769
 2530 00ae FEE7     		b	.L181
 2531              	.L180:
1505:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2532              		.loc 1 1505 54 discriminator 2 view .LVU770
1511:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2533              		.loc 1 1511 6 discriminator 2 view .LVU771
 2534 00b0 FFF7FEFF 		bl	vPortExitCritical
 2535              	.LVL214:
1512:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2536              		.loc 1 1512 42 discriminator 2 view .LVU772
1513:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2537              		.loc 1 1513 6 discriminator 2 view .LVU773
1513:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2538              		.loc 1 1513 13 is_stmt 0 discriminator 2 view .LVU774
 2539 00b4 DAE7     		b	.L167
 2540              	.L199:
1519:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2541              		.loc 1 1519 6 is_stmt 1 view .LVU775
 2542 00b6 02A8     		add	r0, sp, #8
 2543 00b8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2544              	.LVL215:
1520:ThirdParty/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cc2CcJyq.s 			page 103


 2545              		.loc 1 1520 6 view .LVU776
1520:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2546              		.loc 1 1520 20 is_stmt 0 view .LVU777
 2547 00bc 0125     		movs	r5, #1
 2548 00be 2AE0     		b	.L182
 2549              	.LVL216:
 2550              	.L200:
1520:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2551              		.loc 1 1520 20 view .LVU778
 2552              	.LBE152:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2553              		.loc 1 1535 3 is_stmt 1 discriminator 1 view .LVU779
 2554 00c0 0023     		movs	r3, #0
 2555 00c2 84F84430 		strb	r3, [r4, #68]
 2556 00c6 32E0     		b	.L183
 2557              	.L201:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2558              		.loc 1 1535 3 discriminator 4 view .LVU780
 2559 00c8 0023     		movs	r3, #0
 2560 00ca 84F84530 		strb	r3, [r4, #69]
 2561 00ce 34E0     		b	.L184
 2562              	.L202:
1552:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 2563              		.loc 1 1552 7 view .LVU781
 2564 00d0 FFF7FEFF 		bl	vPortEnterCritical
 2565              	.LVL217:
1554:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 2566              		.loc 1 1554 8 view .LVU782
1554:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 2567              		.loc 1 1554 31 is_stmt 0 view .LVU783
 2568 00d4 A068     		ldr	r0, [r4, #8]
 2569 00d6 FFF7FEFF 		bl	xTaskPriorityInherit
 2570              	.LVL218:
 2571 00da 0646     		mov	r6, r0
 2572              	.LVL219:
1556:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2573              		.loc 1 1556 7 is_stmt 1 view .LVU784
 2574 00dc FFF7FEFF 		bl	vPortExitCritical
 2575              	.LVL220:
1556:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2576              		.loc 1 1556 7 is_stmt 0 view .LVU785
 2577 00e0 3BE0     		b	.L187
 2578              	.L186:
1580:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2579              		.loc 1 1580 5 is_stmt 1 view .LVU786
 2580 00e2 2046     		mov	r0, r4
 2581 00e4 FFF7FEFF 		bl	prvUnlockQueue
 2582              	.LVL221:
1581:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2583              		.loc 1 1581 5 view .LVU787
1581:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2584              		.loc 1 1581 14 is_stmt 0 view .LVU788
 2585 00e8 FFF7FEFF 		bl	xTaskResumeAll
 2586              	.LVL222:
 2587 00ec 09E0     		b	.L174
 2588              	.L185:
1587:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  /tmp/cc2CcJyq.s 			page 104


 2589              		.loc 1 1587 4 is_stmt 1 view .LVU789
 2590 00ee 2046     		mov	r0, r4
 2591 00f0 FFF7FEFF 		bl	prvUnlockQueue
 2592              	.LVL223:
1588:ThirdParty/FreeRTOS/Source/queue.c **** 
 2593              		.loc 1 1588 4 view .LVU790
1588:ThirdParty/FreeRTOS/Source/queue.c **** 
 2594              		.loc 1 1588 13 is_stmt 0 view .LVU791
 2595 00f4 FFF7FEFF 		bl	xTaskResumeAll
 2596              	.LVL224:
1594:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2597              		.loc 1 1594 4 is_stmt 1 view .LVU792
1594:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2598              		.loc 1 1594 8 is_stmt 0 view .LVU793
 2599 00f8 2046     		mov	r0, r4
 2600 00fa FFF7FEFF 		bl	prvIsQueueEmpty
 2601              	.LVL225:
1594:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2602              		.loc 1 1594 6 view .LVU794
 2603 00fe 0028     		cmp	r0, #0
 2604 0100 42D1     		bne	.L196
 2605              	.LVL226:
 2606              	.L174:
1434:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2607              		.loc 1 1434 104 is_stmt 1 discriminator 8 view .LVU795
1442:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 2608              		.loc 1 1442 2 discriminator 8 view .LVU796
1444:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2609              		.loc 1 1444 3 discriminator 8 view .LVU797
 2610 0102 FFF7FEFF 		bl	vPortEnterCritical
 2611              	.LVL227:
 2612              	.LBB153:
1448:ThirdParty/FreeRTOS/Source/queue.c **** 
 2613              		.loc 1 1448 4 discriminator 8 view .LVU798
1448:ThirdParty/FreeRTOS/Source/queue.c **** 
 2614              		.loc 1 1448 22 is_stmt 0 discriminator 8 view .LVU799
 2615 0106 A36B     		ldr	r3, [r4, #56]
 2616              	.LVL228:
1452:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2617              		.loc 1 1452 4 is_stmt 1 discriminator 8 view .LVU800
1452:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2618              		.loc 1 1452 6 is_stmt 0 discriminator 8 view .LVU801
 2619 0108 002B     		cmp	r3, #0
 2620 010a A6D1     		bne	.L197
1498:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2621              		.loc 1 1498 5 is_stmt 1 view .LVU802
1498:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2622              		.loc 1 1498 22 is_stmt 0 view .LVU803
 2623 010c 019B     		ldr	r3, [sp, #4]
 2624              	.LVL229:
1498:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2625              		.loc 1 1498 7 view .LVU804
 2626 010e 002B     		cmp	r3, #0
 2627 0110 C4D0     		beq	.L198
1515:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2628              		.loc 1 1515 10 is_stmt 1 view .LVU805
1515:ThirdParty/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cc2CcJyq.s 			page 105


 2629              		.loc 1 1515 12 is_stmt 0 view .LVU806
 2630 0112 002D     		cmp	r5, #0
 2631 0114 CFD0     		beq	.L199
 2632              	.LVL230:
 2633              	.L182:
1525:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2634              		.loc 1 1525 30 is_stmt 1 view .LVU807
 2635              	.LBE153:
1529:ThirdParty/FreeRTOS/Source/queue.c **** 
 2636              		.loc 1 1529 3 view .LVU808
 2637 0116 FFF7FEFF 		bl	vPortExitCritical
 2638              	.LVL231:
1534:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2639              		.loc 1 1534 3 view .LVU809
 2640 011a FFF7FEFF 		bl	vTaskSuspendAll
 2641              	.LVL232:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2642              		.loc 1 1535 3 view .LVU810
 2643 011e FFF7FEFF 		bl	vPortEnterCritical
 2644              	.LVL233:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2645              		.loc 1 1535 3 view .LVU811
 2646 0122 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2647 0126 5BB2     		sxtb	r3, r3
 2648 0128 B3F1FF3F 		cmp	r3, #-1
 2649 012c C8D0     		beq	.L200
 2650              	.L183:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2651              		.loc 1 1535 3 discriminator 3 view .LVU812
 2652 012e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2653 0132 5BB2     		sxtb	r3, r3
 2654 0134 B3F1FF3F 		cmp	r3, #-1
 2655 0138 C6D0     		beq	.L201
 2656              	.L184:
1535:ThirdParty/FreeRTOS/Source/queue.c **** 
 2657              		.loc 1 1535 3 discriminator 6 view .LVU813
 2658 013a FFF7FEFF 		bl	vPortExitCritical
 2659              	.LVL234:
1538:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2660              		.loc 1 1538 3 discriminator 6 view .LVU814
1538:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2661              		.loc 1 1538 7 is_stmt 0 discriminator 6 view .LVU815
 2662 013e 01A9     		add	r1, sp, #4
 2663 0140 02A8     		add	r0, sp, #8
 2664 0142 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2665              	.LVL235:
1538:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 2666              		.loc 1 1538 5 discriminator 6 view .LVU816
 2667 0146 0028     		cmp	r0, #0
 2668 0148 D1D1     		bne	.L185
1544:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2669              		.loc 1 1544 4 is_stmt 1 view .LVU817
1544:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2670              		.loc 1 1544 8 is_stmt 0 view .LVU818
 2671 014a 2046     		mov	r0, r4
 2672 014c FFF7FEFF 		bl	prvIsQueueEmpty
 2673              	.LVL236:
ARM GAS  /tmp/cc2CcJyq.s 			page 106


1544:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 2674              		.loc 1 1544 6 view .LVU819
 2675 0150 0028     		cmp	r0, #0
 2676 0152 C6D0     		beq	.L186
1546:ThirdParty/FreeRTOS/Source/queue.c **** 
 2677              		.loc 1 1546 46 is_stmt 1 view .LVU820
1550:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2678              		.loc 1 1550 6 view .LVU821
1550:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2679              		.loc 1 1550 17 is_stmt 0 view .LVU822
 2680 0154 2368     		ldr	r3, [r4]
1550:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2681              		.loc 1 1550 8 view .LVU823
 2682 0156 002B     		cmp	r3, #0
 2683 0158 BAD0     		beq	.L202
 2684              	.L187:
1560:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2685              		.loc 1 1560 31 is_stmt 1 view .LVU824
1565:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2686              		.loc 1 1565 5 view .LVU825
 2687 015a 0199     		ldr	r1, [sp, #4]
 2688 015c 04F12400 		add	r0, r4, #36
 2689 0160 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2690              	.LVL237:
1566:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2691              		.loc 1 1566 5 view .LVU826
 2692 0164 2046     		mov	r0, r4
 2693 0166 FFF7FEFF 		bl	prvUnlockQueue
 2694              	.LVL238:
1567:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2695              		.loc 1 1567 5 view .LVU827
1567:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2696              		.loc 1 1567 9 is_stmt 0 view .LVU828
 2697 016a FFF7FEFF 		bl	xTaskResumeAll
 2698              	.LVL239:
1567:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2699              		.loc 1 1567 7 view .LVU829
 2700 016e 0028     		cmp	r0, #0
 2701 0170 C7D1     		bne	.L174
1569:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2702              		.loc 1 1569 6 is_stmt 1 view .LVU830
 2703 0172 4FF0E023 		mov	r3, #-536813568
 2704 0176 4FF08052 		mov	r2, #268435456
 2705 017a C3F8042D 		str	r2, [r3, #3332]
1569:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2706              		.loc 1 1569 6 view .LVU831
 2707              		.syntax unified
 2708              	@ 1569 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2709 017e BFF34F8F 		dsb
 2710              	@ 0 "" 2
1569:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2711              		.loc 1 1569 6 view .LVU832
 2712              	@ 1569 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2713 0182 BFF36F8F 		isb
 2714              	@ 0 "" 2
1569:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2715              		.loc 1 1569 28 view .LVU833
ARM GAS  /tmp/cc2CcJyq.s 			page 107


 2716              		.thumb
 2717              		.syntax unified
 2718 0186 BCE7     		b	.L174
 2719              	.L196:
1601:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2720              		.loc 1 1601 6 view .LVU834
1601:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2721              		.loc 1 1601 8 is_stmt 0 view .LVU835
 2722 0188 0EB9     		cbnz	r6, .L203
 2723              	.L189:
1620:ThirdParty/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
 2724              		.loc 1 1620 41 is_stmt 1 view .LVU836
1621:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2725              		.loc 1 1621 5 view .LVU837
1621:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2726              		.loc 1 1621 12 is_stmt 0 view .LVU838
 2727 018a 0026     		movs	r6, #0
 2728              	.LVL240:
1621:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2729              		.loc 1 1621 12 view .LVU839
 2730 018c 6EE7     		b	.L167
 2731              	.LVL241:
 2732              	.L203:
1603:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 2733              		.loc 1 1603 7 is_stmt 1 view .LVU840
 2734 018e FFF7FEFF 		bl	vPortEnterCritical
 2735              	.LVL242:
 2736              	.LBB154:
1605:ThirdParty/FreeRTOS/Source/queue.c **** 
 2737              		.loc 1 1605 8 view .LVU841
1612:ThirdParty/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2738              		.loc 1 1612 8 view .LVU842
1612:ThirdParty/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2739              		.loc 1 1612 35 is_stmt 0 view .LVU843
 2740 0192 2046     		mov	r0, r4
 2741 0194 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2742              	.LVL243:
 2743 0198 0146     		mov	r1, r0
 2744              	.LVL244:
1613:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 2745              		.loc 1 1613 8 is_stmt 1 view .LVU844
 2746 019a A068     		ldr	r0, [r4, #8]
 2747              	.LVL245:
1613:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 2748              		.loc 1 1613 8 is_stmt 0 view .LVU845
 2749 019c FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2750              	.LVL246:
1613:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 2751              		.loc 1 1613 8 view .LVU846
 2752              	.LBE154:
1615:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2753              		.loc 1 1615 7 is_stmt 1 view .LVU847
 2754 01a0 FFF7FEFF 		bl	vPortExitCritical
 2755              	.LVL247:
 2756 01a4 F1E7     		b	.L189
 2757              		.cfi_endproc
 2758              	.LFE14:
ARM GAS  /tmp/cc2CcJyq.s 			page 108


 2760              		.section	.text.xQueuePeek,"ax",%progbits
 2761              		.align	1
 2762              		.global	xQueuePeek
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2767              	xQueuePeek:
 2768              	.LVL248:
 2769              	.LFB15:
1633:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2770              		.loc 1 1633 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 16
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1633:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2774              		.loc 1 1633 1 is_stmt 0 view .LVU849
 2775 0000 70B5     		push	{r4, r5, r6, lr}
 2776              	.LCFI31:
 2777              		.cfi_def_cfa_offset 16
 2778              		.cfi_offset 4, -16
 2779              		.cfi_offset 5, -12
 2780              		.cfi_offset 6, -8
 2781              		.cfi_offset 14, -4
 2782 0002 84B0     		sub	sp, sp, #16
 2783              	.LCFI32:
 2784              		.cfi_def_cfa_offset 32
 2785 0004 0192     		str	r2, [sp, #4]
1634:ThirdParty/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 2786              		.loc 1 1634 1 is_stmt 1 view .LVU850
 2787              	.LVL249:
1635:ThirdParty/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
 2788              		.loc 1 1635 1 view .LVU851
1636:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 2789              		.loc 1 1636 1 view .LVU852
1637:ThirdParty/FreeRTOS/Source/queue.c **** 
 2790              		.loc 1 1637 1 view .LVU853
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2791              		.loc 1 1640 2 view .LVU854
 2792 0006 90B1     		cbz	r0, .L224
 2793 0008 0E46     		mov	r6, r1
 2794 000a 0446     		mov	r4, r0
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2795              		.loc 1 1640 29 discriminator 2 view .LVU855
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2796              		.loc 1 1644 2 discriminator 2 view .LVU856
 2797 000c C1B1     		cbz	r1, .L225
 2798              	.L207:
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2799              		.loc 1 1644 100 discriminator 8 view .LVU857
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2800              		.loc 1 1649 3 discriminator 8 view .LVU858
 2801 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 2802              	.LVL250:
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2803              		.loc 1 1649 3 is_stmt 0 discriminator 8 view .LVU859
 2804 0012 0546     		mov	r5, r0
 2805 0014 00BB     		cbnz	r0, .L222
ARM GAS  /tmp/cc2CcJyq.s 			page 109


1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2806              		.loc 1 1649 3 discriminator 2 view .LVU860
 2807 0016 019B     		ldr	r3, [sp, #4]
 2808 0018 002B     		cmp	r3, #0
 2809 001a 5ED0     		beq	.L211
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2810              		.loc 1 1649 3 is_stmt 1 view .LVU861
 2811              	.LBB155:
 2812              	.LBI155:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2813              		.loc 2 195 30 view .LVU862
 2814              	.LBB156:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2815              		.loc 2 197 1 view .LVU863
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2816              		.loc 2 199 2 view .LVU864
 2817              		.syntax unified
 2818              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2819 001c 4FF05003 			mov r3, #80												
 2820 0020 83F31188 		msr basepri, r3											
 2821 0024 BFF36F8F 		isb														
 2822 0028 BFF34F8F 		dsb														
 2823              	
 2824              	@ 0 "" 2
 2825              	.LVL251:
 2826              		.thumb
 2827              		.syntax unified
 2828              	.L210:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2829              		.loc 2 199 2 is_stmt 0 view .LVU865
 2830              	.LBE156:
 2831              	.LBE155:
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2832              		.loc 1 1649 3 is_stmt 1 discriminator 3 view .LVU866
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2833              		.loc 1 1649 3 discriminator 3 view .LVU867
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 2834              		.loc 1 1649 3 discriminator 3 view .LVU868
 2835 002c FEE7     		b	.L210
 2836              	.LVL252:
 2837              	.L224:
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2838              		.loc 1 1640 2 view .LVU869
 2839              	.LBB157:
 2840              	.LBI157:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2841              		.loc 2 195 30 view .LVU870
 2842              	.LBB158:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2843              		.loc 2 197 1 view .LVU871
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2844              		.loc 2 199 2 view .LVU872
 2845              		.syntax unified
 2846              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2847 002e 4FF05003 			mov r3, #80												
 2848 0032 83F31188 		msr basepri, r3											
 2849 0036 BFF36F8F 		isb														
ARM GAS  /tmp/cc2CcJyq.s 			page 110


 2850 003a BFF34F8F 		dsb														
 2851              	
 2852              	@ 0 "" 2
 2853              	.LVL253:
 2854              		.thumb
 2855              		.syntax unified
 2856              	.L206:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2857              		.loc 2 199 2 is_stmt 0 view .LVU873
 2858              	.LBE158:
 2859              	.LBE157:
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2860              		.loc 1 1640 2 is_stmt 1 discriminator 1 view .LVU874
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2861              		.loc 1 1640 2 discriminator 1 view .LVU875
1640:ThirdParty/FreeRTOS/Source/queue.c **** 
 2862              		.loc 1 1640 2 discriminator 1 view .LVU876
 2863 003e FEE7     		b	.L206
 2864              	.L225:
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2865              		.loc 1 1644 2 is_stmt 0 discriminator 2 view .LVU877
 2866 0040 036C     		ldr	r3, [r0, #64]
 2867 0042 002B     		cmp	r3, #0
 2868 0044 E3D0     		beq	.L207
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2869              		.loc 1 1644 2 is_stmt 1 view .LVU878
 2870              	.LBB159:
 2871              	.LBI159:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2872              		.loc 2 195 30 view .LVU879
 2873              	.LBB160:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2874              		.loc 2 197 1 view .LVU880
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2875              		.loc 2 199 2 view .LVU881
 2876              		.syntax unified
 2877              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2878 0046 4FF05003 			mov r3, #80												
 2879 004a 83F31188 		msr basepri, r3											
 2880 004e BFF36F8F 		isb														
 2881 0052 BFF34F8F 		dsb														
 2882              	
 2883              	@ 0 "" 2
 2884              	.LVL254:
 2885              		.thumb
 2886              		.syntax unified
 2887              	.L208:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2888              		.loc 2 199 2 is_stmt 0 view .LVU882
 2889              	.LBE160:
 2890              	.LBE159:
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2891              		.loc 1 1644 2 is_stmt 1 discriminator 2 view .LVU883
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2892              		.loc 1 1644 2 discriminator 2 view .LVU884
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2893              		.loc 1 1644 2 discriminator 2 view .LVU885
ARM GAS  /tmp/cc2CcJyq.s 			page 111


 2894 0056 FEE7     		b	.L208
 2895              	.LVL255:
 2896              	.L222:
1644:ThirdParty/FreeRTOS/Source/queue.c **** 
 2897              		.loc 1 1644 2 is_stmt 0 discriminator 2 view .LVU886
 2898 0058 0025     		movs	r5, #0
 2899 005a 3EE0     		b	.L211
 2900              	.LVL256:
 2901              	.L228:
 2902              	.LBB161:
1670:ThirdParty/FreeRTOS/Source/queue.c **** 
 2903              		.loc 1 1670 5 is_stmt 1 view .LVU887
1670:ThirdParty/FreeRTOS/Source/queue.c **** 
 2904              		.loc 1 1670 28 is_stmt 0 view .LVU888
 2905 005c E568     		ldr	r5, [r4, #12]
 2906              	.LVL257:
1672:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2907              		.loc 1 1672 5 is_stmt 1 view .LVU889
 2908 005e 3146     		mov	r1, r6
 2909 0060 2046     		mov	r0, r4
 2910 0062 FFF7FEFF 		bl	prvCopyDataFromQueue
 2911              	.LVL258:
1673:ThirdParty/FreeRTOS/Source/queue.c **** 
 2912              		.loc 1 1673 31 view .LVU890
1676:ThirdParty/FreeRTOS/Source/queue.c **** 
 2913              		.loc 1 1676 5 view .LVU891
1676:ThirdParty/FreeRTOS/Source/queue.c **** 
 2914              		.loc 1 1676 34 is_stmt 0 view .LVU892
 2915 0066 E560     		str	r5, [r4, #12]
1680:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2916              		.loc 1 1680 5 is_stmt 1 view .LVU893
1680:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2917              		.loc 1 1680 9 is_stmt 0 view .LVU894
 2918 0068 636A     		ldr	r3, [r4, #36]
1680:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 2919              		.loc 1 1680 7 view .LVU895
 2920 006a 23B9     		cbnz	r3, .L226
 2921              	.L213:
1694:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2922              		.loc 1 1694 30 is_stmt 1 view .LVU896
1697:ThirdParty/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2923              		.loc 1 1697 5 view .LVU897
 2924 006c FFF7FEFF 		bl	vPortExitCritical
 2925              	.LVL259:
1698:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2926              		.loc 1 1698 5 view .LVU898
1698:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2927              		.loc 1 1698 12 is_stmt 0 view .LVU899
 2928 0070 0120     		movs	r0, #1
 2929              	.LVL260:
 2930              	.L204:
1698:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 2931              		.loc 1 1698 12 view .LVU900
 2932              	.LBE161:
1778:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2933              		.loc 1 1778 1 view .LVU901
 2934 0072 04B0     		add	sp, sp, #16
ARM GAS  /tmp/cc2CcJyq.s 			page 112


 2935              	.LCFI33:
 2936              		.cfi_remember_state
 2937              		.cfi_def_cfa_offset 16
 2938              		@ sp needed
 2939 0074 70BD     		pop	{r4, r5, r6, pc}
 2940              	.LVL261:
 2941              	.L226:
 2942              	.LCFI34:
 2943              		.cfi_restore_state
 2944              	.LBB162:
1682:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2945              		.loc 1 1682 6 is_stmt 1 view .LVU902
1682:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2946              		.loc 1 1682 10 is_stmt 0 view .LVU903
 2947 0076 04F12400 		add	r0, r4, #36
 2948 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2949              	.LVL262:
1682:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 2950              		.loc 1 1682 8 view .LVU904
 2951 007e 0028     		cmp	r0, #0
 2952 0080 F4D0     		beq	.L213
1685:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2953              		.loc 1 1685 7 is_stmt 1 view .LVU905
 2954 0082 4FF0E023 		mov	r3, #-536813568
 2955 0086 4FF08052 		mov	r2, #268435456
 2956 008a C3F8042D 		str	r2, [r3, #3332]
1685:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2957              		.loc 1 1685 7 view .LVU906
 2958              		.syntax unified
 2959              	@ 1685 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2960 008e BFF34F8F 		dsb
 2961              	@ 0 "" 2
1685:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2962              		.loc 1 1685 7 view .LVU907
 2963              	@ 1685 "ThirdParty/FreeRTOS/Source/queue.c" 1
 2964 0092 BFF36F8F 		isb
 2965              	@ 0 "" 2
1685:ThirdParty/FreeRTOS/Source/queue.c **** 					}
 2966              		.loc 1 1685 39 view .LVU908
 2967              		.thumb
 2968              		.syntax unified
 2969 0096 E9E7     		b	.L213
 2970              	.LVL263:
 2971              	.L229:
1706:ThirdParty/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2972              		.loc 1 1706 6 view .LVU909
 2973 0098 FFF7FEFF 		bl	vPortExitCritical
 2974              	.LVL264:
1707:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
 2975              		.loc 1 1707 39 view .LVU910
1708:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2976              		.loc 1 1708 6 view .LVU911
1708:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2977              		.loc 1 1708 13 is_stmt 0 view .LVU912
 2978 009c 0020     		movs	r0, #0
 2979 009e E8E7     		b	.L204
 2980              	.L230:
ARM GAS  /tmp/cc2CcJyq.s 			page 113


1715:ThirdParty/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2981              		.loc 1 1715 6 is_stmt 1 view .LVU913
 2982 00a0 02A8     		add	r0, sp, #8
 2983 00a2 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2984              	.LVL265:
1716:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2985              		.loc 1 1716 6 view .LVU914
1716:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2986              		.loc 1 1716 20 is_stmt 0 view .LVU915
 2987 00a6 0125     		movs	r5, #1
 2988 00a8 21E0     		b	.L216
 2989              	.LVL266:
 2990              	.L231:
1716:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 2991              		.loc 1 1716 20 view .LVU916
 2992              	.LBE162:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 2993              		.loc 1 1731 3 is_stmt 1 discriminator 1 view .LVU917
 2994 00aa 0023     		movs	r3, #0
 2995 00ac 84F84430 		strb	r3, [r4, #68]
 2996 00b0 29E0     		b	.L217
 2997              	.L232:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 2998              		.loc 1 1731 3 discriminator 4 view .LVU918
 2999 00b2 0023     		movs	r3, #0
 3000 00b4 84F84530 		strb	r3, [r4, #69]
 3001 00b8 2BE0     		b	.L218
 3002              	.L220:
1756:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3003              		.loc 1 1756 5 view .LVU919
 3004 00ba 2046     		mov	r0, r4
 3005 00bc FFF7FEFF 		bl	prvUnlockQueue
 3006              	.LVL267:
1757:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3007              		.loc 1 1757 5 view .LVU920
1757:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3008              		.loc 1 1757 14 is_stmt 0 view .LVU921
 3009 00c0 FFF7FEFF 		bl	xTaskResumeAll
 3010              	.LVL268:
 3011 00c4 09E0     		b	.L211
 3012              	.L219:
1764:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3013              		.loc 1 1764 4 is_stmt 1 view .LVU922
 3014 00c6 2046     		mov	r0, r4
 3015 00c8 FFF7FEFF 		bl	prvUnlockQueue
 3016              	.LVL269:
1765:ThirdParty/FreeRTOS/Source/queue.c **** 
 3017              		.loc 1 1765 4 view .LVU923
1765:ThirdParty/FreeRTOS/Source/queue.c **** 
 3018              		.loc 1 1765 13 is_stmt 0 view .LVU924
 3019 00cc FFF7FEFF 		bl	xTaskResumeAll
 3020              	.LVL270:
1767:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3021              		.loc 1 1767 4 is_stmt 1 view .LVU925
1767:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3022              		.loc 1 1767 8 is_stmt 0 view .LVU926
 3023 00d0 2046     		mov	r0, r4
ARM GAS  /tmp/cc2CcJyq.s 			page 114


 3024 00d2 FFF7FEFF 		bl	prvIsQueueEmpty
 3025              	.LVL271:
1767:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3026              		.loc 1 1767 6 view .LVU927
 3027 00d6 0028     		cmp	r0, #0
 3028 00d8 3FD1     		bne	.L227
 3029              	.LVL272:
 3030              	.L211:
1649:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3031              		.loc 1 1649 104 is_stmt 1 discriminator 8 view .LVU928
1657:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3032              		.loc 1 1657 2 discriminator 8 view .LVU929
1659:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3033              		.loc 1 1659 3 discriminator 8 view .LVU930
 3034 00da FFF7FEFF 		bl	vPortEnterCritical
 3035              	.LVL273:
 3036              	.LBB163:
1661:ThirdParty/FreeRTOS/Source/queue.c **** 
 3037              		.loc 1 1661 4 discriminator 8 view .LVU931
1661:ThirdParty/FreeRTOS/Source/queue.c **** 
 3038              		.loc 1 1661 22 is_stmt 0 discriminator 8 view .LVU932
 3039 00de A36B     		ldr	r3, [r4, #56]
 3040              	.LVL274:
1665:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3041              		.loc 1 1665 4 is_stmt 1 discriminator 8 view .LVU933
1665:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3042              		.loc 1 1665 6 is_stmt 0 discriminator 8 view .LVU934
 3043 00e0 002B     		cmp	r3, #0
 3044 00e2 BBD1     		bne	.L228
1702:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3045              		.loc 1 1702 5 is_stmt 1 view .LVU935
1702:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3046              		.loc 1 1702 22 is_stmt 0 view .LVU936
 3047 00e4 019B     		ldr	r3, [sp, #4]
 3048              	.LVL275:
1702:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3049              		.loc 1 1702 7 view .LVU937
 3050 00e6 002B     		cmp	r3, #0
 3051 00e8 D6D0     		beq	.L229
1710:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3052              		.loc 1 1710 10 is_stmt 1 view .LVU938
1710:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3053              		.loc 1 1710 12 is_stmt 0 view .LVU939
 3054 00ea 002D     		cmp	r5, #0
 3055 00ec D8D0     		beq	.L230
 3056              	.LVL276:
 3057              	.L216:
1721:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 3058              		.loc 1 1721 30 is_stmt 1 view .LVU940
 3059              	.LBE163:
1725:ThirdParty/FreeRTOS/Source/queue.c **** 
 3060              		.loc 1 1725 3 view .LVU941
 3061 00ee FFF7FEFF 		bl	vPortExitCritical
 3062              	.LVL277:
1730:ThirdParty/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3063              		.loc 1 1730 3 view .LVU942
 3064 00f2 FFF7FEFF 		bl	vTaskSuspendAll
ARM GAS  /tmp/cc2CcJyq.s 			page 115


 3065              	.LVL278:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 3066              		.loc 1 1731 3 view .LVU943
 3067 00f6 FFF7FEFF 		bl	vPortEnterCritical
 3068              	.LVL279:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 3069              		.loc 1 1731 3 view .LVU944
 3070 00fa 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3071 00fe 5BB2     		sxtb	r3, r3
 3072 0100 B3F1FF3F 		cmp	r3, #-1
 3073 0104 D1D0     		beq	.L231
 3074              	.L217:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 3075              		.loc 1 1731 3 discriminator 3 view .LVU945
 3076 0106 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3077 010a 5BB2     		sxtb	r3, r3
 3078 010c B3F1FF3F 		cmp	r3, #-1
 3079 0110 CFD0     		beq	.L232
 3080              	.L218:
1731:ThirdParty/FreeRTOS/Source/queue.c **** 
 3081              		.loc 1 1731 3 discriminator 6 view .LVU946
 3082 0112 FFF7FEFF 		bl	vPortExitCritical
 3083              	.LVL280:
1734:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3084              		.loc 1 1734 3 discriminator 6 view .LVU947
1734:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3085              		.loc 1 1734 7 is_stmt 0 discriminator 6 view .LVU948
 3086 0116 01A9     		add	r1, sp, #4
 3087 0118 02A8     		add	r0, sp, #8
 3088 011a FFF7FEFF 		bl	xTaskCheckForTimeOut
 3089              	.LVL281:
1734:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3090              		.loc 1 1734 5 discriminator 6 view .LVU949
 3091 011e 0028     		cmp	r0, #0
 3092 0120 D1D1     		bne	.L219
1738:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3093              		.loc 1 1738 4 is_stmt 1 view .LVU950
1738:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3094              		.loc 1 1738 8 is_stmt 0 view .LVU951
 3095 0122 2046     		mov	r0, r4
 3096 0124 FFF7FEFF 		bl	prvIsQueueEmpty
 3097              	.LVL282:
1738:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3098              		.loc 1 1738 6 view .LVU952
 3099 0128 0028     		cmp	r0, #0
 3100 012a C6D0     		beq	.L220
1740:ThirdParty/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 3101              		.loc 1 1740 43 is_stmt 1 view .LVU953
1741:ThirdParty/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3102              		.loc 1 1741 5 view .LVU954
 3103 012c 0199     		ldr	r1, [sp, #4]
 3104 012e 04F12400 		add	r0, r4, #36
 3105 0132 FFF7FEFF 		bl	vTaskPlaceOnEventList
 3106              	.LVL283:
1742:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3107              		.loc 1 1742 5 view .LVU955
 3108 0136 2046     		mov	r0, r4
ARM GAS  /tmp/cc2CcJyq.s 			page 116


 3109 0138 FFF7FEFF 		bl	prvUnlockQueue
 3110              	.LVL284:
1743:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3111              		.loc 1 1743 5 view .LVU956
1743:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3112              		.loc 1 1743 9 is_stmt 0 view .LVU957
 3113 013c FFF7FEFF 		bl	xTaskResumeAll
 3114              	.LVL285:
1743:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3115              		.loc 1 1743 7 view .LVU958
 3116 0140 0028     		cmp	r0, #0
 3117 0142 CAD1     		bne	.L211
1745:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 3118              		.loc 1 1745 6 is_stmt 1 view .LVU959
 3119 0144 4FF0E023 		mov	r3, #-536813568
 3120 0148 4FF08052 		mov	r2, #268435456
 3121 014c C3F8042D 		str	r2, [r3, #3332]
1745:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 3122              		.loc 1 1745 6 view .LVU960
 3123              		.syntax unified
 3124              	@ 1745 "ThirdParty/FreeRTOS/Source/queue.c" 1
 3125 0150 BFF34F8F 		dsb
 3126              	@ 0 "" 2
1745:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 3127              		.loc 1 1745 6 view .LVU961
 3128              	@ 1745 "ThirdParty/FreeRTOS/Source/queue.c" 1
 3129 0154 BFF36F8F 		isb
 3130              	@ 0 "" 2
1745:ThirdParty/FreeRTOS/Source/queue.c **** 				}
 3131              		.loc 1 1745 28 view .LVU962
 3132              		.thumb
 3133              		.syntax unified
 3134 0158 BFE7     		b	.L211
 3135              	.L227:
1770:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3136              		.loc 1 1770 12 is_stmt 0 view .LVU963
 3137 015a 0020     		movs	r0, #0
 3138 015c 89E7     		b	.L204
 3139              		.cfi_endproc
 3140              	.LFE15:
 3142              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3143              		.align	1
 3144              		.global	xQueueReceiveFromISR
 3145              		.syntax unified
 3146              		.thumb
 3147              		.thumb_func
 3149              	xQueueReceiveFromISR:
 3150              	.LVL286:
 3151              	.LFB16:
1782:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3152              		.loc 1 1782 1 is_stmt 1 view -0
 3153              		.cfi_startproc
 3154              		@ args = 0, pretend = 0, frame = 0
 3155              		@ frame_needed = 0, uses_anonymous_args = 0
1782:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3156              		.loc 1 1782 1 is_stmt 0 view .LVU965
 3157 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/cc2CcJyq.s 			page 117


 3158              	.LCFI35:
 3159              		.cfi_def_cfa_offset 32
 3160              		.cfi_offset 3, -32
 3161              		.cfi_offset 4, -28
 3162              		.cfi_offset 5, -24
 3163              		.cfi_offset 6, -20
 3164              		.cfi_offset 7, -16
 3165              		.cfi_offset 8, -12
 3166              		.cfi_offset 9, -8
 3167              		.cfi_offset 14, -4
1783:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 3168              		.loc 1 1783 1 is_stmt 1 view .LVU966
1784:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3169              		.loc 1 1784 1 view .LVU967
1785:ThirdParty/FreeRTOS/Source/queue.c **** 
 3170              		.loc 1 1785 1 view .LVU968
 3171              	.LVL287:
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3172              		.loc 1 1787 2 view .LVU969
 3173 0004 B0B1     		cbz	r0, .L245
 3174 0006 0D46     		mov	r5, r1
 3175 0008 1646     		mov	r6, r2
 3176 000a 0446     		mov	r4, r0
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3177              		.loc 1 1787 25 discriminator 2 view .LVU970
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3178              		.loc 1 1788 2 discriminator 2 view .LVU971
 3179 000c D9B1     		cbz	r1, .L246
 3180              	.L236:
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3181              		.loc 1 1788 92 discriminator 8 view .LVU972
1804:ThirdParty/FreeRTOS/Source/queue.c **** 
 3182              		.loc 1 1804 2 discriminator 8 view .LVU973
 3183 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 3184              	.LVL288:
1806:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3185              		.loc 1 1806 2 discriminator 8 view .LVU974
 3186              	.LBB164:
 3187              	.LBI164:
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3188              		.loc 2 211 34 discriminator 8 view .LVU975
 3189              	.LBB165:
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3190              		.loc 2 213 1 discriminator 8 view .LVU976
 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3191              		.loc 2 215 2 discriminator 8 view .LVU977
 3192              		.syntax unified
 3193              	@ 215 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3194 0012 EFF31188 			mrs r8, basepri											
 3195 0016 4FF05003 		mov r3, #80												
 3196 001a 83F31188 		msr basepri, r3											
 3197 001e BFF36F8F 		isb														
 3198 0022 BFF34F8F 		dsb														
 3199              	
 3200              	@ 0 "" 2
 3201              	.LVL289:
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
ARM GAS  /tmp/cc2CcJyq.s 			page 118


 3202              		.loc 2 227 2 discriminator 8 view .LVU978
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 3203              		.loc 2 227 2 is_stmt 0 discriminator 8 view .LVU979
 3204              		.thumb
 3205              		.syntax unified
 3206              	.LBE165:
 3207              	.LBE164:
 3208              	.LBB166:
1808:ThirdParty/FreeRTOS/Source/queue.c **** 
 3209              		.loc 1 1808 3 is_stmt 1 discriminator 8 view .LVU980
1808:ThirdParty/FreeRTOS/Source/queue.c **** 
 3210              		.loc 1 1808 21 is_stmt 0 discriminator 8 view .LVU981
 3211 0026 A76B     		ldr	r7, [r4, #56]
 3212              	.LVL290:
1811:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3213              		.loc 1 1811 3 is_stmt 1 discriminator 8 view .LVU982
1811:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3214              		.loc 1 1811 5 is_stmt 0 discriminator 8 view .LVU983
 3215 0028 CFB9     		cbnz	r7, .L247
1862:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3216              		.loc 1 1862 12 view .LVU984
 3217 002a 0020     		movs	r0, #0
 3218              	.LVL291:
 3219              	.L238:
1863:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3220              		.loc 1 1863 49 is_stmt 1 view .LVU985
 3221              	.LBE166:
1866:ThirdParty/FreeRTOS/Source/queue.c **** 
 3222              		.loc 1 1866 2 view .LVU986
 3223              	.LBB168:
 3224              	.LBI168:
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3225              		.loc 2 231 30 view .LVU987
 3226              	.LBB169:
 3227              		.loc 2 233 2 view .LVU988
 3228              		.syntax unified
 3229              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3230 002c 88F31188 			msr basepri, r8	
 3231              	@ 0 "" 2
 3232              	.LVL292:
 3233              		.loc 2 233 2 is_stmt 0 view .LVU989
 3234              		.thumb
 3235              		.syntax unified
 3236              	.LBE169:
 3237              	.LBE168:
1868:ThirdParty/FreeRTOS/Source/queue.c **** }
 3238              		.loc 1 1868 2 is_stmt 1 view .LVU990
1869:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3239              		.loc 1 1869 1 is_stmt 0 view .LVU991
 3240 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3241              	.LVL293:
 3242              	.L245:
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3243              		.loc 1 1787 2 is_stmt 1 view .LVU992
 3244              	.LBB170:
 3245              	.LBI170:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cc2CcJyq.s 			page 119


 3246              		.loc 2 195 30 view .LVU993
 3247              	.LBB171:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3248              		.loc 2 197 1 view .LVU994
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3249              		.loc 2 199 2 view .LVU995
 3250              		.syntax unified
 3251              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3252 0034 4FF05003 			mov r3, #80												
 3253 0038 83F31188 		msr basepri, r3											
 3254 003c BFF36F8F 		isb														
 3255 0040 BFF34F8F 		dsb														
 3256              	
 3257              	@ 0 "" 2
 3258              	.LVL294:
 3259              		.thumb
 3260              		.syntax unified
 3261              	.L235:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3262              		.loc 2 199 2 is_stmt 0 view .LVU996
 3263              	.LBE171:
 3264              	.LBE170:
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3265              		.loc 1 1787 2 is_stmt 1 discriminator 1 view .LVU997
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3266              		.loc 1 1787 2 discriminator 1 view .LVU998
1787:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3267              		.loc 1 1787 2 discriminator 1 view .LVU999
 3268 0044 FEE7     		b	.L235
 3269              	.L246:
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3270              		.loc 1 1788 2 is_stmt 0 discriminator 2 view .LVU1000
 3271 0046 036C     		ldr	r3, [r0, #64]
 3272 0048 002B     		cmp	r3, #0
 3273 004a E0D0     		beq	.L236
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3274              		.loc 1 1788 2 is_stmt 1 view .LVU1001
 3275              	.LBB172:
 3276              	.LBI172:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3277              		.loc 2 195 30 view .LVU1002
 3278              	.LBB173:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3279              		.loc 2 197 1 view .LVU1003
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3280              		.loc 2 199 2 view .LVU1004
 3281              		.syntax unified
 3282              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3283 004c 4FF05003 			mov r3, #80												
 3284 0050 83F31188 		msr basepri, r3											
 3285 0054 BFF36F8F 		isb														
 3286 0058 BFF34F8F 		dsb														
 3287              	
 3288              	@ 0 "" 2
 3289              	.LVL295:
 3290              		.thumb
 3291              		.syntax unified
ARM GAS  /tmp/cc2CcJyq.s 			page 120


 3292              	.L237:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3293              		.loc 2 199 2 is_stmt 0 view .LVU1005
 3294              	.LBE173:
 3295              	.LBE172:
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3296              		.loc 1 1788 2 is_stmt 1 discriminator 2 view .LVU1006
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3297              		.loc 1 1788 2 discriminator 2 view .LVU1007
1788:ThirdParty/FreeRTOS/Source/queue.c **** 
 3298              		.loc 1 1788 2 discriminator 2 view .LVU1008
 3299 005c FEE7     		b	.L237
 3300              	.LVL296:
 3301              	.L247:
 3302              	.LBB174:
 3303              	.LBB167:
1813:ThirdParty/FreeRTOS/Source/queue.c **** 
 3304              		.loc 1 1813 4 view .LVU1009
1813:ThirdParty/FreeRTOS/Source/queue.c **** 
 3305              		.loc 1 1813 17 is_stmt 0 view .LVU1010
 3306 005e 94F84490 		ldrb	r9, [r4, #68]	@ zero_extendqisi2
 3307 0062 4FFA89F9 		sxtb	r9, r9
 3308              	.LVL297:
1815:ThirdParty/FreeRTOS/Source/queue.c **** 
 3309              		.loc 1 1815 42 is_stmt 1 view .LVU1011
1817:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3310              		.loc 1 1817 4 view .LVU1012
 3311 0066 2946     		mov	r1, r5
 3312 0068 2046     		mov	r0, r4
 3313 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 3314              	.LVL298:
1818:ThirdParty/FreeRTOS/Source/queue.c **** 
 3315              		.loc 1 1818 4 view .LVU1013
1818:ThirdParty/FreeRTOS/Source/queue.c **** 
 3316              		.loc 1 1818 51 is_stmt 0 view .LVU1014
 3317 006e 013F     		subs	r7, r7, #1
 3318              	.LVL299:
1818:ThirdParty/FreeRTOS/Source/queue.c **** 
 3319              		.loc 1 1818 31 view .LVU1015
 3320 0070 A763     		str	r7, [r4, #56]
1824:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3321              		.loc 1 1824 4 is_stmt 1 view .LVU1016
1824:ThirdParty/FreeRTOS/Source/queue.c **** 			{
 3322              		.loc 1 1824 6 is_stmt 0 view .LVU1017
 3323 0072 B9F1FF3F 		cmp	r9, #-1
 3324 0076 06D0     		beq	.L248
1855:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3325              		.loc 1 1855 5 is_stmt 1 view .LVU1018
1855:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3326              		.loc 1 1855 45 is_stmt 0 view .LVU1019
 3327 0078 09F10103 		add	r3, r9, #1
1855:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3328              		.loc 1 1855 24 view .LVU1020
 3329 007c 5BB2     		sxtb	r3, r3
1855:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3330              		.loc 1 1855 22 view .LVU1021
 3331 007e 84F84430 		strb	r3, [r4, #68]
ARM GAS  /tmp/cc2CcJyq.s 			page 121


1858:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3332              		.loc 1 1858 12 view .LVU1022
 3333 0082 0120     		movs	r0, #1
 3334 0084 D2E7     		b	.L238
 3335              	.L248:
1826:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3336              		.loc 1 1826 5 is_stmt 1 view .LVU1023
1826:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3337              		.loc 1 1826 9 is_stmt 0 view .LVU1024
 3338 0086 2369     		ldr	r3, [r4, #16]
1826:ThirdParty/FreeRTOS/Source/queue.c **** 				{
 3339              		.loc 1 1826 7 view .LVU1025
 3340 0088 0BB9     		cbnz	r3, .L249
1858:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3341              		.loc 1 1858 12 view .LVU1026
 3342 008a 0120     		movs	r0, #1
 3343 008c CEE7     		b	.L238
 3344              	.L249:
1828:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 3345              		.loc 1 1828 6 is_stmt 1 view .LVU1027
1828:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 3346              		.loc 1 1828 10 is_stmt 0 view .LVU1028
 3347 008e 04F11000 		add	r0, r4, #16
 3348 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3349              	.LVL300:
1828:ThirdParty/FreeRTOS/Source/queue.c **** 					{
 3350              		.loc 1 1828 8 view .LVU1029
 3351 0096 18B1     		cbz	r0, .L242
1832:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 3352              		.loc 1 1832 7 is_stmt 1 view .LVU1030
1832:ThirdParty/FreeRTOS/Source/queue.c **** 						{
 3353              		.loc 1 1832 9 is_stmt 0 view .LVU1031
 3354 0098 26B1     		cbz	r6, .L243
1834:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 3355              		.loc 1 1834 8 is_stmt 1 view .LVU1032
1834:ThirdParty/FreeRTOS/Source/queue.c **** 						}
 3356              		.loc 1 1834 35 is_stmt 0 view .LVU1033
 3357 009a 0120     		movs	r0, #1
 3358 009c 3060     		str	r0, [r6]
 3359 009e C5E7     		b	.L238
 3360              	.L242:
1858:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3361              		.loc 1 1858 12 view .LVU1034
 3362 00a0 0120     		movs	r0, #1
 3363 00a2 C3E7     		b	.L238
 3364              	.L243:
 3365 00a4 0120     		movs	r0, #1
 3366 00a6 C1E7     		b	.L238
 3367              	.LBE167:
 3368              	.LBE174:
 3369              		.cfi_endproc
 3370              	.LFE16:
 3372              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3373              		.align	1
 3374              		.global	xQueuePeekFromISR
 3375              		.syntax unified
 3376              		.thumb
ARM GAS  /tmp/cc2CcJyq.s 			page 122


 3377              		.thumb_func
 3379              	xQueuePeekFromISR:
 3380              	.LVL301:
 3381              	.LFB17:
1873:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3382              		.loc 1 1873 1 is_stmt 1 view -0
 3383              		.cfi_startproc
 3384              		@ args = 0, pretend = 0, frame = 0
 3385              		@ frame_needed = 0, uses_anonymous_args = 0
1873:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3386              		.loc 1 1873 1 is_stmt 0 view .LVU1036
 3387 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3388              	.LCFI36:
 3389              		.cfi_def_cfa_offset 24
 3390              		.cfi_offset 3, -24
 3391              		.cfi_offset 4, -20
 3392              		.cfi_offset 5, -16
 3393              		.cfi_offset 6, -12
 3394              		.cfi_offset 7, -8
 3395              		.cfi_offset 14, -4
1874:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 3396              		.loc 1 1874 1 is_stmt 1 view .LVU1037
1875:ThirdParty/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
 3397              		.loc 1 1875 1 view .LVU1038
1876:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3398              		.loc 1 1876 1 view .LVU1039
1877:ThirdParty/FreeRTOS/Source/queue.c **** 
 3399              		.loc 1 1877 1 view .LVU1040
 3400              	.LVL302:
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3401              		.loc 1 1879 2 view .LVU1041
 3402 0002 68B1     		cbz	r0, .L260
 3403 0004 0D46     		mov	r5, r1
 3404 0006 0446     		mov	r4, r0
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3405              		.loc 1 1879 25 discriminator 2 view .LVU1042
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3406              		.loc 1 1880 2 discriminator 2 view .LVU1043
 3407 0008 99B1     		cbz	r1, .L261
 3408              	.L253:
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3409              		.loc 1 1880 92 discriminator 8 view .LVU1044
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3410              		.loc 1 1881 2 discriminator 8 view .LVU1045
 3411 000a 236C     		ldr	r3, [r4, #64]
 3412 000c EBB9     		cbnz	r3, .L255
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3413              		.loc 1 1881 2 view .LVU1046
 3414              	.LBB175:
 3415              	.LBI175:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3416              		.loc 2 195 30 view .LVU1047
 3417              	.LBB176:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3418              		.loc 2 197 1 view .LVU1048
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3419              		.loc 2 199 2 view .LVU1049
ARM GAS  /tmp/cc2CcJyq.s 			page 123


 3420              		.syntax unified
 3421              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3422 000e 4FF05003 			mov r3, #80												
 3423 0012 83F31188 		msr basepri, r3											
 3424 0016 BFF36F8F 		isb														
 3425 001a BFF34F8F 		dsb														
 3426              	
 3427              	@ 0 "" 2
 3428              	.LVL303:
 3429              		.thumb
 3430              		.syntax unified
 3431              	.L256:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3432              		.loc 2 199 2 is_stmt 0 view .LVU1050
 3433              	.LBE176:
 3434              	.LBE175:
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3435              		.loc 1 1881 2 is_stmt 1 discriminator 3 view .LVU1051
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3436              		.loc 1 1881 2 discriminator 3 view .LVU1052
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3437              		.loc 1 1881 2 discriminator 3 view .LVU1053
 3438 001e FEE7     		b	.L256
 3439              	.L260:
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3440              		.loc 1 1879 2 view .LVU1054
 3441              	.LBB177:
 3442              	.LBI177:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3443              		.loc 2 195 30 view .LVU1055
 3444              	.LBB178:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3445              		.loc 2 197 1 view .LVU1056
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3446              		.loc 2 199 2 view .LVU1057
 3447              		.syntax unified
 3448              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3449 0020 4FF05003 			mov r3, #80												
 3450 0024 83F31188 		msr basepri, r3											
 3451 0028 BFF36F8F 		isb														
 3452 002c BFF34F8F 		dsb														
 3453              	
 3454              	@ 0 "" 2
 3455              	.LVL304:
 3456              		.thumb
 3457              		.syntax unified
 3458              	.L252:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3459              		.loc 2 199 2 is_stmt 0 view .LVU1058
 3460              	.LBE178:
 3461              	.LBE177:
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3462              		.loc 1 1879 2 is_stmt 1 discriminator 1 view .LVU1059
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3463              		.loc 1 1879 2 discriminator 1 view .LVU1060
1879:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3464              		.loc 1 1879 2 discriminator 1 view .LVU1061
ARM GAS  /tmp/cc2CcJyq.s 			page 124


 3465 0030 FEE7     		b	.L252
 3466              	.L261:
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3467              		.loc 1 1880 2 is_stmt 0 discriminator 2 view .LVU1062
 3468 0032 036C     		ldr	r3, [r0, #64]
 3469 0034 002B     		cmp	r3, #0
 3470 0036 E8D0     		beq	.L253
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3471              		.loc 1 1880 2 is_stmt 1 view .LVU1063
 3472              	.LBB179:
 3473              	.LBI179:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3474              		.loc 2 195 30 view .LVU1064
 3475              	.LBB180:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3476              		.loc 2 197 1 view .LVU1065
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3477              		.loc 2 199 2 view .LVU1066
 3478              		.syntax unified
 3479              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3480 0038 4FF05003 			mov r3, #80												
 3481 003c 83F31188 		msr basepri, r3											
 3482 0040 BFF36F8F 		isb														
 3483 0044 BFF34F8F 		dsb														
 3484              	
 3485              	@ 0 "" 2
 3486              	.LVL305:
 3487              		.thumb
 3488              		.syntax unified
 3489              	.L254:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3490              		.loc 2 199 2 is_stmt 0 view .LVU1067
 3491              	.LBE180:
 3492              	.LBE179:
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3493              		.loc 1 1880 2 is_stmt 1 discriminator 2 view .LVU1068
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3494              		.loc 1 1880 2 discriminator 2 view .LVU1069
1880:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3495              		.loc 1 1880 2 discriminator 2 view .LVU1070
 3496 0048 FEE7     		b	.L254
 3497              	.L255:
1881:ThirdParty/FreeRTOS/Source/queue.c **** 
 3498              		.loc 1 1881 42 discriminator 2 view .LVU1071
1897:ThirdParty/FreeRTOS/Source/queue.c **** 
 3499              		.loc 1 1897 2 discriminator 2 view .LVU1072
 3500 004a FFF7FEFF 		bl	vPortValidateInterruptPriority
 3501              	.LVL306:
1899:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3502              		.loc 1 1899 2 discriminator 2 view .LVU1073
 3503              	.LBB181:
 3504              	.LBI181:
 211:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3505              		.loc 2 211 34 discriminator 2 view .LVU1074
 3506              	.LBB182:
 213:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3507              		.loc 2 213 1 discriminator 2 view .LVU1075
ARM GAS  /tmp/cc2CcJyq.s 			page 125


 215:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3508              		.loc 2 215 2 discriminator 2 view .LVU1076
 3509              		.syntax unified
 3510              	@ 215 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3511 004e EFF31186 			mrs r6, basepri											
 3512 0052 4FF05003 		mov r3, #80												
 3513 0056 83F31188 		msr basepri, r3											
 3514 005a BFF36F8F 		isb														
 3515 005e BFF34F8F 		dsb														
 3516              	
 3517              	@ 0 "" 2
 3518              	.LVL307:
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 3519              		.loc 2 227 2 discriminator 2 view .LVU1077
 227:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 3520              		.loc 2 227 2 is_stmt 0 discriminator 2 view .LVU1078
 3521              		.thumb
 3522              		.syntax unified
 3523              	.LBE182:
 3524              	.LBE181:
1902:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3525              		.loc 1 1902 3 is_stmt 1 discriminator 2 view .LVU1079
1902:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3526              		.loc 1 1902 14 is_stmt 0 discriminator 2 view .LVU1080
 3527 0062 A36B     		ldr	r3, [r4, #56]
1902:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3528              		.loc 1 1902 5 discriminator 2 view .LVU1081
 3529 0064 1BB9     		cbnz	r3, .L262
1916:ThirdParty/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3530              		.loc 1 1916 12 view .LVU1082
 3531 0066 0020     		movs	r0, #0
 3532              	.L257:
 3533              	.LVL308:
1917:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3534              		.loc 1 1917 46 is_stmt 1 view .LVU1083
1920:ThirdParty/FreeRTOS/Source/queue.c **** 
 3535              		.loc 1 1920 2 view .LVU1084
 3536              	.LBB183:
 3537              	.LBI183:
 231:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3538              		.loc 2 231 30 view .LVU1085
 3539              	.LBB184:
 3540              		.loc 2 233 2 view .LVU1086
 3541              		.syntax unified
 3542              	@ 233 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3543 0068 86F31188 			msr basepri, r6	
 3544              	@ 0 "" 2
 3545              	.LVL309:
 3546              		.loc 2 233 2 is_stmt 0 view .LVU1087
 3547              		.thumb
 3548              		.syntax unified
 3549              	.LBE184:
 3550              	.LBE183:
1922:ThirdParty/FreeRTOS/Source/queue.c **** }
 3551              		.loc 1 1922 2 is_stmt 1 view .LVU1088
1923:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3552              		.loc 1 1923 1 is_stmt 0 view .LVU1089
ARM GAS  /tmp/cc2CcJyq.s 			page 126


 3553 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3554              	.LVL310:
 3555              	.L262:
1904:ThirdParty/FreeRTOS/Source/queue.c **** 
 3556              		.loc 1 1904 39 is_stmt 1 view .LVU1090
1908:ThirdParty/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3557              		.loc 1 1908 4 view .LVU1091
1908:ThirdParty/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3558              		.loc 1 1908 27 is_stmt 0 view .LVU1092
 3559 006e E768     		ldr	r7, [r4, #12]
 3560              	.LVL311:
1909:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 3561              		.loc 1 1909 4 is_stmt 1 view .LVU1093
 3562 0070 2946     		mov	r1, r5
 3563 0072 2046     		mov	r0, r4
 3564 0074 FFF7FEFF 		bl	prvCopyDataFromQueue
 3565              	.LVL312:
1910:ThirdParty/FreeRTOS/Source/queue.c **** 
 3566              		.loc 1 1910 4 view .LVU1094
1910:ThirdParty/FreeRTOS/Source/queue.c **** 
 3567              		.loc 1 1910 33 is_stmt 0 view .LVU1095
 3568 0078 E760     		str	r7, [r4, #12]
1912:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3569              		.loc 1 1912 4 is_stmt 1 view .LVU1096
 3570              	.LVL313:
1912:ThirdParty/FreeRTOS/Source/queue.c **** 		}
 3571              		.loc 1 1912 12 is_stmt 0 view .LVU1097
 3572 007a 0120     		movs	r0, #1
 3573 007c F4E7     		b	.L257
 3574              		.cfi_endproc
 3575              	.LFE17:
 3577              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3578              		.align	1
 3579              		.global	uxQueueMessagesWaiting
 3580              		.syntax unified
 3581              		.thumb
 3582              		.thumb_func
 3584              	uxQueueMessagesWaiting:
 3585              	.LVL314:
 3586              	.LFB18:
1927:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3587              		.loc 1 1927 1 is_stmt 1 view -0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
1928:ThirdParty/FreeRTOS/Source/queue.c **** 
 3591              		.loc 1 1928 1 view .LVU1099
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
 3592              		.loc 1 1930 2 view .LVU1100
 3593 0000 40B1     		cbz	r0, .L268
1927:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3594              		.loc 1 1927 1 is_stmt 0 discriminator 2 view .LVU1101
 3595 0002 10B5     		push	{r4, lr}
 3596              	.LCFI37:
 3597              		.cfi_def_cfa_offset 8
 3598              		.cfi_offset 4, -8
 3599              		.cfi_offset 14, -4
ARM GAS  /tmp/cc2CcJyq.s 			page 127


 3600 0004 0446     		mov	r4, r0
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
 3601              		.loc 1 1930 24 is_stmt 1 discriminator 2 view .LVU1102
1932:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3602              		.loc 1 1932 2 discriminator 2 view .LVU1103
 3603 0006 FFF7FEFF 		bl	vPortEnterCritical
 3604              	.LVL315:
1934:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3605              		.loc 1 1934 3 discriminator 2 view .LVU1104
1934:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3606              		.loc 1 1934 12 is_stmt 0 discriminator 2 view .LVU1105
 3607 000a A46B     		ldr	r4, [r4, #56]
 3608              	.LVL316:
1936:ThirdParty/FreeRTOS/Source/queue.c **** 
 3609              		.loc 1 1936 2 is_stmt 1 discriminator 2 view .LVU1106
 3610 000c FFF7FEFF 		bl	vPortExitCritical
 3611              	.LVL317:
1938:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3612              		.loc 1 1938 2 discriminator 2 view .LVU1107
1939:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3613              		.loc 1 1939 1 is_stmt 0 discriminator 2 view .LVU1108
 3614 0010 2046     		mov	r0, r4
 3615 0012 10BD     		pop	{r4, pc}
 3616              	.LVL318:
 3617              	.L268:
 3618              	.LCFI38:
 3619              		.cfi_def_cfa_offset 0
 3620              		.cfi_restore 4
 3621              		.cfi_restore 14
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
 3622              		.loc 1 1930 2 is_stmt 1 view .LVU1109
 3623              	.LBB185:
 3624              	.LBI185:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3625              		.loc 2 195 30 view .LVU1110
 3626              	.LBB186:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3627              		.loc 2 197 1 view .LVU1111
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3628              		.loc 2 199 2 view .LVU1112
 3629              		.syntax unified
 3630              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3631 0014 4FF05003 			mov r3, #80												
 3632 0018 83F31188 		msr basepri, r3											
 3633 001c BFF36F8F 		isb														
 3634 0020 BFF34F8F 		dsb														
 3635              	
 3636              	@ 0 "" 2
 3637              	.LVL319:
 3638              		.thumb
 3639              		.syntax unified
 3640              	.L265:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3641              		.loc 2 199 2 is_stmt 0 view .LVU1113
 3642              	.LBE186:
 3643              	.LBE185:
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 128


 3644              		.loc 1 1930 2 is_stmt 1 discriminator 1 view .LVU1114
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
 3645              		.loc 1 1930 2 discriminator 1 view .LVU1115
1930:ThirdParty/FreeRTOS/Source/queue.c **** 
 3646              		.loc 1 1930 2 discriminator 1 view .LVU1116
 3647 0024 FEE7     		b	.L265
 3648              		.cfi_endproc
 3649              	.LFE18:
 3651              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3652              		.align	1
 3653              		.global	uxQueueSpacesAvailable
 3654              		.syntax unified
 3655              		.thumb
 3656              		.thumb_func
 3658              	uxQueueSpacesAvailable:
 3659              	.LVL320:
 3660              	.LFB19:
1943:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3661              		.loc 1 1943 1 view -0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 0
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
1943:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3665              		.loc 1 1943 1 is_stmt 0 view .LVU1118
 3666 0000 38B5     		push	{r3, r4, r5, lr}
 3667              	.LCFI39:
 3668              		.cfi_def_cfa_offset 16
 3669              		.cfi_offset 3, -16
 3670              		.cfi_offset 4, -12
 3671              		.cfi_offset 5, -8
 3672              		.cfi_offset 14, -4
1944:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3673              		.loc 1 1944 1 is_stmt 1 view .LVU1119
1945:ThirdParty/FreeRTOS/Source/queue.c **** 
 3674              		.loc 1 1945 1 view .LVU1120
 3675              	.LVL321:
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3676              		.loc 1 1947 2 view .LVU1121
 3677 0002 48B1     		cbz	r0, .L273
 3678 0004 0546     		mov	r5, r0
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3679              		.loc 1 1947 25 discriminator 2 view .LVU1122
1949:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3680              		.loc 1 1949 2 discriminator 2 view .LVU1123
 3681 0006 FFF7FEFF 		bl	vPortEnterCritical
 3682              	.LVL322:
1951:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3683              		.loc 1 1951 3 discriminator 2 view .LVU1124
1951:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3684              		.loc 1 1951 21 is_stmt 0 discriminator 2 view .LVU1125
 3685 000a EC6B     		ldr	r4, [r5, #60]
1951:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3686              		.loc 1 1951 41 discriminator 2 view .LVU1126
 3687 000c AB6B     		ldr	r3, [r5, #56]
1951:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3688              		.loc 1 1951 12 discriminator 2 view .LVU1127
 3689 000e E41A     		subs	r4, r4, r3
ARM GAS  /tmp/cc2CcJyq.s 			page 129


 3690              	.LVL323:
1953:ThirdParty/FreeRTOS/Source/queue.c **** 
 3691              		.loc 1 1953 2 is_stmt 1 discriminator 2 view .LVU1128
 3692 0010 FFF7FEFF 		bl	vPortExitCritical
 3693              	.LVL324:
1955:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3694              		.loc 1 1955 2 discriminator 2 view .LVU1129
1956:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3695              		.loc 1 1956 1 is_stmt 0 discriminator 2 view .LVU1130
 3696 0014 2046     		mov	r0, r4
 3697 0016 38BD     		pop	{r3, r4, r5, pc}
 3698              	.LVL325:
 3699              	.L273:
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3700              		.loc 1 1947 2 is_stmt 1 view .LVU1131
 3701              	.LBB187:
 3702              	.LBI187:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3703              		.loc 2 195 30 view .LVU1132
 3704              	.LBB188:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3705              		.loc 2 197 1 view .LVU1133
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3706              		.loc 2 199 2 view .LVU1134
 3707              		.syntax unified
 3708              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3709 0018 4FF05003 			mov r3, #80												
 3710 001c 83F31188 		msr basepri, r3											
 3711 0020 BFF36F8F 		isb														
 3712 0024 BFF34F8F 		dsb														
 3713              	
 3714              	@ 0 "" 2
 3715              	.LVL326:
 3716              		.thumb
 3717              		.syntax unified
 3718              	.L271:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3719              		.loc 2 199 2 is_stmt 0 view .LVU1135
 3720              	.LBE188:
 3721              	.LBE187:
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3722              		.loc 1 1947 2 is_stmt 1 discriminator 1 view .LVU1136
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3723              		.loc 1 1947 2 discriminator 1 view .LVU1137
1947:ThirdParty/FreeRTOS/Source/queue.c **** 
 3724              		.loc 1 1947 2 discriminator 1 view .LVU1138
 3725 0028 FEE7     		b	.L271
 3726              		.cfi_endproc
 3727              	.LFE19:
 3729              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3730              		.align	1
 3731              		.global	uxQueueMessagesWaitingFromISR
 3732              		.syntax unified
 3733              		.thumb
 3734              		.thumb_func
 3736              	uxQueueMessagesWaitingFromISR:
 3737              	.LVL327:
ARM GAS  /tmp/cc2CcJyq.s 			page 130


 3738              	.LFB20:
1960:ThirdParty/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3739              		.loc 1 1960 1 view -0
 3740              		.cfi_startproc
 3741              		@ args = 0, pretend = 0, frame = 0
 3742              		@ frame_needed = 0, uses_anonymous_args = 0
 3743              		@ link register save eliminated.
1961:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3744              		.loc 1 1961 1 view .LVU1140
1962:ThirdParty/FreeRTOS/Source/queue.c **** 
 3745              		.loc 1 1962 1 view .LVU1141
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3746              		.loc 1 1964 2 view .LVU1142
 3747 0000 08B1     		cbz	r0, .L277
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3748              		.loc 1 1964 25 discriminator 2 view .LVU1143
1965:ThirdParty/FreeRTOS/Source/queue.c **** 
 3749              		.loc 1 1965 2 discriminator 2 view .LVU1144
1965:ThirdParty/FreeRTOS/Source/queue.c **** 
 3750              		.loc 1 1965 11 is_stmt 0 discriminator 2 view .LVU1145
 3751 0002 806B     		ldr	r0, [r0, #56]
 3752              	.LVL328:
1967:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 3753              		.loc 1 1967 2 is_stmt 1 discriminator 2 view .LVU1146
1968:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3754              		.loc 1 1968 1 is_stmt 0 discriminator 2 view .LVU1147
 3755 0004 7047     		bx	lr
 3756              	.LVL329:
 3757              	.L277:
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3758              		.loc 1 1964 2 is_stmt 1 view .LVU1148
 3759              	.LBB189:
 3760              	.LBI189:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3761              		.loc 2 195 30 view .LVU1149
 3762              	.LBB190:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3763              		.loc 2 197 1 view .LVU1150
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3764              		.loc 2 199 2 view .LVU1151
 3765              		.syntax unified
 3766              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3767 0006 4FF05003 			mov r3, #80												
 3768 000a 83F31188 		msr basepri, r3											
 3769 000e BFF36F8F 		isb														
 3770 0012 BFF34F8F 		dsb														
 3771              	
 3772              	@ 0 "" 2
 3773              	.LVL330:
 3774              		.thumb
 3775              		.syntax unified
 3776              	.L276:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3777              		.loc 2 199 2 is_stmt 0 view .LVU1152
 3778              	.LBE190:
 3779              	.LBE189:
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
ARM GAS  /tmp/cc2CcJyq.s 			page 131


 3780              		.loc 1 1964 2 is_stmt 1 discriminator 1 view .LVU1153
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3781              		.loc 1 1964 2 discriminator 1 view .LVU1154
1964:ThirdParty/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3782              		.loc 1 1964 2 discriminator 1 view .LVU1155
 3783 0016 FEE7     		b	.L276
 3784              		.cfi_endproc
 3785              	.LFE20:
 3787              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3788              		.align	1
 3789              		.global	xQueueIsQueueEmptyFromISR
 3790              		.syntax unified
 3791              		.thumb
 3792              		.thumb_func
 3794              	xQueueIsQueueEmptyFromISR:
 3795              	.LVL331:
 3796              	.LFB27:
2309:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3797              		.loc 1 2309 1 view -0
 3798              		.cfi_startproc
 3799              		@ args = 0, pretend = 0, frame = 0
 3800              		@ frame_needed = 0, uses_anonymous_args = 0
 3801              		@ link register save eliminated.
2310:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3802              		.loc 1 2310 1 view .LVU1157
2311:ThirdParty/FreeRTOS/Source/queue.c **** 
 3803              		.loc 1 2311 1 view .LVU1158
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3804              		.loc 1 2313 2 view .LVU1159
 3805 0000 18B1     		cbz	r0, .L283
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3806              		.loc 1 2313 25 discriminator 2 view .LVU1160
2314:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3807              		.loc 1 2314 2 discriminator 2 view .LVU1161
2314:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3808              		.loc 1 2314 13 is_stmt 0 discriminator 2 view .LVU1162
 3809 0002 836B     		ldr	r3, [r0, #56]
2314:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3810              		.loc 1 2314 4 discriminator 2 view .LVU1163
 3811 0004 53B9     		cbnz	r3, .L282
2316:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3812              		.loc 1 2316 11 view .LVU1164
 3813 0006 0120     		movs	r0, #1
 3814              	.LVL332:
2316:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3815              		.loc 1 2316 11 view .LVU1165
 3816 0008 7047     		bx	lr
 3817              	.LVL333:
 3818              	.L283:
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3819              		.loc 1 2313 2 is_stmt 1 view .LVU1166
 3820              	.LBB191:
 3821              	.LBI191:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3822              		.loc 2 195 30 view .LVU1167
 3823              	.LBB192:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc2CcJyq.s 			page 132


 3824              		.loc 2 197 1 view .LVU1168
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3825              		.loc 2 199 2 view .LVU1169
 3826              		.syntax unified
 3827              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3828 000a 4FF05003 			mov r3, #80												
 3829 000e 83F31188 		msr basepri, r3											
 3830 0012 BFF36F8F 		isb														
 3831 0016 BFF34F8F 		dsb														
 3832              	
 3833              	@ 0 "" 2
 3834              	.LVL334:
 3835              		.thumb
 3836              		.syntax unified
 3837              	.L280:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3838              		.loc 2 199 2 is_stmt 0 view .LVU1170
 3839              	.LBE192:
 3840              	.LBE191:
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3841              		.loc 1 2313 2 is_stmt 1 discriminator 1 view .LVU1171
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3842              		.loc 1 2313 2 discriminator 1 view .LVU1172
2313:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3843              		.loc 1 2313 2 discriminator 1 view .LVU1173
 3844 001a FEE7     		b	.L280
 3845              	.L282:
2320:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3846              		.loc 1 2320 11 is_stmt 0 view .LVU1174
 3847 001c 0020     		movs	r0, #0
 3848              	.LVL335:
2323:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3849              		.loc 1 2323 2 is_stmt 1 view .LVU1175
2324:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3850              		.loc 1 2324 1 is_stmt 0 view .LVU1176
 3851 001e 7047     		bx	lr
 3852              		.cfi_endproc
 3853              	.LFE27:
 3855              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3856              		.align	1
 3857              		.global	xQueueIsQueueFullFromISR
 3858              		.syntax unified
 3859              		.thumb
 3860              		.thumb_func
 3862              	xQueueIsQueueFullFromISR:
 3863              	.LVL336:
 3864              	.LFB29:
2346:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2347:ThirdParty/FreeRTOS/Source/queue.c **** 
2348:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2349:ThirdParty/FreeRTOS/Source/queue.c **** {
 3865              		.loc 1 2349 1 is_stmt 1 view -0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 0
 3868              		@ frame_needed = 0, uses_anonymous_args = 0
 3869              		@ link register save eliminated.
2350:ThirdParty/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  /tmp/cc2CcJyq.s 			page 133


 3870              		.loc 1 2350 1 view .LVU1178
2351:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 3871              		.loc 1 2351 1 view .LVU1179
2352:ThirdParty/FreeRTOS/Source/queue.c **** 
2353:ThirdParty/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3872              		.loc 1 2353 2 view .LVU1180
 3873 0000 28B1     		cbz	r0, .L289
 3874              		.loc 1 2353 25 discriminator 2 view .LVU1181
2354:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3875              		.loc 1 2354 2 discriminator 2 view .LVU1182
 3876              		.loc 1 2354 13 is_stmt 0 discriminator 2 view .LVU1183
 3877 0002 826B     		ldr	r2, [r0, #56]
 3878              		.loc 1 2354 43 discriminator 2 view .LVU1184
 3879 0004 C36B     		ldr	r3, [r0, #60]
 3880              		.loc 1 2354 4 discriminator 2 view .LVU1185
 3881 0006 9A42     		cmp	r2, r3
 3882 0008 0AD0     		beq	.L290
2355:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2356:ThirdParty/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2357:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2358:ThirdParty/FreeRTOS/Source/queue.c **** 	else
2359:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2360:ThirdParty/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3883              		.loc 1 2360 11 view .LVU1186
 3884 000a 0020     		movs	r0, #0
 3885              	.LVL337:
2361:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2362:ThirdParty/FreeRTOS/Source/queue.c **** 
2363:ThirdParty/FreeRTOS/Source/queue.c **** 	return xReturn;
 3886              		.loc 1 2363 2 is_stmt 1 view .LVU1187
2364:ThirdParty/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3887              		.loc 1 2364 1 is_stmt 0 view .LVU1188
 3888 000c 7047     		bx	lr
 3889              	.LVL338:
 3890              	.L289:
2353:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3891              		.loc 1 2353 2 is_stmt 1 view .LVU1189
 3892              	.LBB193:
 3893              	.LBI193:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3894              		.loc 2 195 30 view .LVU1190
 3895              	.LBB194:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3896              		.loc 2 197 1 view .LVU1191
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3897              		.loc 2 199 2 view .LVU1192
 3898              		.syntax unified
 3899              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3900 000e 4FF05003 			mov r3, #80												
 3901 0012 83F31188 		msr basepri, r3											
 3902 0016 BFF36F8F 		isb														
 3903 001a BFF34F8F 		dsb														
 3904              	
 3905              	@ 0 "" 2
 3906              	.LVL339:
 3907              		.thumb
 3908              		.syntax unified
ARM GAS  /tmp/cc2CcJyq.s 			page 134


 3909              	.L286:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3910              		.loc 2 199 2 is_stmt 0 view .LVU1193
 3911              	.LBE194:
 3912              	.LBE193:
2353:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3913              		.loc 1 2353 2 is_stmt 1 discriminator 1 view .LVU1194
2353:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3914              		.loc 1 2353 2 discriminator 1 view .LVU1195
2353:ThirdParty/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3915              		.loc 1 2353 2 discriminator 1 view .LVU1196
 3916 001e FEE7     		b	.L286
 3917              	.L290:
2356:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3918              		.loc 1 2356 11 is_stmt 0 view .LVU1197
 3919 0020 0120     		movs	r0, #1
 3920              	.LVL340:
2356:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3921              		.loc 1 2356 11 view .LVU1198
 3922 0022 7047     		bx	lr
 3923              		.cfi_endproc
 3924              	.LFE29:
 3926              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3927              		.align	1
 3928              		.global	vQueueAddToRegistry
 3929              		.syntax unified
 3930              		.thumb
 3931              		.thumb_func
 3933              	vQueueAddToRegistry:
 3934              	.LVL341:
 3935              	.LFB30:
2365:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2366:ThirdParty/FreeRTOS/Source/queue.c **** 
2367:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2368:ThirdParty/FreeRTOS/Source/queue.c **** 
2369:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2370:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2371:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2372:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2373:ThirdParty/FreeRTOS/Source/queue.c **** 
2374:ThirdParty/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2375:ThirdParty/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2376:ThirdParty/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2377:ThirdParty/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2378:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2379:ThirdParty/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2380:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2381:ThirdParty/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2382:ThirdParty/FreeRTOS/Source/queue.c **** 				posting? */
2383:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2384:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2385:ThirdParty/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2386:ThirdParty/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2387:ThirdParty/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2388:ThirdParty/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2389:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2390:ThirdParty/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cc2CcJyq.s 			page 135


2391:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2392:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2393:ThirdParty/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2394:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2395:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2396:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2397:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2398:ThirdParty/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2399:ThirdParty/FreeRTOS/Source/queue.c **** 
2400:ThirdParty/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2401:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2402:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2403:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2404:ThirdParty/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2405:ThirdParty/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2406:ThirdParty/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2407:ThirdParty/FreeRTOS/Source/queue.c **** 
2408:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2409:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2410:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2411:ThirdParty/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2412:ThirdParty/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2413:ThirdParty/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2414:ThirdParty/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2415:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2416:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2417:ThirdParty/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2418:ThirdParty/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2419:ThirdParty/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2420:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2421:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2422:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2423:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2424:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2425:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2426:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2427:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2428:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2429:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2430:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2431:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2432:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2433:ThirdParty/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2434:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2435:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2436:ThirdParty/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2437:ThirdParty/FreeRTOS/Source/queue.c **** 
2438:ThirdParty/FreeRTOS/Source/queue.c **** 		return xReturn;
2439:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2440:ThirdParty/FreeRTOS/Source/queue.c **** 
2441:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2442:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2443:ThirdParty/FreeRTOS/Source/queue.c **** 
2444:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2445:ThirdParty/FreeRTOS/Source/queue.c **** 
2446:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2447:ThirdParty/FreeRTOS/Source/queue.c **** 	{
ARM GAS  /tmp/cc2CcJyq.s 			page 136


2448:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2449:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2450:ThirdParty/FreeRTOS/Source/queue.c **** 
2451:ThirdParty/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2452:ThirdParty/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2453:ThirdParty/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2454:ThirdParty/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2455:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2456:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2457:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2458:ThirdParty/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2459:ThirdParty/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2460:ThirdParty/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2461:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2462:ThirdParty/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2463:ThirdParty/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2464:ThirdParty/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2465:ThirdParty/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2466:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2467:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2468:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2469:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2470:ThirdParty/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2471:ThirdParty/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2472:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2473:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2474:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2475:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2476:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2477:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2478:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2479:ThirdParty/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2480:ThirdParty/FreeRTOS/Source/queue.c **** 
2481:ThirdParty/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2482:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2483:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2484:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2485:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2486:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2487:ThirdParty/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2488:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2489:ThirdParty/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2490:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2491:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2492:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2493:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2494:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2495:ThirdParty/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2496:ThirdParty/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2497:ThirdParty/FreeRTOS/Source/queue.c **** 
2498:ThirdParty/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2499:ThirdParty/FreeRTOS/Source/queue.c **** 
2500:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2501:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2502:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2503:ThirdParty/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2504:ThirdParty/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
ARM GAS  /tmp/cc2CcJyq.s 			page 137


2505:ThirdParty/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2506:ThirdParty/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2507:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2508:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2509:ThirdParty/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2510:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2511:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2512:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2513:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2514:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2515:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2516:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2517:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2518:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2519:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2520:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2521:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2522:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2523:ThirdParty/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2524:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2525:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2526:ThirdParty/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2527:ThirdParty/FreeRTOS/Source/queue.c **** 
2528:ThirdParty/FreeRTOS/Source/queue.c **** 		return xReturn;
2529:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2530:ThirdParty/FreeRTOS/Source/queue.c **** 
2531:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2532:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2533:ThirdParty/FreeRTOS/Source/queue.c **** 
2534:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2535:ThirdParty/FreeRTOS/Source/queue.c **** 
2536:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2537:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2538:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2539:ThirdParty/FreeRTOS/Source/queue.c **** 
2540:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2541:ThirdParty/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2542:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2543:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2544:ThirdParty/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2545:ThirdParty/FreeRTOS/Source/queue.c **** 
2546:ThirdParty/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2547:ThirdParty/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2548:ThirdParty/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2549:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2550:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2551:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2552:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2553:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2554:ThirdParty/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2555:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2556:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2557:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2558:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2559:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2560:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2561:ThirdParty/FreeRTOS/Source/queue.c **** 				else
ARM GAS  /tmp/cc2CcJyq.s 			page 138


2562:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2563:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2564:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2565:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2566:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2567:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2568:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2570:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2571:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2572:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2573:ThirdParty/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2574:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2575:ThirdParty/FreeRTOS/Source/queue.c **** 
2576:ThirdParty/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2577:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2578:ThirdParty/FreeRTOS/Source/queue.c **** 
2579:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2580:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2581:ThirdParty/FreeRTOS/Source/queue.c **** 
2582:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2583:ThirdParty/FreeRTOS/Source/queue.c **** 
2584:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2585:ThirdParty/FreeRTOS/Source/queue.c **** 	{
2586:ThirdParty/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2587:ThirdParty/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2588:ThirdParty/FreeRTOS/Source/queue.c **** 
2589:ThirdParty/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2590:ThirdParty/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2591:ThirdParty/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2592:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2593:ThirdParty/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2594:ThirdParty/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2595:ThirdParty/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2596:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2597:ThirdParty/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2598:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2599:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2600:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2601:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2602:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2603:ThirdParty/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2604:ThirdParty/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2605:ThirdParty/FreeRTOS/Source/queue.c **** 
2606:ThirdParty/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2607:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2608:ThirdParty/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2609:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2610:ThirdParty/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2611:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2612:ThirdParty/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2613:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2614:ThirdParty/FreeRTOS/Source/queue.c **** 					else
2615:ThirdParty/FreeRTOS/Source/queue.c **** 					{
2616:ThirdParty/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2617:ThirdParty/FreeRTOS/Source/queue.c **** 					}
2618:ThirdParty/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cc2CcJyq.s 			page 139


2619:ThirdParty/FreeRTOS/Source/queue.c **** 				else
2620:ThirdParty/FreeRTOS/Source/queue.c **** 				{
2621:ThirdParty/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2622:ThirdParty/FreeRTOS/Source/queue.c **** 				}
2623:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2624:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2625:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2626:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2627:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2628:ThirdParty/FreeRTOS/Source/queue.c **** 
2629:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2630:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2631:ThirdParty/FreeRTOS/Source/queue.c **** 		else
2632:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2633:ThirdParty/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2634:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2635:ThirdParty/FreeRTOS/Source/queue.c **** 
2636:ThirdParty/FreeRTOS/Source/queue.c **** 		return xReturn;
2637:ThirdParty/FreeRTOS/Source/queue.c **** 	}
2638:ThirdParty/FreeRTOS/Source/queue.c **** 
2639:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2640:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2641:ThirdParty/FreeRTOS/Source/queue.c **** 
2642:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2643:ThirdParty/FreeRTOS/Source/queue.c **** 
2644:ThirdParty/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2645:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3936              		.loc 1 2645 2 is_stmt 1 view -0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              		@ link register save eliminated.
2646:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 3941              		.loc 1 2646 2 view .LVU1200
2647:ThirdParty/FreeRTOS/Source/queue.c **** 
2648:ThirdParty/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2649:ThirdParty/FreeRTOS/Source/queue.c **** 		a free slot. */
2650:ThirdParty/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3942              		.loc 1 2650 3 view .LVU1201
 3943              		.loc 1 2650 11 is_stmt 0 view .LVU1202
 3944 0000 0023     		movs	r3, #0
 3945              	.LVL342:
 3946              	.L292:
 3947              		.loc 1 2650 33 is_stmt 1 discriminator 1 view .LVU1203
 3948              		.loc 1 2650 3 is_stmt 0 discriminator 1 view .LVU1204
 3949 0002 072B     		cmp	r3, #7
 3950 0004 0CD8     		bhi	.L296
2651:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2652:ThirdParty/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3951              		.loc 1 2652 4 is_stmt 1 view .LVU1205
 3952              		.loc 1 2652 28 is_stmt 0 view .LVU1206
 3953 0006 074A     		ldr	r2, .L298
 3954 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3955              		.loc 1 2652 6 view .LVU1207
 3956 000c 0AB1     		cbz	r2, .L297
2653:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2654:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
ARM GAS  /tmp/cc2CcJyq.s 			page 140


2655:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2656:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
2657:ThirdParty/FreeRTOS/Source/queue.c **** 
2658:ThirdParty/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2659:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
2660:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2661:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2662:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2663:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 3957              		.loc 1 2663 29 is_stmt 1 discriminator 2 view .LVU1208
2650:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3958              		.loc 1 2650 81 discriminator 2 view .LVU1209
2650:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3959              		.loc 1 2650 83 is_stmt 0 discriminator 2 view .LVU1210
 3960 000e 0133     		adds	r3, r3, #1
 3961              	.LVL343:
2650:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 3962              		.loc 1 2650 83 discriminator 2 view .LVU1211
 3963 0010 F7E7     		b	.L292
 3964              	.L297:
2655:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3965              		.loc 1 2655 5 is_stmt 1 view .LVU1212
2655:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3966              		.loc 1 2655 38 is_stmt 0 view .LVU1213
 3967 0012 044A     		ldr	r2, .L298
 3968 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2656:ThirdParty/FreeRTOS/Source/queue.c **** 
 3969              		.loc 1 2656 5 is_stmt 1 view .LVU1214
2656:ThirdParty/FreeRTOS/Source/queue.c **** 
 3970              		.loc 1 2656 34 is_stmt 0 view .LVU1215
 3971 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3972              	.LVL344:
2656:ThirdParty/FreeRTOS/Source/queue.c **** 
 3973              		.loc 1 2656 34 view .LVU1216
 3974 001c 5860     		str	r0, [r3, #4]
2658:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 3975              		.loc 1 2658 51 is_stmt 1 view .LVU1217
2659:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 3976              		.loc 1 2659 5 view .LVU1218
 3977 001e 7047     		bx	lr
 3978              	.LVL345:
 3979              	.L296:
2664:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2665:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2666:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 3980              		.loc 1 2666 2 is_stmt 0 view .LVU1219
 3981 0020 7047     		bx	lr
 3982              	.L299:
 3983 0022 00BF     		.align	2
 3984              	.L298:
 3985 0024 00000000 		.word	.LANCHOR0
 3986              		.cfi_endproc
 3987              	.LFE30:
 3989              		.section	.text.pcQueueGetName,"ax",%progbits
 3990              		.align	1
 3991              		.global	pcQueueGetName
 3992              		.syntax unified
ARM GAS  /tmp/cc2CcJyq.s 			page 141


 3993              		.thumb
 3994              		.thumb_func
 3996              	pcQueueGetName:
 3997              	.LVL346:
 3998              	.LFB31:
2667:ThirdParty/FreeRTOS/Source/queue.c **** 
2668:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2669:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2670:ThirdParty/FreeRTOS/Source/queue.c **** 
2671:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2672:ThirdParty/FreeRTOS/Source/queue.c **** 
2673:ThirdParty/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2674:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 3999              		.loc 1 2674 2 is_stmt 1 view -0
 4000              		.cfi_startproc
 4001              		@ args = 0, pretend = 0, frame = 0
 4002              		@ frame_needed = 0, uses_anonymous_args = 0
 4003              		@ link register save eliminated.
2675:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 4004              		.loc 1 2675 2 view .LVU1221
2676:ThirdParty/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 4005              		.loc 1 2676 2 view .LVU1222
2677:ThirdParty/FreeRTOS/Source/queue.c **** 
2678:ThirdParty/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2679:ThirdParty/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2680:ThirdParty/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4006              		.loc 1 2680 3 view .LVU1223
 4007              		.loc 1 2680 11 is_stmt 0 view .LVU1224
 4008 0000 0023     		movs	r3, #0
 4009              	.LVL347:
 4010              	.L301:
 4011              		.loc 1 2680 33 is_stmt 1 discriminator 1 view .LVU1225
 4012              		.loc 1 2680 3 is_stmt 0 discriminator 1 view .LVU1226
 4013 0002 072B     		cmp	r3, #7
 4014 0004 0BD8     		bhi	.L305
2681:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2682:ThirdParty/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4015              		.loc 1 2682 4 is_stmt 1 view .LVU1227
 4016              		.loc 1 2682 28 is_stmt 0 view .LVU1228
 4017 0006 074A     		ldr	r2, .L307
 4018 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4019 000c 5268     		ldr	r2, [r2, #4]
 4020              		.loc 1 2682 6 view .LVU1229
 4021 000e 8242     		cmp	r2, r0
 4022 0010 01D0     		beq	.L306
2683:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2684:ThirdParty/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
2685:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
2686:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2687:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2688:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2689:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4023              		.loc 1 2689 29 is_stmt 1 discriminator 2 view .LVU1230
2680:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4024              		.loc 1 2680 81 discriminator 2 view .LVU1231
2680:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4025              		.loc 1 2680 83 is_stmt 0 discriminator 2 view .LVU1232
ARM GAS  /tmp/cc2CcJyq.s 			page 142


 4026 0012 0133     		adds	r3, r3, #1
 4027              	.LVL348:
2680:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4028              		.loc 1 2680 83 discriminator 2 view .LVU1233
 4029 0014 F5E7     		b	.L301
 4030              	.L306:
2684:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 4031              		.loc 1 2684 5 is_stmt 1 view .LVU1234
2684:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 4032              		.loc 1 2684 14 is_stmt 0 view .LVU1235
 4033 0016 034A     		ldr	r2, .L307
 4034 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4035              	.LVL349:
2685:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 4036              		.loc 1 2685 5 is_stmt 1 view .LVU1236
 4037 001c 7047     		bx	lr
 4038              	.LVL350:
 4039              	.L305:
2676:ThirdParty/FreeRTOS/Source/queue.c **** 
 4040              		.loc 1 2676 14 is_stmt 0 view .LVU1237
 4041 001e 0020     		movs	r0, #0
 4042              	.LVL351:
2690:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2691:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2692:ThirdParty/FreeRTOS/Source/queue.c **** 
2693:ThirdParty/FreeRTOS/Source/queue.c **** 		return pcReturn;
 4043              		.loc 1 2693 3 is_stmt 1 view .LVU1238
2694:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4044              		.loc 1 2694 2 is_stmt 0 view .LVU1239
 4045 0020 7047     		bx	lr
 4046              	.L308:
 4047 0022 00BF     		.align	2
 4048              	.L307:
 4049 0024 00000000 		.word	.LANCHOR0
 4050              		.cfi_endproc
 4051              	.LFE31:
 4053              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4054              		.align	1
 4055              		.global	vQueueUnregisterQueue
 4056              		.syntax unified
 4057              		.thumb
 4058              		.thumb_func
 4060              	vQueueUnregisterQueue:
 4061              	.LVL352:
 4062              	.LFB32:
2695:ThirdParty/FreeRTOS/Source/queue.c **** 
2696:ThirdParty/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2697:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2698:ThirdParty/FreeRTOS/Source/queue.c **** 
2699:ThirdParty/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2700:ThirdParty/FreeRTOS/Source/queue.c **** 
2701:ThirdParty/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2702:ThirdParty/FreeRTOS/Source/queue.c **** 	{
 4063              		.loc 1 2702 2 is_stmt 1 view -0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 0
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2CcJyq.s 			page 143


 4067              		@ link register save eliminated.
2703:ThirdParty/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 4068              		.loc 1 2703 2 view .LVU1241
2704:ThirdParty/FreeRTOS/Source/queue.c **** 
2705:ThirdParty/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2706:ThirdParty/FreeRTOS/Source/queue.c **** 		registry. */
2707:ThirdParty/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4069              		.loc 1 2707 3 view .LVU1242
 4070              		.loc 1 2707 11 is_stmt 0 view .LVU1243
 4071 0000 0023     		movs	r3, #0
 4072              	.LVL353:
 4073              	.L310:
 4074              		.loc 1 2707 33 is_stmt 1 discriminator 1 view .LVU1244
 4075              		.loc 1 2707 3 is_stmt 0 discriminator 1 view .LVU1245
 4076 0002 072B     		cmp	r3, #7
 4077 0004 0FD8     		bhi	.L314
2708:ThirdParty/FreeRTOS/Source/queue.c **** 		{
2709:ThirdParty/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4078              		.loc 1 2709 4 is_stmt 1 view .LVU1246
 4079              		.loc 1 2709 28 is_stmt 0 view .LVU1247
 4080 0006 084A     		ldr	r2, .L316
 4081 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4082 000c 5268     		ldr	r2, [r2, #4]
 4083              		.loc 1 2709 6 view .LVU1248
 4084 000e 8242     		cmp	r2, r0
 4085 0010 01D0     		beq	.L315
2710:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2711:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2712:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
2713:ThirdParty/FreeRTOS/Source/queue.c **** 
2714:ThirdParty/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2715:ThirdParty/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2716:ThirdParty/FreeRTOS/Source/queue.c **** 				added again. */
2717:ThirdParty/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2718:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
2719:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2720:ThirdParty/FreeRTOS/Source/queue.c **** 			else
2721:ThirdParty/FreeRTOS/Source/queue.c **** 			{
2722:ThirdParty/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 4086              		.loc 1 2722 29 is_stmt 1 discriminator 2 view .LVU1249
2707:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4087              		.loc 1 2707 81 discriminator 2 view .LVU1250
2707:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4088              		.loc 1 2707 83 is_stmt 0 discriminator 2 view .LVU1251
 4089 0012 0133     		adds	r3, r3, #1
 4090              	.LVL354:
2707:ThirdParty/FreeRTOS/Source/queue.c **** 		{
 4091              		.loc 1 2707 83 discriminator 2 view .LVU1252
 4092 0014 F5E7     		b	.L310
 4093              	.L315:
2712:ThirdParty/FreeRTOS/Source/queue.c **** 
 4094              		.loc 1 2712 5 is_stmt 1 view .LVU1253
2712:ThirdParty/FreeRTOS/Source/queue.c **** 
 4095              		.loc 1 2712 38 is_stmt 0 view .LVU1254
 4096 0016 044A     		ldr	r2, .L316
 4097 0018 0021     		movs	r1, #0
 4098 001a 42F83310 		str	r1, [r2, r3, lsl #3]
ARM GAS  /tmp/cc2CcJyq.s 			page 144


2717:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 4099              		.loc 1 2717 5 is_stmt 1 view .LVU1255
2717:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 4100              		.loc 1 2717 34 is_stmt 0 view .LVU1256
 4101 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4102              	.LVL355:
2717:ThirdParty/FreeRTOS/Source/queue.c **** 				break;
 4103              		.loc 1 2717 34 view .LVU1257
 4104 0022 5960     		str	r1, [r3, #4]
2718:ThirdParty/FreeRTOS/Source/queue.c **** 			}
 4105              		.loc 1 2718 5 is_stmt 1 view .LVU1258
 4106 0024 7047     		bx	lr
 4107              	.LVL356:
 4108              	.L314:
2723:ThirdParty/FreeRTOS/Source/queue.c **** 			}
2724:ThirdParty/FreeRTOS/Source/queue.c **** 		}
2725:ThirdParty/FreeRTOS/Source/queue.c **** 
2726:ThirdParty/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4109              		.loc 1 2726 2 is_stmt 0 view .LVU1259
 4110 0026 7047     		bx	lr
 4111              	.L317:
 4112              		.align	2
 4113              	.L316:
 4114 0028 00000000 		.word	.LANCHOR0
 4115              		.cfi_endproc
 4116              	.LFE32:
 4118              		.section	.text.vQueueDelete,"ax",%progbits
 4119              		.align	1
 4120              		.global	vQueueDelete
 4121              		.syntax unified
 4122              		.thumb
 4123              		.thumb_func
 4125              	vQueueDelete:
 4126              	.LVL357:
 4127              	.LFB21:
1972:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4128              		.loc 1 1972 1 is_stmt 1 view -0
 4129              		.cfi_startproc
 4130              		@ args = 0, pretend = 0, frame = 0
 4131              		@ frame_needed = 0, uses_anonymous_args = 0
1973:ThirdParty/FreeRTOS/Source/queue.c **** 
 4132              		.loc 1 1973 1 view .LVU1261
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4133              		.loc 1 1975 2 view .LVU1262
 4134 0000 38B1     		cbz	r0, .L323
1972:ThirdParty/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4135              		.loc 1 1972 1 is_stmt 0 discriminator 2 view .LVU1263
 4136 0002 10B5     		push	{r4, lr}
 4137              	.LCFI40:
 4138              		.cfi_def_cfa_offset 8
 4139              		.cfi_offset 4, -8
 4140              		.cfi_offset 14, -4
 4141 0004 0446     		mov	r4, r0
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4142              		.loc 1 1975 25 is_stmt 1 discriminator 2 view .LVU1264
1976:ThirdParty/FreeRTOS/Source/queue.c **** 
 4143              		.loc 1 1976 30 discriminator 2 view .LVU1265
ARM GAS  /tmp/cc2CcJyq.s 			page 145


1980:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 4144              		.loc 1 1980 3 discriminator 2 view .LVU1266
 4145 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 4146              	.LVL358:
1988:ThirdParty/FreeRTOS/Source/queue.c **** 	}
 4147              		.loc 1 1988 3 discriminator 2 view .LVU1267
 4148 000a 2046     		mov	r0, r4
 4149 000c FFF7FEFF 		bl	vPortFree
 4150              	.LVL359:
2010:ThirdParty/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 4151              		.loc 1 2010 1 is_stmt 0 discriminator 2 view .LVU1268
 4152 0010 10BD     		pop	{r4, pc}
 4153              	.LVL360:
 4154              	.L323:
 4155              	.LCFI41:
 4156              		.cfi_def_cfa_offset 0
 4157              		.cfi_restore 4
 4158              		.cfi_restore 14
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4159              		.loc 1 1975 2 is_stmt 1 view .LVU1269
 4160              	.LBB195:
 4161              	.LBI195:
 195:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4162              		.loc 2 195 30 view .LVU1270
 4163              	.LBB196:
 197:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4164              		.loc 2 197 1 view .LVU1271
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4165              		.loc 2 199 2 view .LVU1272
 4166              		.syntax unified
 4167              	@ 199 "ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4168 0012 4FF05003 			mov r3, #80												
 4169 0016 83F31188 		msr basepri, r3											
 4170 001a BFF36F8F 		isb														
 4171 001e BFF34F8F 		dsb														
 4172              	
 4173              	@ 0 "" 2
 4174              	.LVL361:
 4175              		.thumb
 4176              		.syntax unified
 4177              	.L320:
 199:ThirdParty/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4178              		.loc 2 199 2 is_stmt 0 view .LVU1273
 4179              	.LBE196:
 4180              	.LBE195:
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4181              		.loc 1 1975 2 is_stmt 1 discriminator 1 view .LVU1274
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4182              		.loc 1 1975 2 discriminator 1 view .LVU1275
1975:ThirdParty/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4183              		.loc 1 1975 2 discriminator 1 view .LVU1276
 4184 0022 FEE7     		b	.L320
 4185              		.cfi_endproc
 4186              	.LFE21:
 4188              		.global	xQueueRegistry
 4189              		.section	.bss.xQueueRegistry,"aw",%nobits
 4190              		.align	2
ARM GAS  /tmp/cc2CcJyq.s 			page 146


 4191              		.set	.LANCHOR0,. + 0
 4194              	xQueueRegistry:
 4195 0000 00000000 		.space	64
 4195      00000000 
 4195      00000000 
 4195      00000000 
 4195      00000000 
 4196              		.text
 4197              	.Letext0:
 4198              		.file 3 "/opt/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 4199              		.file 4 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 4200              		.file 5 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 4201              		.file 6 "ThirdParty/FreeRTOS/Source/include/list.h"
 4202              		.file 7 "ThirdParty/FreeRTOS/Source/include/task.h"
 4203              		.file 8 "ThirdParty/FreeRTOS/Source/include/queue.h"
 4204              		.file 9 "ThirdParty/FreeRTOS/Source/include/portable.h"
 4205              		.file 10 "<built-in>"
ARM GAS  /tmp/cc2CcJyq.s 			page 147


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/cc2CcJyq.s:20     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/cc2CcJyq.s:25     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/cc2CcJyq.s:60     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/cc2CcJyq.s:65     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/cc2CcJyq.s:113    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/cc2CcJyq.s:118    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/cc2CcJyq.s:163    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/cc2CcJyq.s:168    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/cc2CcJyq.s:325    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/cc2CcJyq.s:330    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/cc2CcJyq.s:390    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/cc2CcJyq.s:395    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/cc2CcJyq.s:520    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/cc2CcJyq.s:526    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/cc2CcJyq.s:669    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/cc2CcJyq.s:674    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/cc2CcJyq.s:727    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/cc2CcJyq.s:733    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/cc2CcJyq.s:847    .text.xQueueGenericSend:0000000000000000 $t
     /tmp/cc2CcJyq.s:853    .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/cc2CcJyq.s:1265   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/cc2CcJyq.s:1270   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/cc2CcJyq.s:1318   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/cc2CcJyq.s:1324   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/cc2CcJyq.s:1363   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:1369   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/cc2CcJyq.s:1628   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:1634   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/cc2CcJyq.s:1907   .text.xQueueReceive:0000000000000000 $t
     /tmp/cc2CcJyq.s:1913   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/cc2CcJyq.s:2287   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/cc2CcJyq.s:2293   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/cc2CcJyq.s:2761   .text.xQueuePeek:0000000000000000 $t
     /tmp/cc2CcJyq.s:2767   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/cc2CcJyq.s:3143   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:3149   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/cc2CcJyq.s:3373   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:3379   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/cc2CcJyq.s:3578   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/cc2CcJyq.s:3584   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/cc2CcJyq.s:3652   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/cc2CcJyq.s:3658   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/cc2CcJyq.s:3730   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:3736   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/cc2CcJyq.s:3788   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:3794   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/cc2CcJyq.s:3856   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/cc2CcJyq.s:3862   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/cc2CcJyq.s:3927   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/cc2CcJyq.s:3933   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/cc2CcJyq.s:3985   .text.vQueueAddToRegistry:0000000000000024 $d
     /tmp/cc2CcJyq.s:3990   .text.pcQueueGetName:0000000000000000 $t
     /tmp/cc2CcJyq.s:3996   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/cc2CcJyq.s:4049   .text.pcQueueGetName:0000000000000024 $d
     /tmp/cc2CcJyq.s:4054   .text.vQueueUnregisterQueue:0000000000000000 $t
ARM GAS  /tmp/cc2CcJyq.s 			page 148


     /tmp/cc2CcJyq.s:4060   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/cc2CcJyq.s:4114   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/cc2CcJyq.s:4119   .text.vQueueDelete:0000000000000000 $t
     /tmp/cc2CcJyq.s:4125   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/cc2CcJyq.s:4194   .bss.xQueueRegistry:0000000000000000 xQueueRegistry
     /tmp/cc2CcJyq.s:4190   .bss.xQueueRegistry:0000000000000000 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
xTaskResumeAll
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
